<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stats">

	<select id="statsList" parameterType="hashMap" resultType="hashMap">
		SELECT * 
	    FROM (SELECT A.*, ROWNUM RNUM
	          FROM (SELECT TBL.* 
	                    FROM (SELECT
	                             AA.ID, AA.ORDERNO, AA.IDENTYID, AA.EXAMCODE
	                           , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
	                           , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.EXAMSTATUS
	                           , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
	                           , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
	                           , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
	                           , DD.SCOREYN
	                           , CC.PAYMENTAMOUNT, AA.PAYMENTSTATE
	                      FROM TB_TORDERS AA, TB_TMOCKREGISTRATION BB, TB_TAPPROVALS CC,
	                      (SELECT MOCKCODE, IDENTYID, COUNT(ID) SCOREYN
	                       FROM TB_TMOCKGRADE 
	                       GROUP BY MOCKCODE, IDENTYID) DD
	                      WHERE AA.EXAMCODE = BB.MOCKCODE
	                      AND AA.IDENTYID = CC.IDENTYID
	                      AND  AA.EXAMCODE = DD.MOCKCODE
	                      AND  AA.IDENTYID = DD.IDENTYID
	                     ) TBL
	               WHERE TBL.PAYMENTSTATE = 1
	               <if test='SEARCHYEAR != null and SEARCHYEAR != ""'>
	               AND TBL.EXAMYEAR = #{SEARCHYEAR}
	               </if>
	               <if test='SEARCHROUND !=null and SEARCHROUND != ""'>
	               AND TBL.EXAMROUND = #{SEARCHROUND}
	               </if>
	               <if test='SEARCHTEXT != null and SEARCHTEXT != ""'>
	                   <if test='SEARCHTYPE != null and SEARCHTYPE != ""'>
	                       <if test='SEARCHTYPE == "1"'>
	               AND TBL.IDENTYID LIKE '%'||#{SEARCHTEXT}||'%'
	                       </if>
	                       <if test='SEARCHTYPE == "2"'>
	               AND (TBL.USER_NM LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.USER_ID LIKE '%'||#{SEARCHTEXT}||'%')
	                       </if>
	                       <if test='SEARCHTYPE == "3"'>
	               AND TBL.MOCKNAME LIKE '%'||#{SEARCHTEXT}||'%'
	                       </if>
	                   </if>
	                   <if test='SEARCHTYPE == null or SEARCHTYPE == ""'>
	               AND (TBL.IDENTYID LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.USER_NM LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.USER_ID LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.MOCKNAME LIKE '%'||#{SEARCHTEXT}||'%')
	                   </if>
	               </if>
	               ORDER BY TBL.ID DESC
	              ) A
	          WHERE ROWNUM <![CDATA[ <= ]]> #{endNo}
	         )
	    WHERE RNUM <![CDATA[ > ]]> #{startNo}
	</select>

  <select id="statsListCount" parameterType="hashMap" resultType="int">
    SELECT COUNT(TBL.ID) FROM (
	                    SELECT
	                             AA.ID, AA.ORDERNO, AA.IDENTYID, AA.EXAMCODE
	                           , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
	                           , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.EXAMSTATUS
	                           , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
	                           , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
	                           , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
	                           , DD.SCOREYN
	                           , CC.PAYMENTAMOUNT, AA.PAYMENTSTATE
	                      FROM TB_TORDERS AA, TB_TMOCKREGISTRATION BB, TB_TAPPROVALS CC,
	                      (SELECT MOCKCODE, IDENTYID, COUNT(ID) SCOREYN
	                       FROM TB_TMOCKGRADE 
	                       GROUP BY MOCKCODE, IDENTYID) DD
	                      WHERE AA.EXAMCODE = BB.MOCKCODE
	                      AND AA.IDENTYID = CC.IDENTYID
	                      AND  AA.EXAMCODE = DD.MOCKCODE
	                      AND  AA.IDENTYID = DD.IDENTYID
	                     ) TBL
	               WHERE TBL.PAYMENTSTATE = 1
	               <if test='SEARCHYEAR != null and SEARCHYEAR != ""'>
	               AND TBL.EXAMYEAR = #{SEARCHYEAR}
	               </if>
	               <if test='SEARCHROUND !=null and SEARCHROUND != ""'>
	               AND TBL.EXAMROUND = #{SEARCHROUND}
	               </if>
	               <if test='SEARCHTEXT != null and SEARCHTEXT != ""'>
	                   <if test='SEARCHTYPE != null and SEARCHTYPE != ""'>
	                       <if test='SEARCHTYPE == "1"'>
	               AND TBL.IDENTYID LIKE '%'||#{SEARCHTEXT}||'%'
	                       </if>
	                       <if test='SEARCHTYPE == "2"'>
	               AND (TBL.USER_NM LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.USER_ID LIKE '%'||#{SEARCHTEXT}||'%')
	                       </if>
	                       <if test='SEARCHTYPE == "3"'>
	               AND TBL.MOCKNAME LIKE '%'||#{SEARCHTEXT}||'%'
	                       </if>
	                   </if>
	                   <if test='SEARCHTYPE == null or SEARCHTYPE == ""'>
	               AND (TBL.IDENTYID LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.USER_NM LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.USER_ID LIKE '%'||#{SEARCHTEXT}||'%'
	                    OR TBL.MOCKNAME LIKE '%'||#{SEARCHTEXT}||'%')
	                   </if>
	               </if>
  </select>

  <select id="offererList" parameterType="hashMap" resultType="hashMap">
    SELECT * FROM   (
      SELECT A.*, ROWNUM rnum
        FROM (
          SELECT * FROM (
            SELECT
              AA.ID, AA.ORDERNO, AA.IDENTYID
              , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
              , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.PAYMENTSTATE
              , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
              , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
              , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
              , (SELECT LISTAGG(CC.ITEMID,', ') WITHIN GROUP(ORDER BY ITEMID) AS ITEMID
                  FROM TB_TUSERCHOICESUBJECT CC WHERE CC.IDENTYID = AA.IDENTYID) AS ITEMID
              , (SELECT LISTAGG(EE.SUBJECT_NM,', ') WITHIN GROUP(ORDER BY SUBJECTORDER) AS ITEMID
                  FROM TB_TUSERCHOICESUBJECT CC
                  LEFT JOIN TB_TITEM DD ON CC.ITEMID = DD.ITEMID
                  LEFT JOIN TB_SUBJECT_INFO EE ON DD.SUBJECT_CD = EE.SUBJECT_CD
                  WHERE CC.IDENTYID = AA.IDENTYID ) AS SUBJECT_NM
              , CC.PAYMENTAMOUNT
            FROM TB_TORDERS AA
            LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
            LEFT JOIN TB_TAPPROVALS CC ON AA.IDENTYID = CC.IDENTYID
          ) TBL
          WHERE 1=1
          AND TBL.PAYMENTSTATE = 1
        <!-- AND TBL.PAYMENTAMOUNT <![CDATA[>]]> 0   -->
        <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
          AND TBL.EXAMYEAR = #{SEARCHYEAR}
        </if>
        <if test="SEARCHROUND !=null and SEARCHROUND != ''">
          AND TBL.EXAMROUND = #{SEARCHROUND}
        </if>
        <if test="SEARCHEXAMTYPE !=null and SEARCHEXAMTYPE != ''">
          AND TBL.EXAMTYPE = #{SEARCHEXAMTYPE}
        </if>
        <if test="SEARCHCLASSCODE !=null and SEARCHCLASSCODE != ''">
          AND TBL.CLASSCODE = #{SEARCHCLASSCODE}
        </if>
        <if test="SEARCHCLASSSERIESCODE !=null and SEARCHCLASSSERIESCODE != ''">
          AND TBL.CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
        </if>
        <if test="SEARCHSUBJECT !=null and SEARCHSUBJECT != ''">
          AND TBL.ITEMID LIKE '%'|| #{SEARCHSUBJECT} || ',' || '%' OR  ITEMID LIKE '%' || ', ' || #{SEARCHSUBJECT} || '%'
        </if>

        ORDER BY TBL.ID DESC
      ) A
      WHERE rownum <![CDATA[ <= ]]> #{endNo}
    )
    WHERE rnum <![CDATA[ > ]]> #{startNo}
  </select>

  <select id="offererListCount" parameterType="hashMap" resultType="int">
    SELECT COUNT(TBL.ID) FROM (
      SELECT
        AA.ID, AA.ORDERNO, AA.IDENTYID
        , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
        , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.PAYMENTSTATE
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
        , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
        , (SELECT LISTAGG(CC.ITEMID,', ') WITHIN GROUP(ORDER BY ITEMID) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC WHERE CC.IDENTYID = AA.IDENTYID) AS ITEMID
        , (SELECT LISTAGG(EE.SUBJECT_NM,', ') WITHIN GROUP(ORDER BY SUBJECTORDER) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC
            LEFT JOIN TB_TITEM DD ON CC.ITEMID = DD.ITEMID
            LEFT JOIN TB_SUBJECT_INFO EE ON DD.SUBJECT_CD = EE.SUBJECT_CD WHERE CC.IDENTYID = AA.IDENTYID ) AS SUBJECT_NM
        , CC.PAYMENTAMOUNT
      FROM TB_TORDERS AA
      LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
      LEFT JOIN TB_TAPPROVALS CC ON AA.IDENTYID = CC.IDENTYID
    ) TBL WHERE 1=1 AND TBL.PAYMENTSTATE = 1
    <!-- AND TBL.PAYMENTAMOUNT <![CDATA[>]]> 0 -->
  <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
    AND TBL.EXAMYEAR = #{SEARCHYEAR}
  </if>
  <if test="SEARCHROUND !=null and SEARCHROUND != ''">
    AND TBL.EXAMROUND = #{SEARCHROUND}
  </if>
  <if test="SEARCHEXAMTYPE !=null and SEARCHEXAMTYPE != ''">
    AND TBL.EXAMTYPE = #{SEARCHEXAMTYPE}
  </if>
  <if test="SEARCHCLASSCODE !=null and SEARCHCLASSCODE != ''">
    AND TBL.CLASSCODE = #{SEARCHCLASSCODE}
  </if>
  <if test="SEARCHCLASSSERIESCODE !=null and SEARCHCLASSSERIESCODE != ''">
    AND TBL.CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
  </if>
  <if test="SEARCHSUBJECT !=null and SEARCHSUBJECT != ''">
    AND TBL.ITEMID LIKE '%'|| #{SEARCHSUBJECT} || ',' || '%' OR  ITEMID LIKE '%' || ', ' || #{SEARCHSUBJECT} || '%'
  </if>
  </select>

  <select id="offererListExcel" parameterType="hashMap" resultType="hashMap">
    SELECT * FROM (
      SELECT
        AA.ID, AA.ORDERNO, AA.IDENTYID
        , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
        , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.PAYMENTSTATE
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
        , BB.MOCKNAME, TO_CHAR(BB.EXAMYEAR) AS EXAMYEAR, TO_CHAR(BB.EXAMROUND) AS EXAMROUND
        , (SELECT LISTAGG(CC.ITEMID,', ') WITHIN GROUP(ORDER BY ITEMID) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC WHERE CC.IDENTYID = AA.IDENTYID) AS ITEMID
        , NVL( (SELECT LISTAGG(EE.SUBJECT_NM,', ') WITHIN GROUP(ORDER BY SUBJECTORDER) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC
            LEFT JOIN TB_TITEM DD ON CC.ITEMID = DD.ITEMID
            LEFT JOIN TB_SUBJECT_INFO EE ON DD.SUBJECT_CD = EE.SUBJECT_CD WHERE CC.IDENTYID = AA.IDENTYID ), ' ') AS SUBJECT_NM
        , CC.PAYMENTAMOUNT
      FROM TB_TORDERS AA
      LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
      LEFT JOIN TB_TAPPROVALS CC ON AA.IDENTYID = CC.IDENTYID
    ) TBL WHERE 1=1 AND TBL.PAYMENTSTATE = 1
  <!--  AND TBL.PAYMENTAMOUNT <![CDATA[>]]> 0 -->
  <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
    AND TBL.EXAMYEAR = #{SEARCHYEAR}
  </if>
  <if test="SEARCHROUND !=null and SEARCHROUND != ''">
    AND TBL.EXAMROUND = #{SEARCHROUND}
  </if>
  <if test="SEARCHEXAMTYPE !=null and SEARCHEXAMTYPE != ''">
    AND TBL.EXAMTYPE = #{SEARCHEXAMTYPE}
   </if>
  <if test="SEARCHCLASSCODE !=null and SEARCHCLASSCODE != ''">
    AND TBL.CLASSCODE = #{SEARCHCLASSCODE}
  </if>
  <if test="SEARCHCLASSSERIESCODE !=null and SEARCHCLASSSERIESCODE != ''">
    AND TBL.CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
  </if>
  <if test="SEARCHSUBJECT !=null and SEARCHSUBJECT != ''">
    AND TBL.ITEMID LIKE '%'|| #{SEARCHSUBJECT} || ',' || '%' OR  ITEMID LIKE '%' || ', ' || #{SEARCHSUBJECT} || '%'
  </if>
    ORDER BY TBL.ID DESC
  </select>

  <select id="getSubjectList" parameterType="hashMap" resultType="hashMap">
    SELECT BB.ITEMID, CC.SUBJECT_NM, AA.*
    FROM TB_TCCSRSSUBJECTINFO AA
    LEFT JOIN TB_TITEM BB ON AA.SUBJECT_CD = BB.SUBJECT_CD
    LEFT JOIN TB_SUBJECT_INFO CC ON AA.SUBJECT_CD = CC.SUBJECT_CD
    WHERE CLASSCODE = #{SEARCHCLASSCODE} AND CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
    AND BB.ITEMID IS NOT NULL
    ORDER BY AA.SUBJECTTYPEDIVISION ASC, AA.SUBJECTORDER ASC
  </select>

  <select id="offererOnCntY" parameterType="hashMap" resultType="int">
    SELECT COUNT(TBL.ID) FROM (
      SELECT
        AA.ID, AA.ORDERNO, AA.IDENTYID
        , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
        , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.PAYMENTSTATE
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
        , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
        , (SELECT LISTAGG(CC.ITEMID,', ') WITHIN GROUP(ORDER BY ITEMID) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC WHERE CC.IDENTYID = AA.IDENTYID) AS ITEMID
        , (SELECT LISTAGG(EE.SUBJECT_NM,', ') WITHIN GROUP(ORDER BY SUBJECTORDER) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC
            LEFT JOIN TB_TITEM DD ON CC.ITEMID = DD.ITEMID
            LEFT JOIN TB_SUBJECT_INFO EE ON DD.SUBJECT_CD = EE.SUBJECT_CD WHERE CC.IDENTYID = AA.IDENTYID ) AS SUBJECT_NM
        , CC.PAYMENTAMOUNT
      FROM TB_TORDERS AA
      LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
      LEFT JOIN TB_TAPPROVALS CC ON AA.IDENTYID = CC.IDENTYID
    ) TBL WHERE 1=1
    AND TBL.EXAMTYPE = 0
    AND TBL.PAYMENTSTATE = 1
  <!-- AND TBL.PAYMENTAMOUNT <![CDATA[>]]> 0 -->
  <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
    AND TBL.EXAMYEAR = #{SEARCHYEAR}
  </if>
  <if test="SEARCHROUND !=null and SEARCHROUND != ''">
    AND TBL.EXAMROUND = #{SEARCHROUND}
  </if>
  <if test="SEARCHEXAMTYPE !=null and SEARCHEXAMTYPE != ''">
    AND TBL.EXAMTYPE = #{SEARCHEXAMTYPE}
  </if>
  <if test="SEARCHCLASSCODE !=null and SEARCHCLASSCODE != ''">
    AND TBL.CLASSCODE = #{SEARCHCLASSCODE}
  </if>
  <if test="SEARCHCLASSSERIESCODE !=null and SEARCHCLASSSERIESCODE != ''">
    AND TBL.CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
  </if>
  <if test="SEARCHSUBJECT !=null and SEARCHSUBJECT != ''">
    AND TBL.ITEMID LIKE '%'|| #{SEARCHSUBJECT} || ',' || '%' OR  ITEMID LIKE '%' || ', ' || #{SEARCHSUBJECT} || '%'
  </if>
  </select>

  <select id="offererOnCntN" parameterType="hashMap" resultType="int">
    SELECT COUNT(TBL.ID) FROM (
      SELECT
        AA.ID, AA.ORDERNO, AA.IDENTYID
        , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
        , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.PAYMENTSTATE
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
        , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
        , (SELECT LISTAGG(CC.ITEMID,', ') WITHIN GROUP(ORDER BY ITEMID) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC WHERE CC.IDENTYID = AA.IDENTYID) AS ITEMID
        , (SELECT LISTAGG(EE.SUBJECT_NM,', ') WITHIN GROUP(ORDER BY SUBJECTORDER) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC
            LEFT JOIN TB_TITEM DD ON CC.ITEMID = DD.ITEMID
            LEFT JOIN TB_SUBJECT_INFO EE ON DD.SUBJECT_CD = EE.SUBJECT_CD WHERE CC.IDENTYID = AA.IDENTYID ) AS SUBJECT_NM
      FROM TB_TORDERS AA
      LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
    ) TBL WHERE 1=1
    AND TBL.EXAMTYPE = 0
    AND (TBL.PAYMENTSTATE = 2 OR TBL.PAYMENTSTATE = 3)
  <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
    AND TBL.EXAMYEAR = #{SEARCHYEAR}
  </if>
  <if test="SEARCHROUND !=null and SEARCHROUND != ''">
    AND TBL.EXAMROUND = #{SEARCHROUND}
  </if>
  <if test="SEARCHEXAMTYPE !=null and SEARCHEXAMTYPE != ''">
    AND TBL.EXAMTYPE = #{SEARCHEXAMTYPE}
  </if>
  <if test="SEARCHCLASSCODE !=null and SEARCHCLASSCODE != ''">
    AND TBL.CLASSCODE = #{SEARCHCLASSCODE}
  </if>
  <if test="SEARCHCLASSSERIESCODE !=null and SEARCHCLASSSERIESCODE != ''">
    AND TBL.CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
  </if>
  <if test="SEARCHSUBJECT !=null and SEARCHSUBJECT != ''">
    AND TBL.ITEMID LIKE '%'|| #{SEARCHSUBJECT} || ',' || '%' OR  ITEMID LIKE '%' || ', ' || #{SEARCHSUBJECT} || '%'
  </if>
  </select>

  <select id="offererOffCntY" parameterType="hashMap" resultType="int">
    SELECT COUNT(TBL.ID) FROM (
      SELECT
        AA.ID, AA.ORDERNO, AA.IDENTYID
        , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
        , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.PAYMENTSTATE
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
        , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
        , (SELECT LISTAGG(CC.ITEMID,', ') WITHIN GROUP(ORDER BY ITEMID) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC WHERE CC.IDENTYID = AA.IDENTYID) AS ITEMID
        , (SELECT LISTAGG(EE.SUBJECT_NM,', ') WITHIN GROUP(ORDER BY SUBJECTORDER) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC
            LEFT JOIN TB_TITEM DD ON CC.ITEMID = DD.ITEMID
            LEFT JOIN TB_SUBJECT_INFO EE ON DD.SUBJECT_CD = EE.SUBJECT_CD WHERE CC.IDENTYID = AA.IDENTYID ) AS SUBJECT_NM
        , CC.PAYMENTAMOUNT
      FROM TB_TORDERS AA
      LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
      LEFT JOIN TB_TAPPROVALS CC ON AA.IDENTYID = CC.IDENTYID
    ) TBL WHERE 1=1
    AND TBL.EXAMTYPE = 1
    AND TBL.PAYMENTSTATE = 1
    <!--    AND TBL.PAYMENTAMOUNT <![CDATA[>]]> 0      -->
  <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
    AND TBL.EXAMYEAR = #{SEARCHYEAR}
  </if>
  <if test="SEARCHROUND !=null and SEARCHROUND != ''">
    AND TBL.EXAMROUND = #{SEARCHROUND}
  </if>
  <if test="SEARCHEXAMTYPE !=null and SEARCHEXAMTYPE != ''">
    AND TBL.EXAMTYPE = #{SEARCHEXAMTYPE}
  </if>
  <if test="SEARCHCLASSCODE !=null and SEARCHCLASSCODE != ''">
    AND TBL.CLASSCODE = #{SEARCHCLASSCODE}
  </if>
  <if test="SEARCHCLASSSERIESCODE !=null and SEARCHCLASSSERIESCODE != ''">
    AND TBL.CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
  </if>
  <if test="SEARCHSUBJECT !=null and SEARCHSUBJECT != ''">
    AND TBL.ITEMID LIKE '%'|| #{SEARCHSUBJECT} || ',' || '%' OR  ITEMID LIKE '%' || ', ' || #{SEARCHSUBJECT} || '%'
  </if>
  </select>

  <select id="offererOffCntN" parameterType="hashMap" resultType="int">
    SELECT COUNT(TBL.ID) FROM (
      SELECT
        AA.ID, AA.ORDERNO, AA.IDENTYID
        , AA.EXAMTYPE, AA.USER_ID, AA.USER_NM, AA.PHONE_NO
        , AA.CLASSCODE, AA.CLASSSERIESCODE, AA.PAYMENTSTATE
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
        , BB.MOCKNAME, BB.EXAMYEAR, BB.EXAMROUND
        , (SELECT LISTAGG(CC.ITEMID,', ') WITHIN GROUP(ORDER BY ITEMID) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC WHERE CC.IDENTYID = AA.IDENTYID) AS ITEMID
        , (SELECT LISTAGG(EE.SUBJECT_NM,', ') WITHIN GROUP(ORDER BY SUBJECTORDER) AS ITEMID
            FROM TB_TUSERCHOICESUBJECT CC
            LEFT JOIN TB_TITEM DD ON CC.ITEMID = DD.ITEMID
            LEFT JOIN TB_SUBJECT_INFO EE ON DD.SUBJECT_CD = EE.SUBJECT_CD WHERE CC.IDENTYID = AA.IDENTYID ) AS SUBJECT_NM
      FROM TB_TORDERS AA
      LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
    ) TBL WHERE 1=1
    AND TBL.EXAMTYPE = 1
    AND (TBL.PAYMENTSTATE = 2 OR TBL.PAYMENTSTATE = 3)
  <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
    AND TBL.EXAMYEAR = #{SEARCHYEAR}
  </if>
  <if test="SEARCHROUND !=null and SEARCHROUND != ''">
    AND TBL.EXAMROUND = #{SEARCHROUND}
  </if>
  <if test="SEARCHEXAMTYPE !=null and SEARCHEXAMTYPE != ''">
    AND TBL.EXAMTYPE = #{SEARCHEXAMTYPE}
  </if>
  <if test="SEARCHCLASSCODE !=null and SEARCHCLASSCODE != ''">
    AND TBL.CLASSCODE = #{SEARCHCLASSCODE}
  </if>
  <if test="SEARCHCLASSSERIESCODE !=null and SEARCHCLASSSERIESCODE != ''">
    AND TBL.CLASSSERIESCODE = #{SEARCHCLASSSERIESCODE}
  </if>
  <if test="SEARCHSUBJECT !=null and SEARCHSUBJECT != ''">
    AND TBL.ITEMID LIKE '%'|| #{SEARCHSUBJECT} || ',' || '%' OR  ITEMID LIKE '%' || ', ' || #{SEARCHSUBJECT} || '%'
  </if>
  </select>

  <select id="statsSubjectList" parameterType="hashMap" resultType="hashMap">
    SELECT
        AA.EXAMCODE, AA.ORDERNO, AA.IDENTYID, BB.ITEMID, DD.SUBJECT_NM, FF.QUESTIONNUM
    FROM TB_TORDERS AA
    LEFT JOIN TB_TUSERCHOICESUBJECT BB ON AA.IDENTYID = BB.IDENTYID
    LEFT JOIN TB_TMOCKSUBJECT CC ON BB.ITEMID = CC.ITEMID AND CC.MOCKCODE = AA.EXAMCODE
    LEFT JOIN TB_SUBJECT_INFO DD ON CC.SUBJECT_CD = DD.SUBJECT_CD
    LEFT JOIN TB_TMOCKREGISTRATION EE ON AA.EXAMCODE = EE.MOCKCODE
    LEFT JOIN TB_TITEM FF ON BB.ITEMID = FF.ITEMID AND DD.SUBJECT_CD = FF.SUBJECT_CD
    WHERE AA.IDENTYID = #{IDENTYID}
    ORDER BY BB.SUBJECTTYPEDIVISION ASC, BB.SUBJECTORDER ASC
  </select>

  <select id="statsSubjectAnswerList" parameterType="hashMap" resultType="hashMap">
        SELECT
            SUBJECT_NM, IDENTYID, ITEMID, QUESTIONNUMBER, MOCKCODE, UANSWERNUMBER, CORRECTYN
            , QUESTIONRANGE, QUESTIONPATTERN, LEVELDIFFICULTY
            , DECODE(LEVELDIFFICULTY, '1', '상', '2', '중', '3', '하') LEVELDIFFICULTYNAME, QANSWERNUMBER
            , ACNT, TACNT, ROUND((ACNT / TACNT) * 100) AS ARATIO
        FROM (
          SELECT
           DD.SUBJECT_NM
            , AA.IDENTYID, AA.ITEMID, AA.QUESTIONNUMBER
            , AA.MOCKCODE, AA.ANSWERNUMBER AS UANSWERNUMBER, AA.CORRECTYN
            , BB.QUESTIONRANGE, BB.QUESTIONPATTERN, BB.LEVELDIFFICULTY, BB.ANSWERNUMBER AS QANSWERNUMBER
            , EE.ACNT, FF.TACNT
          FROM <choose><when test='EXAMYN == "Y"'>TB_TEXAMINEEANSWER</when><otherwise>TB_TEXAMINEEANSWER_USER</otherwise></choose> AA, 
                   TB_TITEMPOOL BB, TB_TITEM CC, TB_SUBJECT_INFO DD, 
          (SELECT MOCKCODE, ITEMID, QUESTIONNUMBER, COUNT(ID) AS ACNT 
           FROM <choose><when test='EXAMYN == "Y"'>TB_TEXAMINEEANSWER</when><otherwise>TB_TEXAMINEEANSWER_USER</otherwise></choose> 
           WHERE CORRECTYN = 'Y' GROUP BY MOCKCODE, ITEMID, QUESTIONNUMBER) EE,
          (SELECT MOCKCODE, ITEMID, QUESTIONNUMBER, COUNT(ID) AS TACNT 
           FROM <choose><when test='EXAMYN == "Y"'>TB_TEXAMINEEANSWER</when><otherwise>TB_TEXAMINEEANSWER_USER</otherwise></choose>  
           GROUP BY MOCKCODE, ITEMID, QUESTIONNUMBER) FF
          WHERE AA.ITEMID = BB.ITEMID 
          AND AA.QUESTIONNUMBER = BB.QUESTIONNUMBER
          AND AA.ITEMID = CC.ITEMID
          AND CC.SUBJECT_CD = DD.SUBJECT_CD
          AND AA.IDENTYID = #{IDENTYID}
          AND AA.MOCKCODE = EE.MOCKCODE 
          AND AA.ITEMID = EE.ITEMID 
          AND AA.QUESTIONNUMBER = EE.QUESTIONNUMBER
          AND AA.MOCKCODE = FF.MOCKCODE 
          AND AA.ITEMID = FF.ITEMID 
          AND AA.QUESTIONNUMBER = FF.QUESTIONNUMBER
       ) TBL  ORDER BY ITEMID ASC, QUESTIONNUMBER ASC
  </select>

  <select id="statsSubjectInfoList" parameterType="hashMap" resultType="hashMap">
        SELECT TBL.ID, TBL.ITEMID, TBL.SUBJECT_CD, TBL.SUBJECT_NM, TBL.SUBJECTAREA, TBL.QUESTIONRANGE,
               TBL.QYCNT, TBL.QTCNT, (TBL.QYCNT/TBL.QTCNT) AS QPERCENT
        FROM (SELECT CC.ID, AA.ITEMID, DD.SUBJECT_CD, DD.SUBJECT_NM, CC.SUBJECTAREA, CC.QUESTIONRANGE, 
                     AA.SUBJECTTYPEDIVISION , AA.SUBJECTORDER, CC.AREAORDER, 
                     EE.QYCNT, FF.QTCNT
              FROM TB_TUSERCHOICESUBJECT AA, TB_TITEM BB,
              (SELECT B.ID, ITEMID, QUESTIONRANGE, SUBJECTAREA, AREAORDER
               FROM TB_TITEMPOOL A, TB_TSUBJECTAREA B
               WHERE A.QUESTIONRANGE = B.ID
               GROUP BY B.ID, ITEMID, QUESTIONRANGE, SUBJECTAREA, AREAORDER
              ) CC, TB_SUBJECT_INFO DD, 
              (SELECT AAA.ITEMID, BBB.QUESTIONRANGE, COUNT(AAA.QUESTIONNUMBER) AS QYCNT 
               FROM <choose><when test='EXAMYN == "Y"'>TB_TEXAMINEEANSWER</when><otherwise>TB_TEXAMINEEANSWER_USER</otherwise></choose> AAA, 
                        TB_TITEMPOOL BBB, TB_TORDERS CCC
               WHERE AAA.QUESTIONNUMBER = BBB.QUESTIONNUMBER 
               AND AAA.ITEMID = BBB.ITEMID
               AND AAA.IDENTYID = CCC.IDENTYID
               AND CCC.EXAMSTATUS = 3 
               AND AAA.CORRECTYN = 'Y'
               AND AAA.MOCKCODE = #{MOCKCODE}
               GROUP BY AAA.ITEMID, BBB.QUESTIONRANGE) EE,
              (SELECT AAA.ITEMID,  AAA.QUESTIONRANGE, COUNT(AAA.ITEMID) QTCNT
               FROM (SELECT CCC.EXAMSTATUS, AAA.MOCKCODE, AAA.ITEMID, BBB.QUESTIONRANGE, AAA.IDENTYID
                     FROM <choose><when test='EXAMYN == "Y"'>TB_TEXAMINEEANSWER</when><otherwise>TB_TEXAMINEEANSWER_USER</otherwise></choose> AAA, 
                              TB_TITEMPOOL BBB, TB_TORDERS CCC
                     WHERE AAA.QUESTIONNUMBER = BBB.QUESTIONNUMBER 
                     AND AAA.ITEMID = BBB.ITEMID
                     AND AAA.IDENTYID = CCC.IDENTYID
                     GROUP BY CCC.EXAMSTATUS, AAA.MOCKCODE, AAA.ITEMID, BBB.QUESTIONRANGE, AAA.IDENTYID
                     ) AAA
               WHERE AAA.EXAMSTATUS = 3 
               AND AAA.MOCKCODE = #{MOCKCODE}
               GROUP BY AAA.ITEMID,  AAA.QUESTIONRANGE) FF
              WHERE AA.ITEMID = BB.ITEMID
              AND AA.ITEMID = CC.ITEMID
              AND BB.SUBJECT_CD = DD.SUBJECT_CD
             AND AA.ITEMID = EE.ITEMID
             AND CC.QUESTIONRANGE = EE.QUESTIONRANGE 
            AND AA.ITEMID = FF.ITEMID 
            AND CC.QUESTIONRANGE = FF.QUESTIONRANGE
            AND AA.IDENTYID = #{IDENTYID}
        ) TBL
        ORDER BY TBL.SUBJECTTYPEDIVISION ASC, TBL.SUBJECTORDER ASC, TBL.AREAORDER ASC
  </select>

  <select id="statsTotalInfoList" parameterType="hashMap" resultType="hashMap">
    SELECT
        AA.USER_ID, AA.USER_NM, AA.PHONE_NO, AA.IDENTYID
        , BB.EXAMSTARTTIME, BB.MOCKNAME
        , AA.CLASSCODE, AA.CLASSSERIESCODE
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = 'CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
        , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = AA.CLASSSERIESCODE ) CLASSSERIESCODENM
    FROM TB_TORDERS AA
    LEFT JOIN TB_TMOCKREGISTRATION BB ON AA.EXAMCODE = BB.MOCKCODE
    WHERE AA.IDENTYID = #{IDENTYID}
  </select>

  <select id="statsTotalInfo1" parameterType="hashMap" resultType="hashMap">
    SELECT
      '총점' AS TIT
      , (SELECT TO_CHAR(SUM(ORIGINGRADE)) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND IDENTYID = #{IDENTYID}) AS VAL1
      , (SELECT TO_CHAR(SUM(ADJUSTGRADE)) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND IDENTYID = #{IDENTYID}) AS VAL2
    FROM DUAL

  UNION ALL

    SELECT
      '평균' AS TIT
      , (SELECT TO_CHAR(ROUND(AVG(ORIGINGRADE))) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND IDENTYID = #{IDENTYID}) AS VAL1
      , (SELECT TO_CHAR(ROUND(AVG(ADJUSTGRADE))) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND IDENTYID = #{IDENTYID}) AS VAL2
    FROM DUAL

  UNION ALL

    SELECT
      '전체평균' AS TIT
      , (SELECT TO_CHAR(ROUND(AVG(POINT))) FROM (SELECT AVG(ORIGINGRADE) POINT FROM TB_TMOCKGRADE GROUP BY MOCKCODE, IDENTYID HAVING MOCKCODE = #{MOCKCODE})) AS VAL1
      , (SELECT TO_CHAR(ROUND(AVG(POINT))) FROM (SELECT AVG(ADJUSTGRADE) POINT FROM TB_TMOCKGRADE GROUP BY MOCKCODE, IDENTYID HAVING MOCKCODE = #{MOCKCODE})) AS VAL2
    FROM DUAL

  UNION ALL

    SELECT
      '석차' AS TIT
      , (SELECT TO_CHAR(RANK)
          FROM (
            SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK
            FROM (
              SELECT MOCKCODE, IDENTYID, SUM(ORIGINGRADE) AS POINT
              FROM TB_TMOCKGRADE GROUP BY MOCKCODE, IDENTYID
              <if test='CLASSCODE != null and CLASSCODE !=""'>
                , CLASSCODE
              </if>
              <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
                , CLASSSERIESCODE
              </if>
                HAVING MOCKCODE = #{MOCKCODE}
              <if test='CLASSCODE != null and CLASSCODE !=""'>
                AND CLASSCODE = #{CLASSCODE}
              </if>
              <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
                AND CLASSSERIESCODE = #{CLASSSERIESCODE}
              </if>
            )
        ) WHERE IDENTYID = #{IDENTYID}) AS VAL1
      , (SELECT TO_CHAR(RANK)
          FROM (
            SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK
            FROM (
              SELECT MOCKCODE, IDENTYID, SUM(ADJUSTGRADE) AS POINT
              FROM TB_TMOCKGRADE GROUP BY MOCKCODE, IDENTYID
              <if test='CLASSCODE != null and CLASSCODE !=""'>
                , CLASSCODE
              </if>
              <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
                , CLASSSERIESCODE
              </if>
                HAVING MOCKCODE = #{MOCKCODE}
              <if test='CLASSCODE != null and CLASSCODE !=""'>
                AND CLASSCODE = #{CLASSCODE}
              </if>
              <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
                AND CLASSSERIESCODE = #{CLASSSERIESCODE}
              </if>
            )
        ) WHERE IDENTYID = #{IDENTYID}) AS VAL2
    FROM DUAL

  UNION ALL

    SELECT
      '응시인원' AS TIT
      , (SELECT TO_CHAR(COUNT(*))
          FROM (
            SELECT COUNT(IDENTYID)
            FROM TB_TMOCKGRADE GROUP BY MOCKCODE, IDENTYID
            <if test='CLASSCODE != null and CLASSCODE !=""'>
              , CLASSCODE
            </if>
            <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
              , CLASSSERIESCODE
            </if>
              HAVING MOCKCODE = #{MOCKCODE}
            <if test='CLASSCODE != null and CLASSCODE !=""'>
              AND CLASSCODE = #{CLASSCODE}
            </if>
            <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
              AND CLASSSERIESCODE = #{CLASSSERIESCODE}
            </if>
          )
        ) AS VAL1
      , (SELECT TO_CHAR(COUNT(*))
          FROM (
            SELECT COUNT(IDENTYID)
            FROM TB_TMOCKGRADE GROUP BY MOCKCODE, IDENTYID
            <if test='CLASSCODE != null and CLASSCODE !=""'>
              , CLASSCODE
            </if>
            <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
              , CLASSSERIESCODE
            </if>
              HAVING MOCKCODE = #{MOCKCODE}
            <if test='CLASSCODE != null and CLASSCODE !=""'>
              AND CLASSCODE = #{CLASSCODE}
            </if>
            <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
              AND CLASSSERIESCODE = #{CLASSSERIESCODE}
            </if>
          )
        ) AS VAL2
    FROM DUAL

  UNION ALL

    SELECT '상위점수' AS TIT
      , (SELECT TO_CHAR(ROUND(NVL(POINT,0))) AS VAL
          FROM (
            SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK, POINT
            FROM (
              SELECT MOCKCODE, IDENTYID, AVG(ORIGINGRADE) AS POINT FROM TB_TMOCKGRADE
              GROUP BY MOCKCODE, IDENTYID HAVING MOCKCODE = #{MOCKCODE}
            )
          ) TBL
          WHERE RANK <![CDATA[<=]]> (SELECT CEIL(COUNT(*)*0.2) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} )
          AND ROWNUM <![CDATA[<]]> 2
      ) AS VAL1
      , (SELECT TO_CHAR(ROUND(NVL(POINT,0))) AS VAL
          FROM (
            SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK, POINT
            FROM (
                SELECT MOCKCODE, IDENTYID, AVG(ADJUSTGRADE) AS POINT FROM TB_TMOCKGRADE
                GROUP BY MOCKCODE, IDENTYID HAVING MOCKCODE = #{MOCKCODE}
            )
          ) TBL
          WHERE RANK <![CDATA[<=]]> (SELECT CEIL(COUNT(*)*0.2) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} )
          AND ROWNUM <![CDATA[<]]> 2
      ) AS VAL2
    FROM DUAL
  </select>

  <select id="statsTotalInfo2" parameterType="hashMap" resultType="hashMap">
    SELECT MOCKCODE, IDENTYID, AVER
        , RANK() OVER(PARTITION BY MOCKCODE ORDER BY AVER) AS RANK
    FROM (
        SELECT MOCKCODE, IDENTYID, ROUND(AVG(ADJUSTGRADE)) AS AVER
        FROM TB_TMOCKGRADE
        GROUP BY MOCKCODE, IDENTYID
      <if test='CLASSCODE != null and CLASSCODE !=""'>
        , CLASSCODE
      </if>
      <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
        , CLASSSERIESCODE
      </if>
        HAVING MOCKCODE = #{MOCKCODE}
      <if test='CLASSCODE != null and CLASSCODE !=""'>
        AND CLASSCODE = #{CLASSCODE}
      </if>
      <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
        AND CLASSSERIESCODE = #{CLASSSERIESCODE}
      </if>
    )
  </select>


  <select id="statsTotalInfo2_TblH" parameterType="hashMap" resultType="hashMap">
    SELECT
        AA.MOCKCODE, AA.IDENTYID, AA.SUBJECT_CD, AA.ORIGINGRADE, AA.ADJUSTGRADE
        , BB.SUBJECT_NM, TO_CHAR(DD.SUBJECTTYPEDIVISION) AS SUBJECTTYPEDIVISION
    FROM TB_TMOCKGRADE AA
    LEFT JOIN TB_SUBJECT_INFO BB ON AA.SUBJECT_CD = BB.SUBJECT_CD
    LEFT JOIN TB_TMOCKREGISTRATION EE ON AA.MOCKCODE = EE.MOCKCODE
    LEFT JOIN TB_TITEM CC ON AA.SUBJECT_CD = CC.SUBJECT_CD AND CC.EXAMYEAR = EE.EXAMYEAR AND CC.EXAMROUND = EE.EXAMROUND
    LEFT JOIN TB_TUSERCHOICESUBJECT DD ON CC.ITEMID = DD.ITEMID AND AA.IDENTYID = DD.IDENTYID
    WHERE AA.MOCKCODE = #{MOCKCODE} AND AA.IDENTYID = #{IDENTYID} AND DD.SUBJECTTYPEDIVISION <![CDATA[>]]> 0
    ORDER BY DD.SUBJECTTYPEDIVISION ASC, DD.SUBJECTORDER ASC
  </select>

  <select id="statsTotalInfo2_Tbl" parameterType="hashMap" resultType="hashMap">
    <if test="GUBN == null or GUBN ==''">
      SELECT
        '본인' AS TIT, NVL(TO_CHAR(ROUND(AVG(ORIGINGRADE))),'0') AS VAL
      FROM TB_TMOCKGRADE
      WHERE MOCKCODE = #{MOCKCODE}
      AND IDENTYID = #{IDENTYID}
      AND SUBJECT_CD = #{SUBJECT_CD}

    UNION ALL

      SELECT
        '전체' AS TIT, NVL(TO_CHAR(ROUND(AVG(ORIGINGRADE))),'0') AS VAL
      FROM TB_TMOCKGRADE
      WHERE MOCKCODE = #{MOCKCODE}
      AND SUBJECT_CD = #{SUBJECT_CD}

    UNION ALL

      SELECT
        '상위' AS TIT, TO_CHAR(NVL(POINT,0)) AS VAL
      FROM (
        SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK, POINT
        FROM (
          SELECT MOCKCODE, IDENTYID, AVG(ORIGINGRADE) AS POINT FROM TB_TMOCKGRADE
          GROUP BY MOCKCODE, IDENTYID, SUBJECT_CD HAVING MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD}
        )
      ) TBL
      WHERE RANK <![CDATA[<=]]> (SELECT CEIL(COUNT(*)*0.2) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD})
      AND ROWNUM <![CDATA[<]]> 2

    UNION ALL

      SELECT '석차' AS TIT
        , NVL(TO_CHAR(RANK)||'/'||(SELECT COUNT(*) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD}
            <if test='CLASSCODE != null and CLASSCODE !=""'>
              AND CLASSCODE = #{CLASSCODE}
            </if>
            <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
              AND CLASSSERIESCODE = #{CLASSSERIESCODE}
            </if>
          ),'0') AS VAL
      FROM (
        SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK
        FROM
          (SELECT MOCKCODE, IDENTYID, AVG(ORIGINGRADE) AS POINT
            FROM TB_TMOCKGRADE GROUP BY MOCKCODE, IDENTYID, SUBJECT_CD
          <if test='CLASSCODE != null and CLASSCODE !=""'>
            , CLASSCODE
          </if>
          <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
            , CLASSSERIESCODE
          </if>
            HAVING MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD}
          <if test='CLASSCODE != null and CLASSCODE !=""'>
            AND CLASSCODE = #{CLASSCODE}
          </if>
          <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
            AND CLASSSERIESCODE = #{CLASSSERIESCODE}
          </if>
        )
      ) WHERE IDENTYID = #{IDENTYID}
    </if>
    <if test="GUBN =='AD'">
      SELECT '본인' AS TIT, NVL(TO_CHAR(ROUND(AVG(ADJUSTGRADE))),'0') AS VAL
      FROM TB_TMOCKGRADE
      WHERE MOCKCODE = #{MOCKCODE}
      AND IDENTYID = #{IDENTYID}
      AND SUBJECT_CD = #{SUBJECT_CD}

    UNION ALL

      SELECT '전체' AS TIT, NVL(TO_CHAR(ROUND(AVG(ADJUSTGRADE))),'0') AS VAL
      FROM TB_TMOCKGRADE
      WHERE MOCKCODE = #{MOCKCODE}
      AND SUBJECT_CD = #{SUBJECT_CD}

    UNION ALL

      SELECT '상위' AS TIT, TO_CHAR(NVL(POINT,0)) AS VAL
      FROM (
        SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK, POINT
        FROM (
          SELECT MOCKCODE, IDENTYID, AVG(ADJUSTGRADE) AS POINT FROM TB_TMOCKGRADE
          GROUP BY MOCKCODE, IDENTYID, SUBJECT_CD HAVING MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD}
        )
      ) TBL
      WHERE RANK <![CDATA[<=]]> (SELECT CEIL(COUNT(*)*0.2) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD})
      AND ROWNUM <![CDATA[<]]> 2

    UNION ALL

      SELECT '석차' AS TIT
        , NVL(TO_CHAR(RANK)||'/'||(SELECT COUNT(*) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD}
            <if test='CLASSCODE != null and CLASSCODE !=""'>
              AND CLASSCODE = #{CLASSCODE}
            </if>
            <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
              AND CLASSSERIESCODE = #{CLASSSERIESCODE}
            </if>
        ),'0') AS VAL
      FROM (
        SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK
        FROM (
          SELECT MOCKCODE, IDENTYID, AVG(ADJUSTGRADE) AS POINT
          FROM TB_TMOCKGRADE
          GROUP BY MOCKCODE, IDENTYID, SUBJECT_CD
          <if test='CLASSCODE != null and CLASSCODE !=""'>
            , CLASSCODE
          </if>
          <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
            , CLASSSERIESCODE
          </if>
          HAVING MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD}
          <if test='CLASSCODE != null and CLASSCODE !=""'>
            AND CLASSCODE = #{CLASSCODE}
          </if>
          <if test='CLASSSERIESCODE != null and CLASSSERIESCODE !=""'>
            AND CLASSSERIESCODE = #{CLASSSERIESCODE}
          </if>
        )
      ) WHERE IDENTYID = #{IDENTYID}
    </if>
  </select>

  <select id="statsTotalInfo4SubjectList" parameterType="hashMap" resultType="hashMap">
    SELECT
        AA.MOCKCODE, AA.IDENTYID, AA.SUBJECT_CD
        , BB.SUBJECT_NM, TO_CHAR(DD.SUBJECTTYPEDIVISION) AS SUBJECTTYPEDIVISION
    FROM TB_TMOCKGRADE AA
    LEFT JOIN TB_SUBJECT_INFO BB ON AA.SUBJECT_CD = BB.SUBJECT_CD
    LEFT JOIN TB_TMOCKREGISTRATION EE ON AA.MOCKCODE = EE.MOCKCODE
    LEFT JOIN TB_TITEM CC ON AA.SUBJECT_CD = CC.SUBJECT_CD AND CC.EXAMYEAR = EE.EXAMYEAR AND CC.EXAMROUND = EE.EXAMROUND
    LEFT JOIN TB_TUSERCHOICESUBJECT DD ON CC.ITEMID = DD.ITEMID AND AA.IDENTYID = DD.IDENTYID
    GROUP BY AA.MOCKCODE, AA.IDENTYID, AA.SUBJECT_CD, BB.SUBJECT_NM, DD.SUBJECTTYPEDIVISION, DD.SUBJECTORDER
    HAVING AA.IDENTYID IN (
        SELECT A.* FROM (
            SELECT AA.IDENTYID
            FROM TB_TORDERS AA
            INNER JOIN TB_TMOCKGRADE BB ON AA.EXAMCODE = BB.MOCKCODE AND AA.IDENTYID = BB.IDENTYID
            WHERE AA.USER_ID = #{USER_ID} ORDER BY AA.EXAMCODE DESC
        ) A
        WHERE ROWNUM <![CDATA[<=]]> 5
    ) AND DD.SUBJECTTYPEDIVISION > 0
    ORDER BY DD.SUBJECTTYPEDIVISION ASC, DD.SUBJECTORDER ASC
  </select>

  <select id="statsTotalInfo4MockList" parameterType="hashMap" resultType="hashMap">
    SELECT A.*
    FROM (
        SELECT AA.MOCKCODE, CC.MOCKNAME, TO_CHAR(CC.EXAMYEAR) AS EXAMYEAR, TO_CHAR(CC.EXAMROUND) AS EXAMROUND
        FROM TB_TMOCKGRADE AA
        LEFT JOIN TB_TORDERS BB ON AA.MOCKCODE = BB.EXAMCODE AND AA.IDENTYID = BB.IDENTYID
        LEFT JOIN TB_TMOCKREGISTRATION CC ON AA.MOCKCODE = CC.MOCKCODE
        GROUP BY AA.MOCKCODE, CC.MOCKNAME, CC.EXAMYEAR, CC.EXAMROUND, BB.USER_ID
        HAVING BB.USER_ID = #{USER_ID} ORDER BY AA.MOCKCODE DESC
    ) A WHERE ROWNUM <![CDATA[<=]]> 5
  </select>

  <select id="statsTotalInfo4MockSubjectScoreList" parameterType="hashMap" resultType="hashMap">
    SELECT
      AA.SUBJECT_CD, TO_CHAR(AA.ORIGINGRADE) AS ORIGINGRADE, TO_CHAR(AA.ADJUSTGRADE) AS ADJUSTGRADE, BB.SUBJECT_NM
    FROM TB_TMOCKGRADE AA
    LEFT JOIN TB_SUBJECT_INFO BB ON AA.SUBJECT_CD = BB.SUBJECT_CD
    WHERE MOCKCODE = #{MOCKCODE} AND IDENTYID = #{IDENTYID}
  </select>

  <select id="statsTotalList" parameterType="hashMap" resultType="hashMap">
    SELECT * FROM   (
      SELECT A.*, ROWNUM rnum
      FROM (
        SELECT TBL.* FROM (
          SELECT
            ID, EXAMYEAR, EXAMROUND, ISEXAMTYPEON, ISEXAMTYPEOFF, MOCKCODE, MOCKNAME, CLASSCODE
            , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
            , (SELECT LISTAGG(CLASSSERIESCODE,', ') WITHIN GROUP(ORDER BY MOCKCODE DESC)
                FROM TB_TMOCKCLSCLSSERIES WHERE MOCKCODE = AA.MOCKCODE) AS CLASSSERIESCODE
            , (SELECT LISTAGG(DD.NAME,', ') WITHIN GROUP(ORDER BY CC.MOCKCODE DESC)
                FROM TB_TMOCKCLSCLSSERIES CC
                LEFT JOIN TB_CATEGORY_INFO DD ON CC.CLASSSERIESCODE = DD.CODE
                WHERE DD.P_CODE = AA.CLASSCODE AND CC.MOCKCODE = AA.MOCKCODE) AS CLASSSERIESCODENM
            , (SELECT COUNT(*) FROM TB_TMOCKGRADE WHERE MOCKCODE = AA.MOCKCODE) AS SCOREYN
          FROM TB_TMOCKREGISTRATION AA
        ) TBL
        WHERE 1 = 1
      <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
        AND TBL.EXAMYEAR = #{SEARCHYEAR}
      </if>
      <if test="SEARCHROUND !=null and SEARCHROUND != ''">
        AND TBL.EXAMROUND = #{SEARCHROUND}
      </if>
      <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
        <if test="SEARCHTYPE != null and SEARCHTYPE != ''">
          <if test="SEARCHTYPE == '1'">
        AND TBL.MOCKNAME like LIKE '%' || #{SEARCHTEXT} || '%'
          </if>
          <if test="SEARCHTYPE == '2'">
        AND (
          TBL.CLASSCODENM LIKE '%' || #{SEARCHTEXT} || '%'
          OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || '%'
          OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || ',' || '%'
          OR TBL.CLASSSERIESCODENM LIKE '%' || ', ' || #{SEARCHTEXT} || '%'
        )
          </if>
        </if>
        <if test="SEARCHTYPE == null or SEARCHTYPE == ''">
        AND (
          TBL.MOCKNAME LIKE '%' || #{SEARCHTEXT} || '%'
          OR TBL.CLASSCODENM LIKE '%' || #{SEARCHTEXT} || '%'
          OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || '%'
          OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || ',' || '%'
          OR TBL.CLASSSERIESCODENM LIKE '%' || ', ' || #{SEARCHTEXT} || '%'
        )
        </if>
      </if>
        ORDER BY TBL.ID DESC
      ) A
      WHERE rownum &lt;= #{endNo}
    )
    WHERE rnum &gt; #{startNo}
  </select>

  <select id="statsTotalListCount" parameterType="hashMap" resultType="int">
    SELECT COUNT(TBL.MOCKCODE)
    FROM (
        SELECT
          EXAMYEAR, EXAMROUND, MOCKCODE, MOCKNAME, CLASSCODE
          , (SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE='CLASSCODE' AND CODE = AA.CLASSCODE) AS CLASSCODENM
          , (SELECT LISTAGG(CLASSSERIESCODE,', ') WITHIN GROUP(ORDER BY MOCKCODE DESC)
              FROM TB_TMOCKCLSCLSSERIES WHERE MOCKCODE = AA.MOCKCODE) AS CLASSSERIESCODE
          , (SELECT LISTAGG(DD.NAME,', ') WITHIN GROUP(ORDER BY CC.MOCKCODE DESC)
              FROM TB_TMOCKCLSCLSSERIES CC
              LEFT JOIN TB_CATEGORY_INFO DD ON CC.CLASSSERIESCODE = DD.CODE
              WHERE DD.P_CODE = AA.CLASSCODE AND CC.MOCKCODE = AA.MOCKCODE) AS CLASSSERIESCODENM
          , (SELECT COUNT(*) FROM TB_TMOCKGRADE WHERE MOCKCODE = AA.MOCKCODE) AS SCOREYN
        FROM TB_TMOCKREGISTRATION AA
      ) TBL
      WHERE 1 = 1
    <if test="SEARCHYEAR != null and SEARCHYEAR != ''">
      AND TBL.EXAMYEAR = #{SEARCHYEAR}
    </if>
    <if test="SEARCHROUND !=null and SEARCHROUND != ''">
      AND TBL.EXAMROUND = #{SEARCHROUND}
    </if>
    <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
        <if test="SEARCHTYPE != null and SEARCHTYPE != ''">
          <if test="SEARCHTYPE == '1'">
            AND TBL.MOCKNAME like LIKE '%' || #{SEARCHTEXT} || '%'
          </if>
          <if test="SEARCHTYPE == '2'">
            AND (
              TBL.CLASSCODENM LIKE '%' || #{SEARCHTEXT} || '%'
              OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || '%'
              OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || ',' || '%'
              OR TBL.CLASSSERIESCODENM LIKE '%' || ', ' || #{SEARCHTEXT} || '%'
            )
          </if>
        </if>
        <if test="SEARCHTYPE == null or SEARCHTYPE == ''">
          AND (
            TBL.MOCKNAME LIKE '%' || #{SEARCHTEXT} || '%'
            OR TBL.CLASSCODENM LIKE '%' || #{SEARCHTEXT} || '%'
            OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || '%'
            OR TBL.CLASSSERIESCODENM LIKE '%' || #{SEARCHTEXT} || ',' || '%'
            OR TBL.CLASSSERIESCODENM LIKE '%' || ', ' || #{SEARCHTEXT} || '%'
          )
        </if>
    </if>
  </select>

  <select id="statsTotalViewInfo" parameterType="hashMap" resultType="hashMap">
    SELECT * FROM TB_TMOCKREGISTRATION WHERE MOCKCODE = #{MOCKCODE}
  </select>

  <select id="statsTotalViewClassseriesList" parameterType="hashMap" resultType="hashMap">
    SELECT
        AA.CLASSCODE, BB.CLASSSERIESCODE
        ,(SELECT NAME FROM TB_CATEGORY_INFO WHERE P_CODE = AA.CLASSCODE AND CODE = BB.CLASSSERIESCODE) AS CLASSSERIESNM
    FROM TB_TMOCKREGISTRATION AA
    INNER JOIN TB_TMOCKCLSCLSSERIES BB ON AA.MOCKCODE = BB.MOCKCODE
    WHERE AA.MOCKCODE = #{MOCKCODE}
  </select>

  <select id="statsTotalView_TblH" parameterType="hashMap" resultType="hashMap">
    SELECT
        AA.SUBJECT_CD, DD.SUBJECT_NM, TO_CHAR(NVL(CC.SUBJECTTYPEDIVISION,'2')) AS SUBJECTTYPEDIVISION
        , TO_CHAR(CC.SUBJECTORDER) AS SUBJECTORDER
    FROM (
        SELECT AA.EXAMCODE, BB.ITEMID, CC.EXAMYEAR, CC.EXAMROUND, BB.SUBJECTTYPEDIVISION
        FROM TB_TORDERS AA
        LEFT JOIN TB_TUSERCHOICESUBJECT BB ON AA.IDENTYID = BB.IDENTYID
        LEFT JOIN TB_TMOCKREGISTRATION CC ON AA.EXAMCODE = CC.MOCKCODE
        GROUP BY AA.EXAMCODE, AA.CLASSCODE, AA.CLASSSERIESCODE
          ,BB.ITEMID, BB.SUBJECTTYPEDIVISION, CC.EXAMYEAR, CC.EXAMROUND ,AA.EXAMSTATUS
        HAVING AA.EXAMSTATUS = 3 AND AA.EXAMCODE = #{MOCKCODE} AND AA.CLASSCODE = #{CLASSCODE} AND AA.CLASSSERIESCODE = #{CLASSSERIESCODE}
    ) BB
    INNER JOIN TB_TITEM AA ON AA.ITEMID = BB.ITEMID AND AA.EXAMYEAR = BB.EXAMYEAR AND AA.EXAMROUND = BB.EXAMROUND
    LEFT JOIN TB_TMOCKSUBJECT CC ON BB.EXAMCODE = CC.MOCKCODE AND AA.SUBJECT_CD = CC.SUBJECT_CD
    LEFT JOIN TB_SUBJECT_INFO DD ON AA.SUBJECT_CD = DD.SUBJECT_CD
    ORDER BY CC.SUBJECTTYPEDIVISION ASC, CC.SUBJECTORDER ASC
  </select>

  <select id="statsTotalSubjectView" parameterType="hashMap" resultType="hashMap">
    <if test="GUBN == null or GUBN == ''">
      SELECT '전체평균' AS TIT, TO_CHAR(ROUND(SCORESUM/MOCKCNT)) AS VAL
      FROM (
          SELECT
              (SELECT SUM(ORIGINGRADE) FROM TB_TMOCKGRADE
                 WHERE MOCKCODE = #{MOCKCODE}
                 AND CLASSCODE = #{CLASSCODE}
                 AND CLASSSERIESCODE = #{CLASSSERIESCODE}
                 AND SUBJECT_CD = #{SUBJECT_CD} ) AS SCORESUM
              , (SELECT COUNT(ORIGINGRADE) FROM TB_TMOCKGRADE
                  WHERE MOCKCODE = #{MOCKCODE}
                  AND CLASSCODE = #{CLASSCODE}
                  AND CLASSSERIESCODE = #{CLASSSERIESCODE}
                  AND SUBJECT_CD = #{SUBJECT_CD} ) AS MOCKCNT
          FROM DUAL
      ) TBL

    UNION ALL

      SELECT '상위' AS TIT, TO_CHAR(NVL(AVG(POINT),0)) AS VAL
      FROM (
          SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK, POINT
          FROM (
              SELECT MOCKCODE, IDENTYID, ORIGINGRADE AS POINT FROM TB_TMOCKGRADE
              GROUP BY MOCKCODE, IDENTYID, CLASSCODE, CLASSSERIESCODE, SUBJECT_CD, ORIGINGRADE
              HAVING MOCKCODE = #{MOCKCODE} AND CLASSCODE = #{CLASSCODE} AND CLASSSERIESCODE = #{CLASSSERIESCODE} AND SUBJECT_CD = #{SUBJECT_CD}
          )
      ) TBL
      WHERE RANK <![CDATA[<=]]> (SELECT CEIL(COUNT(*)*0.2) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND SUBJECT_CD = #{SUBJECT_CD})
      AND ROWNUM <![CDATA[<]]> 2

    UNION ALL

      SELECT '응시인원' AS TIT, TO_CHAR(COUNT(ORIGINGRADE)) AS VAL
      FROM TB_TMOCKGRADE
      WHERE MOCKCODE = #{MOCKCODE}
      AND CLASSCODE = #{CLASSCODE}
      AND CLASSSERIESCODE = #{CLASSSERIESCODE}
      AND SUBJECT_CD = #{SUBJECT_CD}
    </if>

    <if test="GUBN == 'AD'">
      SELECT '전체평균' AS TIT, TO_CHAR(ROUND(SCORESUM/MOCKCNT)) AS VAL
      FROM (
          SELECT
              (SELECT SUM(ADJUSTGRADE) FROM TB_TMOCKGRADE
                  WHERE MOCKCODE = #{MOCKCODE}
                  AND CLASSCODE = #{CLASSCODE}
                  AND CLASSSERIESCODE = #{CLASSSERIESCODE}
                  AND SUBJECT_CD = #{SUBJECT_CD}) AS SCORESUM
              , (SELECT COUNT(ADJUSTGRADE)
                  FROM TB_TMOCKGRADE
                  WHERE MOCKCODE = #{MOCKCODE}
                  AND CLASSCODE = #{CLASSCODE}
                  AND CLASSSERIESCODE = #{CLASSSERIESCODE}
                  AND SUBJECT_CD = #{SUBJECT_CD}) AS MOCKCNT
          FROM DUAL
      ) TBL

    UNION ALL

      SELECT '상위' AS TIT, TO_CHAR(NVL(AVG(POINT),0)) AS VAL
      FROM (
          SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY POINT DESC) AS RANK, POINT
          FROM (
              SELECT MOCKCODE, IDENTYID, ADJUSTGRADE AS POINT FROM TB_TMOCKGRADE
              GROUP BY MOCKCODE, IDENTYID, CLASSCODE, CLASSSERIESCODE, SUBJECT_CD, ADJUSTGRADE
              HAVING MOCKCODE = #{MOCKCODE} AND CLASSCODE = #{CLASSCODE} AND CLASSSERIESCODE = #{CLASSSERIESCODE} AND SUBJECT_CD = #{SUBJECT_CD}
          )
      ) TBL WHERE RANK <![CDATA[<=]]> (SELECT CEIL(COUNT(*)*0.2) FROM TB_TMOCKGRADE
      WHERE MOCKCODE = #{MOCKCODE} AND CLASSCODE = #{CLASSCODE} AND CLASSSERIESCODE = #{CLASSSERIESCODE} AND SUBJECT_CD = #{SUBJECT_CD})
      AND ROWNUM <![CDATA[<]]> 2

    UNION ALL

      SELECT '응시인원' AS TIT, TO_CHAR(COUNT(ADJUSTGRADE)) AS VAL
      FROM TB_TMOCKGRADE
      WHERE MOCKCODE = #{MOCKCODE}
      AND CLASSCODE = #{CLASSCODE}
      AND CLASSSERIESCODE = #{CLASSSERIESCODE}
      AND SUBJECT_CD = #{SUBJECT_CD}
    </if>
  </select>

  <select id="statsTotalSubjectViewAver" parameterType="hashMap" resultType="hashMap">
    SELECT '전체' AS TIT, TO_CHAR(ROUND(AVG(AVER))) AS VAL
    FROM (
      SELECT MOCKCODE, CLASSCODE, CLASSSERIESCODE, IDENTYID, AVG(ADJUSTGRADE) AVER
      FROM TB_TMOCKGRADE
      GROUP BY MOCKCODE, CLASSCODE, CLASSSERIESCODE, IDENTYID
      HAVING MOCKCODE = #{MOCKCODE} AND CLASSCODE = #{CLASSCODE} AND CLASSSERIESCODE = #{CLASSSERIESCODE}
    )

  UNION ALL

    SELECT '상위' AS TIT, TO_CHAR(ROUND(AVG(AVER))) AS VAL
    FROM (
      SELECT IDENTYID, RANK() OVER(PARTITION BY MOCKCODE ORDER BY AVER DESC) AS RANK, SCORE, AVER
      FROM (
        SELECT
          MOCKCODE, IDENTYID, SUM(ADJUSTGRADE) AS SCORE, AVG(ADJUSTGRADE) AVER
        FROM TB_TMOCKGRADE
        GROUP BY MOCKCODE, CLASSCODE, CLASSSERIESCODE, IDENTYID
        HAVING MOCKCODE = #{MOCKCODE} AND CLASSCODE = #{CLASSCODE} AND CLASSSERIESCODE = #{CLASSSERIESCODE})
    ) TBL
    WHERE RANK <![CDATA[<=]]> (SELECT CEIL(COUNT(*)*0.2) FROM TB_TMOCKGRADE WHERE MOCKCODE = #{MOCKCODE} AND CLASSCODE = #{CLASSCODE} AND CLASSSERIESCODE = #{CLASSSERIESCODE})
    AND ROWNUM <![CDATA[<]]> 2

  UNION ALL

    SELECT '전체인원' AS TIT, TO_CHAR(COUNT(IDENTYID)) AS VAL
      FROM (
        SELECT IDENTYID
        FROM TB_TMOCKGRADE
        GROUP BY MOCKCODE, CLASSCODE, CLASSSERIESCODE, IDENTYID
        HAVING MOCKCODE = #{MOCKCODE} AND CLASSCODE = #{CLASSCODE} AND CLASSSERIESCODE = #{CLASSSERIESCODE}
    )
  </select>

  <select id="statsTotalCnt" parameterType="hashMap" resultType="int">
    SELECT COUNT(*)
    FROM TB_TMOCKGRADE
    WHERE MOCKCODE = #{MOCKCODE}
    <if test="IDENTYID != null and IDENTYID == ''">
      AND IDENTYID = #{IDENTYID}
    </if>
  </select>

	<select id="userExamInfo" parameterType="hashMap" resultType="int">
	    SELECT  NVL(COUNT(IDENTYID),0)
        FROM TB_TEXAMINEEANSWER A
        WHERE A.IDENTYID = #{IDENTYID}
	</select>

</mapper>
