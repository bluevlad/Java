<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="subject">

	<select id="subjectList" parameterType="hashMap" resultType="hashMap">
		SELECT * FROM 	(
			SELECT A.*, ROWNUM rnum
		  	FROM (
					SELECT
						SUBJECT_CD, SUBJECT_NM, SUBJECT_SHORT_NM, ISUSE
						, DECODE(ISUSE, 'Y', '활성', 'N', '비활성') ISUSENM
						, REG_DT, REG_ID, UPD_DT, UPD_ID
					FROM TB_SUBJECT_INFO
					WHERE 1 = 1
				 	<if test="SEARCHTEXT != null and SEARCHTEXT != ''">
						<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
							<if test="SEARCHTYPE == 1">
								AND SUBJECT_CD like '%'||#{SEARCHTEXT}||'%'
							</if>
							<if test="SEARCHTYPE == 2">
								AND SUBJECT_NM like '%'||#{SEARCHTEXT}||'%'
							</if>
						</if>
						<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
							AND (
								SUBJECT_CD like '%'||#{SEARCHTEXT}||'%'
								OR SUBJECT_NM like '%'||#{SEARCHTEXT}||'%'
							)
						</if>
					</if>
					<if test="ISUSE != null and ISUSE != ''">
						AND ISUSE = 'Y'
					</if>
				 	ORDER BY SUBJECT_CD
				) A
               	WHERE rownum &lt;= #{endNo}
			)
		WHERE rnum &gt; #{startNo}
	</select>

	<select id="subjectListCount" parameterType="hashMap" resultType="int">
		SELECT
			COUNT(SUBJECT_CD)
		FROM TB_SUBJECT_INFO
		WHERE 1 = 1
	 	<if test="SEARCHTEXT != null and SEARCHTEXT != ''">
			<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
				<if test="SEARCHTYPE == 1">
					AND SUBJECT_CD like '%'||#{SEARCHTEXT}||'%'
				</if>
				<if test="SEARCHTYPE == 2">
					AND SUBJECT_NM like '%'||#{SEARCHTEXT}||'%'
				</if>
			</if>
			<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
				AND (
					SUBJECT_CD like '%'||#{SEARCHTEXT}||'%'
					OR SUBJECT_NM like '%'||#{SEARCHTEXT}||'%'
				)
			</if>
		</if>
	</select>

	<select id="subjectGetCode" parameterType="hashMap" resultType="String">
		SELECT
			REPLACE(TO_CHAR(NVL(MAX(SUBJECT_CD),1000)+1 ,'0000'),' ','') CODE
		FROM TB_SUBJECT_INFO
	</select>

	<insert id="subjectInsert" parameterType="hashMap" flushCache="true">
		INSERT INTO TB_SUBJECT_INFO(SUBJECT_CD, SUBJECT_NM, SUBJECT_SHORT_NM, ISUSE, REG_DT, REG_ID, UPD_DT, UPD_ID)
		VALUES (#{SUBJECT_CD}, #{SUBJECT_NM}, #{SUBJECT_SHORT_NM}, #{ISUSE}, SYSDATE, #{REG_ID}, SYSDATE, #{UPD_ID})
	</insert>

	<insert id="subjectCategoryInsert" parameterType="hashMap" flushCache="true">
		INSERT INTO TB_SUBJECT_CATEGORY(SUBJECT_CD, CATEGORY_CODE)
		VALUES (#{SUBJECT_CD}, #{CATEGORY_CODE})
	</insert>

	<update id="subjectCategoryDelete" parameterType="hashMap" flushCache="true">
		DELETE FROM TB_SUBJECT_CATEGORY WHERE SUBJECT_CD = #{SUBJECT_CD}
	</update>
	
	<delete id="subjectCategoryDeleteByCat" parameterType="hashMap" flushCache="true">
		DELETE FROM TB_SUBJECT_CATEGORY WHERE SUBJECT_CD = #{SUBJECT_CD} AND CATEGORY_CODE = #{CATEGORY_CODE}
	</delete>

	<insert id="subjectCategoryOrderInsert" parameterType="hashMap" flushCache="true">
		INSERT INTO TB_CATEGORY_SUBJECT_ORDER(ONOFF_DIV, CATEGORY_CODE, SUBJECT_CD, IDX)
		VALUES (#{ONOFF_DIV}, #{CATEGORY_CODE}, #{SUBJECT_CD} 
		<choose>
			<when test='ORI_IDX != null and ORI_IDX != ""'>
			,#{ORI_IDX}
			</when>
			<otherwise>
				,(select nvl(max(idx),1) from TB_CATEGORY_SUBJECT_ORDER 
		where ONOFF_DIV = #{ONOFF_DIV} AND CATEGORY_CODE = #{CATEGORY_CODE}) 
			</otherwise>
		</choose>
		)
	</insert>
	
	<select id="chkSubjectCategoryOrderCnt" parameterType="hashMap" resultType="int">
		SELECT 
			COUNT(*)  
		FROM TB_CATEGORY_SUBJECT_ORDER			
		WHERE 1 = 1 
		AND ONOFF_DIV = #{ONOFF_DIV}
		<if test='CATEGORY_CODE !=null and CATEGORY_CODE != ""'>
			AND CATEGORY_CODE = #{CATEGORY_CODE}
		</if>
		AND SUBJECT_CD = #{SUBJECT_CD}
	</select>
	
	<select id="chkSubjectCategoryCnt" parameterType="hashMap" resultType="int">
		SELECT 
			COUNT(*)  
		FROM TB_SUBJECT_CATEGORY			
		WHERE 1 = 1 
		AND CATEGORY_CODE = #{CATEGORY_CODE}
		AND SUBJECT_CD = #{SUBJECT_CD}
	</select>
	
	<select id="getSubjectCategoryOrderIdx" parameterType="hashMap" resultType="String">
		SELECT 
			NVL(MIN(IDX),
			(SELECT NVL(MAX(G.IDX)+1,1) 
			FROM TB_CATEGORY_SUBJECT_ORDER G 
			WHERE G.ONOFF_DIV = #{ONOFF_DIV} AND G.CATEGORY_CODE = #{CATEGORY_CODE})) IDX  
		FROM TB_CATEGORY_SUBJECT_ORDER			
		WHERE 1 = 1 
		AND ONOFF_DIV = #{ONOFF_DIV}
		AND CATEGORY_CODE = #{CATEGORY_CODE}
		AND SUBJECT_CD = #{SUBJECT_CD}
		GROUP BY ONOFF_DIV,SUBJECT_CD,CATEGORY_CODE
	</select>
	
	<update id="subjectCategoryOrderDelete" parameterType="hashMap" flushCache="true">
		DELETE FROM TB_CATEGORY_SUBJECT_ORDER WHERE SUBJECT_CD = #{SUBJECT_CD}
	</update>
	
	<delete id="subjectCategoryOrderDeleteByOnoff" parameterType="hashMap" flushCache="true">
		DELETE FROM TB_CATEGORY_SUBJECT_ORDER 
		WHERE ONOFF_DIV = #{ONOFF_DIV}
		AND SUBJECT_CD = #{SUBJECT_CD}
		 <if test="CATEGORY_CODE != null and CATEGORY_CODE != ''">
        AND CATEGORY_CODE = #{CATEGORY_CODE}
        </if>
	</delete>
	
	<select id="subjectView" parameterType="hashMap" resultType="hashMap">
		SELECT
			SUBJECT_CD, SUBJECT_NM, SUBJECT_SHORT_NM, ISUSE
			, DECODE(ISUSE, 'Y', '활성', 'N', '비활성') ISUSENM
			, REG_DT, REG_ID, UPD_DT, UPD_ID
		FROM TB_SUBJECT_INFO AA
		WHERE SUBJECT_CD = #{SUBJECT_CD}
	</select>

	<select id="subjectCategoryView" parameterType="hashMap" resultType="hashMap">
		  SELECT
            AA.SUBJECT_CD, AA.CATEGORY_CODE
        FROM TB_SUBJECT_CATEGORY AA,(  SELECT SUBJECT_CD,CATEGORY_CODE
              FROM TB_CATEGORY_SUBJECT_ORDER
             <if test="ONOFF_DIV != null and ONOFF_DIV != ''">
             	WHERE ONOFF_DIV = #{ONOFF_DIV}
             </if>
          GROUP BY SUBJECT_CD,CATEGORY_CODE) BB
        WHERE AA.SUBJECT_CD = BB.SUBJECT_CD
         AND AA.CATEGORY_CODE = BB.CATEGORY_CODE
        AND AA.SUBJECT_CD = #{SUBJECT_CD}
	</select>

	<update id="subjectUpdate" parameterType="hashMap">
		UPDATE TB_SUBJECT_INFO
		SET
			SUBJECT_NM = #{SUBJECT_NM}
			, SUBJECT_SHORT_NM = #{SUBJECT_SHORT_NM}
			, ISUSE = #{ISUSE}
			, UPD_DT = SYSDATE
			, UPD_ID = #{UPD_ID}
		WHERE SUBJECT_CD = #{SUBJECT_CD}
	</update>

	<delete id="subjectDelete" parameterType="hashMap">
		UPDATE TB_SUBJECT_INFO
		SET ISUSE = 'N'
		WHERE SUBJECT_CD = #{SUBJECT_CD}
		<!--
		DELETE FROM TB_SUBJECT_INFO
		WHERE SUBJECT_CD = #{SUBJECT_CD}
		-->
	</delete>

    <select id="findSubjectCategoryList" parameterType="hashMap" resultType="hashMap">
        SELECT
            C.CODE AS CATEGORY_CODE, C.NAME AS CATEGORY_NM
            , A.SUBJECT_CD, A.SUBJECT_NM, A.SUBJECT_SHORT_NM, A.ISUSE
            , DECODE(A.ISUSE, 'Y', '활성', 'N', '비활성') ISUSENM
            , A.REG_DT, A.REG_ID, A.UPD_DT, A.UPD_ID
        FROM TB_SUBJECT_INFO A, TB_SUBJECT_CATEGORY B, TB_CATEGORY_INFO C
        WHERE 1 = 1
        AND A.SUBJECT_CD = B.SUBJECT_CD
        AND B.CATEGORY_CODE = C.CODE
        AND C.P_CODE = 'CLASSCODE'
        <if test="ARR_CATEGORYS == null or ARR_CATEGORYS == ''">
			<if test="SEARCHCATEGORY != null and SEARCHCATEGORY != ''">
	        AND C.CODE = #{SEARCHCATEGORY}
	        </if>
        </if>
        <if test="ARR_CATEGORYS != null and ARR_CATEGORYS != ''">
        AND C.CODE IN (${ARR_CATEGORYS})
        </if>
        AND A.ISUSE = 'Y'
        ORDER BY B.CATEGORY_CODE ASC,A.SUBJECT_CD
    </select>
    
	<select id="subjectCheck" parameterType="hashMap" resultType="int">
		SELECT 
			COUNT(SUBJECT_CD)  
		FROM TB_SUBJECT_INFO			
		WHERE 1 = 1 
		<if test="SUBJECT_NM != null and SUBJECT_NM != ''"> 
			AND SUBJECT_NM = REPLACE(#{SUBJECT_NM},' ', '')
		</if>  
		<if test="SUBJECT_CD != null and SUBJECT_CD != ''">
			AND SUBJECT_CD <![CDATA[<>]]> #{SUBJECT_CD}
		</if>		
	</select>	
	
	<insert id="main_category_subject_order_Insert" parameterType="hashMap" flushCache="true">
		INSERT INTO TB_MAIN_CATEGORY_SUBJECT_ORDER(ONOFF_DIV, CATEGORY_CODE, SUBJECT_CD, IDX) 
		VALUES ('M', 'main', #{SUBJECT_CD}, (SELECT NVL(MAX(IDX)+1,1) FROM TB_MAIN_CATEGORY_SUBJECT_ORDER))	
	</insert>

</mapper>