<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="teacher">

    <resultMap type="java.util.HashMap" id="teacherMap">
       <result column="PROFILE" property="PROFILE" javaType="java.lang.String" jdbcType="CLOB"/>
       <result column="OFF_PROFILE" property="OFF_PROFILE" javaType="java.lang.String" jdbcType="CLOB"/>
       <result column="BOOK_LOG" property="BOOK_LOG" javaType="java.lang.String" jdbcType="CLOB"/>
       <result column="YPLAN" property="YPLAN" javaType="java.lang.String" jdbcType="CLOB"/>
       <result column="OFF_YPLAN" property="OFF_YPLAN" javaType="java.lang.String" jdbcType="CLOB"/>
       <result column="LECINFO" property="LECINFO" javaType="java.lang.String" jdbcType="CLOB"/>
       <result column="OFF_LECINFO" property="OFF_LECINFO" javaType="java.lang.String" jdbcType="CLOB"/>
    </resultMap>

    <select id="getKindList" parameterType="hashMap" resultType="hashMap">
        <if test='SEARCHGUBN == "T"'>
            SELECT
                ID, CODE, NAME, ISUSE, DECODE(ISUSE, 'Y', '활성', 'N', '비활성') ISUSENM
                , REG_DT, REG_ID, UPD_DT, UPD_ID
            FROM TB_CATEGORY_INFO
            WHERE ISUSE = 'Y'
            AND P_CODE = 'CLASSCODE'
            ORDER BY CODE ASC
        </if>
        <if test='SEARCHGUBN == "M"'>
            SELECT
                USER_ID, CATEGORY_CODE, SEQ FROM
            TB_MA_MEMBER_CATEGORY WHERE USER_ID = #{USER_ID}
        </if>
    </select>

    <!-- T:전체 , E:선택된것 제외된 전체 , M:강사가 선택한것만 -->
    <select id="getSubjectList" parameterType="hashMap" resultType="hashMap">
        <if test='SEARCHGUBN == "T"'>
            SELECT
                A.SUBJECT_CD, A.SUBJECT_NM, A.SUBJECT_SHORT_NM, A.ISUSE
                , DECODE(A.ISUSE, 'Y', '활성', 'N', '비활성') ISUSENM
                , A.REG_DT, A.REG_ID, A.UPD_DT, A.UPD_ID
            FROM TB_SUBJECT_INFO A,
         (  SELECT SUBJECT_CD
              FROM TB_CATEGORY_SUBJECT_ORDER
              <if test="ONOFF_DIV != null and ONOFF_DIV != ''">
             	WHERE ONOFF_DIV = #{ONOFF_DIV}
             </if>
          GROUP BY SUBJECT_CD) B
        WHERE     A.SUBJECT_CD = B.SUBJECT_CD
            AND A.ISUSE = 'Y'
            ORDER BY A.REG_DT ASC, A.SUBJECT_NM ASC
        </if>
        <if test='SEARCHGUBN == "E"'>
             SELECT A.SUBJECT_CD, A.SUBJECT_NM, A.SUBJECT_SHORT_NM
			    FROM TB_SUBJECT_INFO A,
			         (  SELECT SUBJECT_CD
			              FROM TB_CATEGORY_SUBJECT_ORDER
			             <if test="ONOFF_DIV != null and ONOFF_DIV != ''">
			             	WHERE ONOFF_DIV = #{ONOFF_DIV}
			             </if>
			          GROUP BY SUBJECT_CD) B
			   WHERE     A.SUBJECT_CD = B.SUBJECT_CD
			         AND A.ISUSE = 'Y'
			         AND A.SUBJECT_CD NOT IN (SELECT SUBJECT_CD
			                                    FROM TB_MA_MEMBER_SUBJECT
			                                   WHERE USER_ID = #{USER_ID}
			                                   <if test="ONOFF_DIV != null and ONOFF_DIV != ''">
			                                   		<choose>
			                                   			<when test='ONOFF_DIV == "F"'>AND USE_OFF = 'Y'</when>
			                                   			<when test='ONOFF_DIV == "O"'>AND USE_ON = 'Y'</when>
			                                   		</choose>
									             </if>)
			ORDER BY A.SUBJECT_NM ASC
        </if>
        <if test='SEARCHGUBN == "M"'>
            SELECT A.SUBJECT_CD, A.SUBJECT_NM, A.SUBJECT_SHORT_NM
			    FROM TB_SUBJECT_INFO A,
			         (  SELECT SUBJECT_CD
			              FROM TB_CATEGORY_SUBJECT_ORDER
			              <if test="ONOFF_DIV != null and ONOFF_DIV != ''">
			             	WHERE ONOFF_DIV = #{ONOFF_DIV}
			             </if>
			          GROUP BY SUBJECT_CD) B
			   WHERE     A.SUBJECT_CD = B.SUBJECT_CD
			         AND A.ISUSE = 'Y'
			         AND A.SUBJECT_CD IN (SELECT SUBJECT_CD
			                                    FROM TB_MA_MEMBER_SUBJECT
			                                   WHERE USER_ID = #{USER_ID}
			                                   <if test="ONOFF_DIV != null and ONOFF_DIV != ''">
			                                   		<choose>
			                                   			<when test='ONOFF_DIV == "F"'>AND USE_OFF = 'Y'</when>
			                                   			<when test='ONOFF_DIV == "O"'>AND USE_ON = 'Y'</when>
			                                   		</choose>
									             </if>)
			ORDER BY A.SUBJECT_NM ASC
        </if>
    </select>

    <select id="teacherList" parameterType="hashMap" resultType="hashMap">
        <if test="SEARCHCATEGORY == null or SEARCHCATEGORY == ''">
        SELECT * FROM   (
            SELECT A.*, ROWNUM rnum
            FROM (
        </if>
                SELECT *
                FROM   (
                    SELECT
                        AA.USER_ID, AA.USER_NM, AA.ISUSE, AA.EMAIL, AA.PHONE_NO, AA.USER_POSITION
                        , DECODE(AA.ISUSE, 'Y', '공개', 'N', '비공개') ISUSENM
                        , AA.REG_DT, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
                        , DECODE(NVL(ON_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') ON_OPENYNNM
                        , DECODE(NVL(OFF_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') OFF_OPENYNNM
                        , (SELECT MIN(SUBJECT_CD) FROM TB_MA_MEMBER_SUBJECT WHERE USER_ID = AA.USER_ID) AS SUBJECT_CD
                        , (SELECT LISTAGG(DD.SUBJECT_NM,'/') WITHIN GROUP(ORDER BY DD.SUBJECT_NM)
                           FROM TB_MA_MEMBER_SUBJECT CC
                           LEFT JOIN TB_SUBJECT_INFO DD ON CC.SUBJECT_CD = DD.SUBJECT_CD
                           WHERE USER_ID = AA.USER_ID
                           ) AS SUBJECT_NM
                        , (SELECT MIN(CATEGORY_CODE) FROM TB_MA_MEMBER_CATEGORY WHERE USER_ID = AA.USER_ID) AS CATEGORY_CD
                        , (SELECT LISTAGG('['||DD.NAME||'] ','') WITHIN GROUP(ORDER BY CC.CATEGORY_CODE ASC)
                           FROM TB_MA_MEMBER_CATEGORY CC
                           LEFT JOIN TB_CATEGORY_INFO DD ON CC.CATEGORY_CODE = DD.CODE
                           WHERE USER_ID = AA.USER_ID
                           ) AS CATEGORY_NM
                        , MAX(BB.SEQ) SEQ
                        , MAX(BB.OFF_SEQ) AS OFF_SEQ
                    FROM TB_MA_MEMBER AA
                    LEFT JOIN TB_MA_MEMBER_CATEGORY BB ON AA.USER_ID = BB.USER_ID
                    WHERE AA.USER_ROLE = 'PRF'
                    AND AA.USER_POSITION IN ('COP')
                    AND AA.ISUSE = 'Y'
                    <if test="SEARCHCATEGORY != null and SEARCHCATEGORY != ''">
                        AND BB.CATEGORY_CODE = #{SEARCHCATEGORY}
                    </if>
                    <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
                        <if test="SEARCHTYPE != null and SEARCHTYPE != ''">
                            <if test="SEARCHTYPE == 1">
								AND INSTR(AA.USER_ID, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
                            </if>
                            <if test="SEARCHTYPE == 2">
								AND INSTR(AA.USER_NM, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
                            </if>
                        </if>
                        <if test="SEARCHTYPE == null or SEARCHTYPE == ''">
                            AND (
								INSTR(AA.USER_ID, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
								OR INSTR(AA.USER_NM, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
                            )
                        </if>
                    </if>
                    GROUP BY AA.USER_ID, AA.USER_NM, AA.ISUSE, AA.EMAIL, AA.PHONE_NO, AA.USER_POSITION, 
                                  AA.REG_DT, AA.UPD_DT, AA.USER_ROLE, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
                )
                <if test="SEARCHSBJ != null and SEARCHSBJ != ''">
                WHERE SUBJECT_CD = #{SEARCHSBJ}
                </if>
                <if test="SEARCHCATEGORY == null or SEARCHCATEGORY == ''">
                ORDER BY CATEGORY_CD, SUBJECT_CD , USER_NM
                </if>
                <if test="SEARCHCATEGORY != null and SEARCHCATEGORY != ''">
                  <choose>
                    <when test='ONOFFDIV == "F"'>
                    WHERE OFF_OPENYN =  'Y'
                ORDER BY CATEGORY_CD, OFF_SEQ, SUBJECT_CD , SEQ, DECODE(ISUSE,'Y',1,2), DECODE(OFF_OPENYN,'Y',1,2), DECODE(ON_OPENYN,'Y',1,2)
                    </when>
                    <when test='ONOFFDIV == "O"'>
                    WHERE ON_OPENYN =  'Y'
                ORDER BY CATEGORY_CD, OFF_SEQ, SUBJECT_CD , SEQ, DECODE(ISUSE,'Y',1,2), DECODE(OFF_OPENYN,'Y',1,2), DECODE(ON_OPENYN,'Y',1,2)
                    </when>
                    <otherwise>
                ORDER BY CATEGORY_CD, SEQ, SUBJECT_CD , SEQ, DECODE(ISUSE,'Y',1,2), DECODE(ON_OPENYN,'Y',1,2), DECODE(OFF_OPENYN,'Y',1,2)
    </otherwise>
                  </choose>
                </if>
        <if test="SEARCHCATEGORY == null or SEARCHCATEGORY == ''">
            ) A
            WHERE rownum <![CDATA[ <= ]]> #{endNo}
        )
        WHERE rnum <![CDATA[ > ]]> #{startNo}
        </if>
    </select>

    <select id="teacherListCount" parameterType="hashMap" resultType="int">
        SELECT COUNT(*) FROM (
            SELECT
                COUNT(AA.USER_ID)
            FROM TB_MA_MEMBER AA
            LEFT JOIN TB_MA_MEMBER_CATEGORY BB ON AA.USER_ID = BB.USER_ID
            WHERE AA.USER_ROLE = 'PRF'
            AND AA.USER_POSITION IN ('COP')
            AND AA.ISUSE = 'Y'
           <if test="SEARCHSBJ != null and SEARCHSBJ != ''">
           AND SUBJECT_CD = #{SEARCHSBJ}
           </if>
            <if test="SEARCHCATEGORY != null and SEARCHCATEGORY != ''">
                AND BB.CATEGORY_CODE = #{SEARCHCATEGORY}
            </if>
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
                <if test="SEARCHTYPE != null and SEARCHTYPE != ''">
                    <if test="SEARCHTYPE == 1">
						AND INSTR(AA.USER_ID, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
                    </if>
                    <if test="SEARCHTYPE == 2">
						AND INSTR(AA.USER_NM, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
                    </if>
                </if>
                <if test="SEARCHTYPE == null or SEARCHTYPE == ''">
                    AND (
						INSTR(AA.USER_ID, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
						OR INSTR(AA.USER_NM, #{SEARCHTEXT}) <![CDATA[ > ]]> 0
                    )
                </if>
            </if>
            <if test="SEARCHCATEGORY != null and SEARCHCATEGORY != ''">
                  <choose>
                    <when test='ONOFFDIV == "F"'>
                    AND AA.OFF_OPENYN =  'Y'
                    </when>
                    <when test='ONOFFDIV == "O"'>
                    AND AA.ON_OPENYN =  'Y'
                    </when>
                    <otherwise>
                    </otherwise>
                  </choose>
                </if>
            GROUP BY AA.USER_ID, AA.USER_NM, AA.ISUSE, AA.EMAIL, AA.PHONE_NO, AA.REG_DT, AA.UPD_DT, AA.USER_ROLE, AA.BIRTH_DAY
            <if test="SEARCHCATEGORY != null and SEARCHCATEGORY != ''">
            , BB.SEQ
            </if>

        ) TBL
    </select>

    <select id="teacherAllList" parameterType="hashMap" resultType="hashMap">
        SELECT *
        FROM   (
            SELECT
                AA.USER_ID, AA.USER_NM, AA.ISUSE, AA.EMAIL, AA.PHONE_NO
                , DECODE(AA.ISUSE, 'Y', '공개', 'N', '비공개') ISUSENM
                , AA.REG_DT, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
                , DECODE(NVL(ON_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') ON_OPENYNNM
                , DECODE(NVL(OFF_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') OFF_OPENYNNM
                , (SELECT MIN(SUBJECT_CD) FROM TB_MA_MEMBER_SUBJECT WHERE USER_ID = AA.USER_ID) AS SUBJECT_CD
                , (SELECT LISTAGG(DD.SUBJECT_NM,'/') WITHIN GROUP(ORDER BY DD.SUBJECT_NM)
                   FROM TB_MA_MEMBER_SUBJECT CC LEFT JOIN TB_SUBJECT_INFO DD
                   ON CC.SUBJECT_CD = DD.SUBJECT_CD
                   WHERE USER_ID = AA.USER_ID
                   ) AS SUBJECT_NM
                , (SELECT MIN(CATEGORY_CODE) FROM TB_MA_MEMBER_CATEGORY WHERE USER_ID = AA.USER_ID) AS CATEGORY_CD
                , (SELECT LISTAGG('['||DD.NAME||'] ','') WITHIN GROUP(ORDER BY CC.CATEGORY_CODE ASC)
                   FROM TB_MA_MEMBER_CATEGORY CC LEFT JOIN TB_CATEGORY_INFO DD
                   ON CC.CATEGORY_CODE = DD.CODE
                   WHERE USER_ID = AA.USER_ID
                   ) AS CATEGORY_NM
                , MAX(BB.SEQ) SEQ
            FROM TB_MA_MEMBER AA
            LEFT JOIN TB_MA_MEMBER_CATEGORY BB ON AA.USER_ID = BB.USER_ID
            WHERE   AA.USER_ROLE = 'PRF'
            AND AA.USER_POSITION IN ('COP')
            AND     AA.ISUSE = 'Y'
            GROUP BY AA.USER_ID, AA.USER_NM, AA.ISUSE, AA.EMAIL, AA.PHONE_NO, AA.REG_DT, AA.UPD_DT, AA.USER_ROLE, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
        )
        <if test="FLAG != null and FLAG != ''">
        	ORDER BY USER_NM
        </if>
        <if test="FLAG == null">
        	ORDER BY CATEGORY_CD, SUBJECT_CD , USER_NM
        </if>
        
    </select>

    <select id="teacherView" parameterType="hashMap" resultMap="teacherMap">
		SELECT * 
		FROM TB_MA_MEMBER A, TB_MA_MEMBER_INFO B
		WHERE A.USER_ID = B.USER_ID
		AND A.USER_ID = #{USER_ID}
    </select>

    <select id="teacherIdCheck" parameterType="hashMap" resultType="int">
        SELECT
            COUNT(USER_ID)
        FROM TB_MA_MEMBER
        WHERE USER_ID = #{USER_ID}
    </select>

    <insert id="teacherInsert" parameterType="hashMap" flushCache="true">
        INSERT INTO TB_MA_MEMBER(
            USER_ID, USER_NM, USER_NICKNM
            , USER_ROLE, USER_PWD, BIRTH_DAY
            , EMAIL, ACCOUNT, PHONE_NO
            , USER_POSITION
            , PAYMENT,        ON_URL, BRD_YN,        TITLE,        PROF_HTML,        ON_OPENYN
            , OFF_PAYMENT, OFF_URL, OFF_BRD_YN, OFF_TITLE, OFF_PROF_HTML, OFF_OPENYN
            , PIC1,        PIC2,       PIC3,        PIC4,       PIC5,       PIC6,        PIC7,       PIC8
            , OFF_PIC1, OFF_PIC2, OFF_PIC3, OFF_PIC4, OFF_PIC5, OFF_PIC6, OFF_PIC7, OFF_PIC8
            , PIC7_TURL, OFF_PIC7_TURL, PIC8_TURL, OFF_PIC8_TURL
            , ISUSE
            , REG_DT, REG_ID, UPD_DT, UPD_ID, TEACHERONOFF_YN, PRF_ONPIC1, PRF_ONPIC2, PRF_ONPIC3, PRF_OFFPIC1, PRF_OFFPIC2, PRF_OFFPIC3, PRF_LISTONBANNER, PRF_LISTOFFBANNER
            , PROF_IMG, OFF_PROF_IMG , PRF_TOPONIMG, PRF_TOPOFFIMG, PIC9, OFF_PIC9, PIC10, OFF_PIC10, PIC9_TURL, OFF_PIC9_TURL, PIC10_TURL, OFF_PIC10_TURL

        ) VALUES(
            #{USER_ID}, #{USER_NM}, #{USER_NICKNM}
            , #{USER_ROLE}, #{USER_PWD}, #{BIRTH_DAY}
            , #{EMAIL}, #{ACCOUNT}, #{PHONE_NO}
            , #{USER_POSITION}
            , #{PAYMENT},       #{ON_URL},  #{BRD_YN},        #{TITLE},         #{PROF_HTML},        #{ON_OPENYN}
            , #{OFF_PAYMENT}, #{OFF_URL}, #{OFF_BRD_YN}, #{OFF_TITLE}, #{OFF_PROF_HTML}, #{OFF_OPENYN}
            , #{PIC1},       #{PIC2},        #{PIC3},       #{PIC4},        #{PIC5},       #{PIC6},        #{PIC7},       #{PIC8}
            , #{OFF_PIC1}, #{OFF_PIC2}, #{OFF_PIC3}, #{OFF_PIC4}, #{OFF_PIC5}, #{OFF_PIC6}, #{OFF_PIC7}, #{OFF_PIC8}
             , #{PIC7_TURL}, #{OFF_PIC7_TURL}, #{PIC8_TURL}, #{OFF_PIC8_TURL}
            , 'Y'
            , SYSDATE, #{REG_ID}, SYSDATE, #{UPD_ID}, #{TeacherOnOff_YN}, #{PRF_ONPIC1}, #{PRF_ONPIC2}, #{PRF_ONPIC3}, #{PRF_OFFPIC1}, #{PRF_OFFPIC2}, #{PRF_OFFPIC3}, #{PRF_LISTONBANNER}, #{PRF_LISTOFFBANNER}
            , #{PROF_IMG}, #{OFF_PROF_IMG} , #{PRF_TOPONIMG}, #{PRF_TOPOFFIMG}, #{PIC9}, #{OFF_PIC9}, #{PIC10}, #{OFF_PIC10}, #{PIC9_TURL}, #{OFF_PIC9_TURL}, #{PIC10_TURL}, #{OFF_PIC10_TURL}
        )
    </insert>

    <insert id="teacherInfoInsert" parameterType="hashMap" flushCache="true">
        INSERT INTO TB_MA_MEMBER_INFO(
        	USER_ID,
            PROFILE,       BOOK_LOG,       YPLAN,        LECINFO
            , OFF_PROFILE, OFF_BOOK_LOG_COP, OFF_YPLAN, OFF_LECINFO
        ) VALUES(
        	#{USER_ID},
            #{PROFILE},       #{BOOK_LOG},       #{YPLAN},       #{LECINFO}
            , #{OFF_PROFILE}, #{OFF_BOOK_LOG}, #{OFF_YPLAN}, #{OFF_LECINFO}
        )
    </insert>

    <insert id="teacherCategoryInsert" parameterType="hashMap" flushCache="true">
        INSERT INTO TB_MA_MEMBER_CATEGORY(
            USER_ID, CATEGORY_CODE
            , SEQ
            , REG_DT, REG_ID, UPD_DT, UPD_ID
        ) VALUES(
            #{USER_ID}, #{CATEGORY_CODE}
            , (SELECT NVL(MAX(SEQ), 0) + 1 FROM TB_MA_MEMBER_CATEGORY WHERE CATEGORY_CODE = #{CATEGORY_CODE})
            , SYSDATE, #{REG_ID}, SYSDATE, #{UPD_ID}
        )
    </insert>

    <insert id="teacherSubjectInsert" parameterType="hashMap" flushCache="true">
        INSERT INTO TB_MA_MEMBER_SUBJECT(
            USER_ID, SUBJECT_CD, REG_DT, REG_ID, UPD_DT, UPD_ID
            <if test='USE_ON != null and USE_ON != ""'>
            	,USE_ON
            </if>
            <if test='USE_OFF != null and USE_OFF != ""'>
        		,USE_OFF 
        	</if>
        ) VALUES (
            #{USER_ID}, #{SUBJECT_CD}, SYSDATE, #{REG_ID}, SYSDATE, #{UPD_ID}
             <if test='USE_ON != null and USE_ON != ""'>
            	,#{USE_ON}
            </if>
            <if test='USE_OFF != null and USE_OFF != ""'>
        		,#{USE_OFF} 
        	</if>
        )
    </insert>
    
    <update id="teacherSubjectUpdate" parameterType="hashMap" flushCache="true">
        update TB_MA_MEMBER_SUBJECT 
        SET USE_OFF = #{USE_OFF} 
        WHERE USER_ID = #{USER_ID} 
        AND SUBJECT_CD = #{SUBJECT_CD}
    </update>
	
	<select id="teacherSubjectCount" parameterType="hashMap" resultType="int">
	SELECT COUNT(*) FROM TB_MA_MEMBER_SUBJECT WHERE USER_ID = #{USER_ID} AND SUBJECT_CD = #{SUBJECT_CD}
	</select>
    <update id="teacherUpdate" parameterType="hashMap">
        UPDATE TB_MA_MEMBER
            SET USER_NM = #{USER_NM}
            , USER_NICKNM = #{USER_NICKNM}
            , USER_POSITION = #{USER_POSITION}
            <if test="USER_PWD != null and USER_PWD != ''">
            , USER_PWD = DAMO.HASH_STR_DATA@WILLBESGOSI_OLD(#{USER_PWD})
            </if>
            , BIRTH_DAY = #{BIRTH_DAY}
            , EMAIL = #{EMAIL}
            , ACCOUNT = #{ACCOUNT}
            , PHONE_NO = #{PHONE_NO}
            , PAYMENT = #{PAYMENT}
            , OFF_PAYMENT = #{OFF_PAYMENT}
            , ON_URL = #{ON_URL}
            , OFF_URL = #{OFF_URL}
            , BRD_YN = #{BRD_YN}
            , OFF_BRD_YN = #{OFF_BRD_YN}
            , TITLE = #{TITLE}
            , OFF_TITLE = #{OFF_TITLE}
            , PROF_HTML = #{PROF_HTML}
            , OFF_PROF_HTML = #{OFF_PROF_HTML}
            , ON_OPENYN = #{ON_OPENYN}
            , OFF_OPENYN = #{OFF_OPENYN}
            <if test='TeacherOnOff_YN != ""'>
            , TeacherOnOff_YN = #{TeacherOnOff_YN}
            </if>

            <if test='PIC1_DEL == "Y" and PIC1 == ""'>, PIC1 = ''</if>
            <if test='PIC1 != ""'>, PIC1 = #{PIC1}</if>
            <if test='PIC2_DEL == "Y" and PIC2 == ""'>, PIC2 = ''</if>
            <if test='PIC2 != ""'>, PIC2 = #{PIC2}</if>
            <if test='PIC3_DEL == "Y" and PIC3 == ""'>, PIC3 = ''</if>
            <if test='PIC3 != ""'>, PIC3 = #{PIC3}</if>
            <if test='PIC4_DEL == "Y" and PIC4 == ""'>, PIC4 = ''</if>
            <if test='PIC4 != ""'>, PIC4 = #{PIC4}</if>
            <if test='PIC5_DEL == "Y" and PIC5 == ""'>, PIC5 = ''</if>
            <if test='PIC5 != ""'>, PIC5 = #{PIC5}</if>
            <if test='PIC6_DEL == "Y" and PIC6 == ""'>, PIC6 = ''</if>
            <if test='PIC6 != ""'>, PIC6 = #{PIC6}</if>
            <if test='PIC7_DEL == "Y" and PIC7 == ""'>, PIC7 = ''</if>
            <if test='PIC7 != ""'>, PIC7 = #{PIC7}</if>
            <if test='PIC8_DEL == "Y" and PIC8 == ""'>, PIC8 = ''</if>
            <if test='PIC8 != ""'>, PIC8 = #{PIC8}</if>
            <if test='PIC9_DEL == "Y" and PIC9 == ""'>, PIC9 = ''</if>
            <if test='PIC9 != ""'>, PIC9 = #{PIC9}</if>
            <if test='PIC10_DEL == "Y" and PIC10 == ""'>, PIC10 = ''</if>
            <if test='PIC10 != ""'>, PIC10 = #{PIC10}</if>

            <if test='OFF_PIC1_DEL == "Y" and OFF_PIC1 == ""'>, OFF_PIC1 = ''</if>
            <if test='OFF_PIC1 != ""'>, OFF_PIC1 = #{OFF_PIC1}</if>
            <if test='OFF_PIC2_DEL == "Y" and OFF_PIC2 == ""'>, OFF_PIC2 = ''</if>
            <if test='OFF_PIC2 != ""'>, OFF_PIC2 = #{OFF_PIC2}</if>
            <if test='OFF_PIC3_DEL == "Y" and OFF_PIC3 == ""'>, OFF_PIC3 = ''</if>
            <if test='OFF_PIC3 != ""'>, OFF_PIC3 = #{OFF_PIC3}</if>
            <if test='OFF_PIC4_DEL == "Y" and OFF_PIC4 == ""'>, OFF_PIC4 = ''</if>
            <if test='OFF_PIC4 != ""'>, OFF_PIC4 = #{OFF_PIC4}</if>
            <if test='OFF_PIC5_DEL == "Y" and OFF_PIC5 == ""'>, OFF_PIC5 = ''</if>
            <if test='OFF_PIC5 != ""'>, OFF_PIC5 = #{OFF_PIC5}</if>
            <if test='OFF_PIC6_DEL == "Y" and OFF_PIC6 == ""'>, OFF_PIC6 = ''</if>
            <if test='OFF_PIC6 != ""'>, OFF_PIC6 = #{OFF_PIC6}</if>
            <if test='OFF_PIC7_DEL == "Y" and OFF_PIC7 == ""'>, OFF_PIC7 = ''</if>
            <if test='OFF_PIC7 != ""'>, OFF_PIC7 = #{OFF_PIC7}</if>
            <if test='OFF_PIC8_DEL == "Y" and OFF_PIC8 == ""'>, OFF_PIC8 = ''</if>
            <if test='OFF_PIC8 != ""'>, OFF_PIC8 = #{OFF_PIC8}</if>
            <if test='OFF_PIC9_DEL == "Y" and OFF_PIC9 == ""'>, OFF_PIC9 = ''</if>
            <if test='OFF_PIC9 != ""'>, OFF_PIC9 = #{OFF_PIC9}</if>
            <if test='OFF_PIC10_DEL == "Y" and OFF_PIC10 == ""'>, OFF_PIC10 = ''</if>
            <if test='OFF_PIC10 != ""'>, OFF_PIC10 = #{OFF_PIC10}</if>

            <if test='PRF_ONPIC1_DELNM == "Y" and PRF_ONPIC1 == ""'>, PRF_ONPIC1 = ''</if>
            <if test='PRF_ONPIC1 != ""'>, PRF_ONPIC1 = #{PRF_ONPIC1}</if>
            <if test='PRF_ONPIC2_DELNM == "Y" and PRF_ONPIC2 == ""'>, PRF_ONPIC2 = ''</if>
            <if test='PRF_ONPIC2 != ""'>, PRF_ONPIC2 = #{PRF_ONPIC2}</if>
            <if test='PRF_ONPIC3_DELNM == "Y" and PRF_ONPIC3 == ""'>, PRF_ONPIC3 = ''</if>
            <if test='PRF_ONPIC3 != ""'>, PRF_ONPIC3 = #{PRF_ONPIC3}</if>
            <if test='PRF_OFFPIC1_DELNM == "Y" and PRF_OFFPIC1 == ""'>, PRF_OFFPIC1 = ''</if>
            <if test='PRF_OFFPIC1 != ""'>, PRF_OFFPIC1 = #{PRF_OFFPIC1}</if>
            <if test='PRF_OFFPIC2_DELNM == "Y" and PRF_OFFPIC2 == ""'>, PRF_OFFPIC2 = ''</if>
            <if test='PRF_OFFPIC2 != ""'>, PRF_OFFPIC2 = #{PRF_OFFPIC2}</if>
            <if test='PRF_OFFPIC3_DELNM == "Y" and PRF_OFFPIC3 == ""'>, PRF_OFFPIC3 = ''</if>
            <if test='PRF_OFFPIC3 != ""'>, PRF_OFFPIC3 = #{PRF_OFFPIC3}</if>
            <if test='PRF_LISTONBANNER_DEL == "Y" and PRF_LISTONBANNER == ""'>, PRF_LISTONBANNER = ''</if>
            <if test='PRF_LISTONBANNER != ""'>, PRF_LISTONBANNER = #{PRF_LISTONBANNER}</if>
            <if test='PRF_LISTOFFBANNER_DEL == "Y" and PRF_LISTOFFBANNER == ""'>, PRPRF_LISTOFFBANNER = ''</if>
            <if test='PRF_LISTOFFBANNER != ""'>, PRF_LISTOFFBANNER = #{PRF_LISTOFFBANNER}</if>
            <if test='PROF_IMG_DEL == "Y" and PROF_IMG == ""'>, PROF_IMG = ''</if>
            <if test='PROF_IMG != ""'>, PROF_IMG = #{PROF_IMG}</if>
            <if test='OFF_PROF_IMG_DEL == "Y" and OFF_PROF_IMG == ""'>, OFF_PROF_IMG = ''</if>
            <if test='OFF_PROF_IMG != ""'>, OFF_PROF_IMG = #{OFF_PROF_IMG}</if>
            <if test='PRF_TOPONIMG_DEL == "Y" and PRF_TOPONIMG == ""'>, PRF_TOPONIMG = ''</if>
            <if test='PRF_TOPONIMG != ""'>, PRF_TOPONIMG = #{PRF_TOPONIMG}</if>
            <if test='PRF_TOPOFFIMG_DEL == "Y" and PRF_TOPOFFIMG == ""'>, PRF_TOPOFFIMG = ''</if>
            <if test='PRF_TOPOFFIMG != ""'>, PRF_TOPOFFIMG = #{PRF_TOPOFFIMG}</if>

            , PIC7_TURL = #{PIC7_TURL}
            , PIC8_TURL = #{PIC8_TURL}
             , PIC9_TURL = #{PIC9_TURL}
            , PIC10_TURL = #{PIC10_TURL}
            , OFF_PIC7_TURL = #{OFF_PIC7_TURL}
            , OFF_PIC8_TURL = #{OFF_PIC8_TURL}
            , OFF_PIC9_TURL = #{OFF_PIC9_TURL}
            , OFF_PIC10_TURL = #{OFF_PIC10_TURL}
            , PRF_BRD_ON = #{PRF_BRD_ON}
            , PRF_BRD_OF = #{PRF_BRD_OF}

            , UPD_DT = SYSDATE
            , UPD_ID = #{UPD_ID}
        WHERE USER_ID = #{USER_ID}
    </update>
        
    <update id="teacherInfoUpdate" parameterType="hashMap">
        UPDATE TB_MA_MEMBER_INFO
            SET PROFILE = #{PROFILE}
               , OFF_PROFILE = #{OFF_PROFILE}
               , BOOK_LOG = #{BOOK_LOG}	
	           , OFF_BOOK_LOG_COP = #{OFF_BOOK_LOG}
               , YPLAN = #{YPLAN}
               , OFF_YPLAN = #{OFF_YPLAN}
               , LECINFO = #{LECINFO}
               , OFF_LECINFO = #{OFF_LECINFO}
        WHERE USER_ID = #{USER_ID}
    </update>

    <delete id="teacherIsUseUpdate" parameterType="hashMap" flushCache="true">
        UPDATE TB_MA_MEMBER SET ISUSE = 'N', ON_OPENYN = 'N', OFF_OPENYN = 'N' WHERE USER_ID = #{USER_ID}
        <!-- DELETE FROM TB_MA_MEMBER WHERE USER_ID = #{USER_ID} -->
    </delete>

    <delete id="teacherDelete" parameterType="hashMap" flushCache="true">
        DELETE FROM TB_MA_MEMBER WHERE USER_ID = #{USER_ID}
    </delete>

    <delete id="teacherCategoryDelete" parameterType="hashMap" flushCache="true">
        DELETE FROM TB_MA_MEMBER_CATEGORY WHERE USER_ID = #{USER_ID}    AND CATEGORY_CODE = #{DEL_CATEGORY_CODE}
    </delete>

    <delete id="teacherSubjectDelete" parameterType="hashMap" flushCache="true">
        DELETE FROM TB_MA_MEMBER_SUBJECT WHERE USER_ID = #{USER_ID}
    </delete>

    <update id="teacherSeqUpdate" parameterType="hashMap">
		<choose>
            <when test="SEARCHCATEGORY == 'main'">
                UPDATE TB_MA_MEMBER_MAIN_CATEGORY
                SET SEQ = #{NUM} WHERE USER_ID = #{USER_ID} AND CATEGORY_CODE = #{SEARCHCATEGORY}  AND SUBJECT_CD = #{SUBJECT_CD}
            </when>
            <when test="SEARCHCATEGORY == 'intro'">
                UPDATE TB_MA_MEMBER_INTRO_CATEGORY
                SET SEQ = #{NUM} WHERE USER_ID = #{USER_ID} AND CATEGORY_CODE = #{SEARCHCATEGORY}  AND SUBJECT_CD = #{SUBJECT_CD}
            </when>
            <when test="SEARCHCATEGORY == 'intro_off'">
                UPDATE TB_MA_MEMBER_INTRO_F_CATEGORY
                SET SEQ = #{NUM} WHERE USER_ID = #{USER_ID} AND CATEGORY_CODE = #{SEARCHCATEGORY}  AND SUBJECT_CD = #{SUBJECT_CD}
            </when>           
            <otherwise>
                <choose>
                    <when test='ONOFFDIV == "F"'>
                UPDATE TB_MA_MEMBER_CATEGORY
                SET OFF_SEQ = #{NUM} WHERE USER_ID = #{USER_ID} AND CATEGORY_CODE = #{SEARCHCATEGORY}
                    </when>
                    <otherwise>
                UPDATE TB_MA_MEMBER_CATEGORY
                SET SEQ = #{NUM} WHERE USER_ID = #{USER_ID} AND CATEGORY_CODE = #{SEARCHCATEGORY}
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </update>

    <select id="teacherBookLog" parameterType="hashMap" resultMap="teacherMap">
        SELECT * FROM TB_CA_BOOK WHERE SUBJECT_SJT_CD LIKE '%'||#{USER_ID}||'%'
    </select>

	<insert id="teacherMain_Category_Insert" parameterType="hashMap" flushCache="true">
		INSERT INTO TB_MA_MEMBER_MAIN_CATEGORY(USER_ID, CATEGORY_CODE, SEQ, REG_DT, REG_ID, UPD_DT, UPD_ID, SUBJECT_CD)
		VALUES (#{USER_ID}, 'main', (SELECT NVL(MAX(SEQ), 0) + 1 FROM TB_MA_MEMBER_MAIN_CATEGORY), SYSDATE, #{UPD_ID}, SYSDATE, #{UPD_ID}, #{SUBJECT_CD})
	</insert>

	<delete id="teacherMain_Category_Delete" parameterType="hashMap" flushCache="true">
		DELETE FROM TB_MA_MEMBER_MAIN_CATEGORY WHERE USER_ID = #{USER_ID}
	</delete>
	
	<insert id="teacherIntro_Category_Insert" parameterType="hashMap" flushCache="true">
		INSERT INTO TB_MA_MEMBER_INTRO_CATEGORY(USER_ID, CATEGORY_CODE, SEQ, REG_DT, REG_ID, UPD_DT, UPD_ID, SUBJECT_CD)
		VALUES (#{USER_ID}, 'intro', (SELECT NVL(MAX(SEQ), 0) + 1 FROM TB_MA_MEMBER_INTRO_CATEGORY), SYSDATE, #{UPD_ID}, SYSDATE, #{UPD_ID}, #{SUBJECT_CD})
	</insert>
	
	<insert id="teacherIntro_F_Category_Insert" parameterType="hashMap" flushCache="true">
		INSERT INTO TB_MA_MEMBER_INTRO_F_CATEGORY(USER_ID, CATEGORY_CODE, SEQ, REG_DT, REG_ID, UPD_DT, UPD_ID, SUBJECT_CD)
		VALUES (#{USER_ID}, 'intro_off', (SELECT NVL(MAX(SEQ), 0) + 1 FROM TB_MA_MEMBER_INTRO_F_CATEGORY), SYSDATE, #{UPD_ID}, SYSDATE, #{UPD_ID}, #{SUBJECT_CD})
	</insert>

	<delete id="teacherIntro_Category_Delete" parameterType="hashMap" flushCache="true">
		DELETE FROM TB_MA_MEMBER_INTRO_CATEGORY WHERE USER_ID = #{USER_ID}
	</delete>
	
	<delete id="teacherIntro_F_Category_Delete" parameterType="hashMap" flushCache="true">
		DELETE FROM TB_MA_MEMBER_INTRO_F_CATEGORY WHERE USER_ID = #{USER_ID}
	</delete>

	<select id="teacherMainListCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
        FROM(
		SELECT COUNT(A.USER_ID)

            FROM TB_MA_MEMBER_MAIN_CATEGORY A, TB_MA_MEMBER B, TB_SUBJECT_INFO C, TB_MAIN_CATEGORY_SUBJECT_ORDER D
            WHERE A.USER_ID = B.USER_ID
            AND A.SUBJECT_CD = C.SUBJECT_CD
            AND C.SUBJECT_CD = D.SUBJECT_CD
            AND D.ONOFF_DIV = 'M'
            AND C.ISUSE = 'Y'
            AND B.ISUSE = 'Y'
            AND OFF_OPENYN = 'Y'
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
				<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
					<if test="SEARCHTYPE == 1">
						AND A.USER_ID like '%'||#{SEARCHTEXT}||'%'
					</if>
					<if test="SEARCHTYPE == 2">
						AND B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					</if>
				</if>
				<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
					AND (
						A.USER_ID like '%'||#{SEARCHTEXT}||'%'
						OR B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					)
				</if>
			</if>
            GROUP BY A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO, B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN, A.SUBJECT_CD, C.SUBJECT_NM, A.SEQ, D.SUBJECT_CD, A.CATEGORY_CODE, C.SUBJECT_CD
            )A

	</select>

	<select id="teacherIntroListCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
        FROM(
		SELECT COUNT(A.USER_ID)

            FROM TB_MA_MEMBER_INTRO_CATEGORY A, TB_MA_MEMBER B, TB_SUBJECT_INFO C, TB_INTR_CATEGORY_SUBJECT_ORDER D
            WHERE A.USER_ID = B.USER_ID
            AND A.SUBJECT_CD = C.SUBJECT_CD
            AND C.SUBJECT_CD = D.SUBJECT_CD
            AND D.ONOFF_DIV = 'I'
            AND C.ISUSE = 'Y'
            AND B.ISUSE = 'Y'
            AND OFF_OPENYN = 'Y'
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
				<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
					<if test="SEARCHTYPE == 1">
						AND A.USER_ID like '%'||#{SEARCHTEXT}||'%'
					</if>
					<if test="SEARCHTYPE == 2">
						AND B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					</if>
				</if>
				<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
					AND (
						A.USER_ID like '%'||#{SEARCHTEXT}||'%'
						OR B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					)
				</if>
			</if>
            GROUP BY A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO, B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN, A.SUBJECT_CD, C.SUBJECT_NM, A.SEQ, D.SUBJECT_CD, A.CATEGORY_CODE, C.SUBJECT_CD
            )A

	</select>
	
	<select id="teacherIntro_offListCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
        FROM(
		SELECT COUNT(A.USER_ID)

            FROM TB_MA_MEMBER_INTRO_F_CATEGORY A, TB_MA_MEMBER B, TB_SUBJECT_INFO C, TB_INTR_CATEGORY_SUBJECT_ORDER D
            WHERE A.USER_ID = B.USER_ID
            AND A.SUBJECT_CD = C.SUBJECT_CD
            AND C.SUBJECT_CD = D.SUBJECT_CD
            AND D.ONOFF_DIV = 'I'
            AND C.ISUSE = 'Y'
            AND B.ISUSE = 'Y'
            AND OFF_OPENYN = 'Y'
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
				<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
					<if test="SEARCHTYPE == 1">
						AND A.USER_ID like '%'||#{SEARCHTEXT}||'%'
					</if>
					<if test="SEARCHTYPE == 2">
						AND B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					</if>
				</if>
				<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
					AND (
						A.USER_ID like '%'||#{SEARCHTEXT}||'%'
						OR B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					)
				</if>
			</if>
            GROUP BY A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO, B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN, A.SUBJECT_CD, C.SUBJECT_NM, A.SEQ, D.SUBJECT_CD, A.CATEGORY_CODE, C.SUBJECT_CD
            )A

	</select>


	<select id="teacherMainList" parameterType="hashMap" resultType="hashMap">

		SELECT A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO
                   , DECODE(B.ISUSE, 'Y', '공개', 'N', '비공개') ISUSENM
                   , B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN
                   , DECODE(NVL(ON_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') ON_OPENYNNM
                   , DECODE(NVL(OFF_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') OFF_OPENYNNM
                   , A.SUBJECT_CD
                   , C.SUBJECT_NM
                   , A.CATEGORY_CODE CATEGORY_CD
                   , (SELECT LISTAGG('['||DD.NAME||'] ','') WITHIN GROUP(ORDER BY CC.CATEGORY_CODE ASC)
                      FROM TB_MA_MEMBER_CATEGORY CC LEFT JOIN TB_CATEGORY_INFO DD
                      ON CC.CATEGORY_CODE = DD.CODE
                      WHERE USER_ID = A.USER_ID
                     ) CATEGORY_NM
                   , A.SEQ
                   , C.SUBJECT_CD

            FROM TB_MA_MEMBER_MAIN_CATEGORY A, TB_MA_MEMBER B, TB_SUBJECT_INFO C, TB_MAIN_CATEGORY_SUBJECT_ORDER D
            WHERE A.USER_ID = B.USER_ID
            AND A.SUBJECT_CD = C.SUBJECT_CD
            AND C.SUBJECT_CD = D.SUBJECT_CD
            AND D.ONOFF_DIV = 'M'
            AND C.ISUSE = 'Y'
            AND B.ISUSE = 'Y'
            AND OFF_OPENYN = 'Y'
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
				<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
					<if test="SEARCHTYPE == 1">
						AND A.USER_ID like '%'||#{SEARCHTEXT}||'%'
					</if>
					<if test="SEARCHTYPE == 2">
						AND B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					</if>
				</if>
				<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
					AND (
						A.USER_ID like '%'||#{SEARCHTEXT}||'%'
						OR B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					)
				</if>
			</if>
            GROUP BY A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO, B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN, A.SUBJECT_CD, C.SUBJECT_NM, A.SEQ, D.SUBJECT_CD, A.CATEGORY_CODE, C.SUBJECT_CD

            ORDER BY MIN(D.IDX), C.SUBJECT_CD, A.SEQ
	</select>

	<select id="teacherIntroList" parameterType="hashMap" resultType="hashMap">

		SELECT A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO
                   , DECODE(B.ISUSE, 'Y', '공개', 'N', '비공개') ISUSENM
                   , B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN
                   , DECODE(NVL(ON_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') ON_OPENYNNM
                   , DECODE(NVL(OFF_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') OFF_OPENYNNM
                   , A.SUBJECT_CD
                   , C.SUBJECT_NM
                   , A.CATEGORY_CODE CATEGORY_CD
                   , (SELECT LISTAGG('['||DD.NAME||'] ','') WITHIN GROUP(ORDER BY CC.CATEGORY_CODE ASC)
                      FROM TB_MA_MEMBER_CATEGORY CC LEFT JOIN TB_CATEGORY_INFO DD
                      ON CC.CATEGORY_CODE = DD.CODE
                      WHERE USER_ID = A.USER_ID
                     ) CATEGORY_NM
                   , A.SEQ
                   , C.SUBJECT_CD

            FROM TB_MA_MEMBER_INTRO_CATEGORY A, TB_MA_MEMBER B, TB_SUBJECT_INFO C, TB_INTR_CATEGORY_SUBJECT_ORDER D
            WHERE A.USER_ID = B.USER_ID
            AND A.SUBJECT_CD = C.SUBJECT_CD
            AND C.SUBJECT_CD = D.SUBJECT_CD
            AND D.ONOFF_DIV = 'I'
            AND C.ISUSE = 'Y'
            AND B.ISUSE = 'Y'
            AND OFF_OPENYN = 'Y'
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
				<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
					<if test="SEARCHTYPE == 1">
						AND A.USER_ID like '%'||#{SEARCHTEXT}||'%'
					</if>
					<if test="SEARCHTYPE == 2">
						AND B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					</if>
				</if>
				<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
					AND (
						A.USER_ID like '%'||#{SEARCHTEXT}||'%'
						OR B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					)
				</if>
			</if>
            GROUP BY A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO, B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN, A.SUBJECT_CD, C.SUBJECT_NM, A.SEQ, D.SUBJECT_CD, A.CATEGORY_CODE, C.SUBJECT_CD

            ORDER BY MIN(D.IDX), C.SUBJECT_CD, A.SEQ
	</select>

	<select id="teacherIntro_offList" parameterType="hashMap" resultType="hashMap">

		SELECT A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO
                   , DECODE(B.ISUSE, 'Y', '공개', 'N', '비공개') ISUSENM
                   , B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN
                   , DECODE(NVL(ON_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') ON_OPENYNNM
                   , DECODE(NVL(OFF_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') OFF_OPENYNNM
                   , A.SUBJECT_CD
                   , C.SUBJECT_NM
                   , A.CATEGORY_CODE CATEGORY_CD
                   , (SELECT LISTAGG('['||DD.NAME||'] ','') WITHIN GROUP(ORDER BY CC.CATEGORY_CODE ASC)
                      FROM TB_MA_MEMBER_CATEGORY CC LEFT JOIN TB_CATEGORY_INFO DD
                      ON CC.CATEGORY_CODE = DD.CODE
                      WHERE USER_ID = A.USER_ID
                     ) CATEGORY_NM
                   , A.SEQ

            FROM TB_MA_MEMBER_INTRO_F_CATEGORY A, TB_MA_MEMBER B, TB_SUBJECT_INFO C, TB_INTR_CATEGORY_SUBJECT_ORDER D
            WHERE A.USER_ID = B.USER_ID
            AND A.SUBJECT_CD = C.SUBJECT_CD
            AND C.SUBJECT_CD = D.SUBJECT_CD
            AND D.ONOFF_DIV = 'I'
            AND C.ISUSE = 'Y'
            AND B.ISUSE = 'Y'
            AND OFF_OPENYN = 'Y'
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
				<if test="SEARCHTYPE != null and SEARCHTYPE != ''">
					<if test="SEARCHTYPE == 1">
						AND A.USER_ID like '%'||#{SEARCHTEXT}||'%'
					</if>
					<if test="SEARCHTYPE == 2">
						AND B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					</if>
				</if>
				<if test="SEARCHTYPE == null or SEARCHTYPE == ''">
					AND (
						A.USER_ID like '%'||#{SEARCHTEXT}||'%'
						OR B.USER_NM like '%'||#{SEARCHTEXT}||'%'
					)
				</if>
			</if>
            GROUP BY A.USER_ID, B.USER_NM, B.ISUSE, B.EMAIL, B.PHONE_NO, B.REG_DT, B.BIRTH_DAY, B.ON_OPENYN, B.OFF_OPENYN, A.SUBJECT_CD, C.SUBJECT_NM, A.SEQ, D.SUBJECT_CD, A.CATEGORY_CODE, C.SUBJECT_CD

            ORDER BY MIN(D.IDX), C.SUBJECT_CD, A.SEQ
	</select>

    <select id="findTeacherList" parameterType="hashMap" resultType="hashMap">
        SELECT *
        FROM (
            SELECT
                AA.USER_ID, AA.USER_NM, AA.ISUSE, AA.EMAIL, AA.PHONE_NO
                , DECODE(AA.ISUSE, 'Y', '공개', 'N', '비공개') ISUSENM
                , AA.REG_DT, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
                , DECODE(NVL(ON_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') ON_OPENYNNM
                , DECODE(NVL(OFF_OPENYN,'Y'), 'Y', '활성', 'N', '비활성') OFF_OPENYNNM
            FROM TB_MA_MEMBER_SUBJECT B, TB_SUBJECT_INFO C, TB_MA_MEMBER AA
            LEFT JOIN TB_MA_MEMBER_CATEGORY BB ON AA.USER_ID = BB.USER_ID
            WHERE 1=1
            AND AA.USER_ID = B.USER_ID
            AND B.SUBJECT_CD = C.SUBJECT_CD
            AND AA.USER_ROLE = 'PRF'
            AND AA.ISUSE = 'Y'
            AND C.ISUSE = 'Y'
            <if test="SEARCHTEXT != null and SEARCHTEXT != ''">
                <if test="SEARCHTYPE != null and SEARCHTYPE != ''">
                    <if test="SEARCHTYPE == 1">
                        AND AA.USER_ID like '%'||#{SEARCHTEXT}||'%'
                    </if>
                    <if test="SEARCHTYPE == 2">
                        AND AA.USER_NM like '%'||#{SEARCHTEXT}||'%'
                    </if>
                </if>
                <if test="SEARCHTYPE == null or SEARCHTYPE == ''">
                    AND (
                        AA.USER_ID like '%'||#{SEARCHTEXT}||'%'
                        OR AA.USER_NM like '%'||#{SEARCHTEXT}||'%'
                    )
                </if>
            </if>
            <if test="ARR_CATEGORYS == null or ARR_CATEGORYS == ''">
	            <if test="SEARCHCATEGORY != null and SEARCHCATEGORY != ''">
	            AND BB.CATEGORY_CODE = #{SEARCHCATEGORY}
	            </if>
            </if>
	        <if test="ARR_CATEGORYS != null and ARR_CATEGORYS != ''">
	       		AND BB.CATEGORY_CODE IN (${ARR_CATEGORYS})
	        </if>
            
            <if test="SEARCHSBJTCD != null and SEARCHSBJTCD != ''">
            AND B.SUBJECT_CD = #{SEARCHSBJTCD}
            </if>
            GROUP BY AA.USER_ID, AA.USER_NM, AA.ISUSE, AA.EMAIL, AA.PHONE_NO, AA.REG_DT, AA.UPD_DT, AA.USER_ROLE, AA.BIRTH_DAY, AA.ON_OPENYN, AA.OFF_OPENYN
        )G
        ORDER BY USER_NM
    </select>
    
    <select id="teacherMain_Category_Subject" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM TB_MA_MEMBER_MAIN_CATEGORY
		WHERE USER_ID = #{USER_ID}
		AND SUBJECT_CD = #{SUBJECT_CD}
	</select>
	
    <select id="teacherIntro_Category_Subject" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM TB_MA_MEMBER_INTRO_CATEGORY
		WHERE USER_ID = #{USER_ID}
		AND SUBJECT_CD = #{SUBJECT_CD}
	</select>	
	
	<select id="teacherIntro_F_Category_Subject" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM TB_MA_MEMBER_INTRO_F_CATEGORY
		WHERE USER_ID = #{USER_ID}
		AND SUBJECT_CD = #{SUBJECT_CD}
	</select>	

</mapper>