<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="manage">
	
	<select id="onSalesList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
        SELECT *
        FROM (
              SELECT T1.SRHTYPE, T1.TOTAL_PRICE, T2.TOTAL_PRICE REFUND_PAY, T1.USER_COUNT,
                   CASE #{SEARCHTYPE}
                   WHEN 'C' THEN (SELECT NAME FROM TB_CATEGORY_INFO WHERE CODE = T1.SRHTYPE)
                   WHEN 'S' THEN (SELECT SUBJECT_NM FROM TB_SUBJECT_INFO WHERE SUBJECT_CD = T1.SRHTYPE)
                   WHEN 'L' THEN (SELECT NAME FROM TB_LEARNING_FORM_INFO WHERE CODE = T1.SRHTYPE)
                   WHEN 'T' THEN (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = T1.SRHTYPE) 
                   END SRHNAME
              FROM (
                    SELECT SRHTYPE, TOTAL_PRICE, USER_COUNT
                    FROM (
                          SELECT A.SRHTYPE, 
                                 SUM(PRICE) TOTAL_PRICE, COUNT(A.USERID) USER_COUNT
                          FROM (
                                SELECT A.SRHTYPE, A.USERID,
                                       CASE A.LEC_TYPE_CHOICE WHEN 'D' THEN A.PRICE
                                                                        ELSE A.P_PRICE
                                       END PRICE
                                FROM (
                                      SELECT A.LECCODE, A.SRHTYPE, A.LEC_TYPE_CHOICE,
                                             B.ORDERNO, B.STATUSCODE, B.USERID, B.PRICE, 0 P_PRICE
                                      FROM (
                                            SELECT LECCODE, 
                                                   CASE #{SEARCHTYPE}
                                                   WHEN 'C' THEN CATEGORY_CD 
                                                   WHEN 'S' THEN SUBJECT_SJT_CD
                                                   WHEN 'L' THEN LEARNING_CD
                                                   WHEN 'T' THEN SUBJECT_TEACHER END SRHTYPE,
                                            LEC_TYPE_CHOICE
                                            FROM TB_LEC_MST
                                            WHERE      LEC_TYPE_CHOICE = 'D'
                                           ) A,
                                           (
                                            SELECT A.REG_DT, A.USERID, B.ORDERNO, B.MGNTNO, 
                                            NVL(DECODE (B.GIFT_YN, 'Y', 0, B.PRICE), 0) AS PRICE, B.STATUSCODE
                                            FROM (
                                                  SELECT A.ORDERNO, A.PACKAGE_NO, A.REG_DT, A.USERID
                                                  FROM TB_ORDER_MGNT_NO M, TB_MYLECTURE A LEFT JOIN TB_MA_MEMBER B
                                                  ON A.USERID = B.USER_ID
                                                  WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                                  AND A.ORDERNO = M.ORDERNO
                                                  AND A.PACKAGE_NO = M.MGNTNO
                                                  AND M.STATUSCODE = 'DLV105'
                                                  AND NVL (DECODE (M.GIFT_YN, 'Y', 0, M.PRICE), 0) > 0
                                                  AND M.PTYPE <> 'L'
                                                 ) A, TB_ORDER_MGNT_NO B, TB_APPROVALS C
                                            WHERE A.ORDERNO = B.ORDERNO
                                            AND A.PACKAGE_NO = B.MGNTNO
                                            AND A.ORDERNO = C.ORDERNO
                                            AND NVL(DECODE (B.GIFT_YN, 'Y', 0, B.PRICE), 0) > 0
                                            AND B.STATUSCODE = 'DLV105'
                                           ) B
                                      WHERE A.LECCODE = B.MGNTNO
                                UNION
                                SELECT EE.LECCODE, 
                                       CASE #{SEARCHTYPE}
                                       WHEN 'C' THEN EE.CATEGORY_CD 
                                       WHEN 'S' THEN EE.SUBJECT_SJT_CD
                                       WHEN 'L' THEN EE.LEARNING_CD
                                       WHEN 'T' THEN EE.SUBJECT_TEACHER END SRHTYPE,
                                       BB.PTYPE LEC_TYPE_CHOICE,
                                       AA.ORDERNO, BB.STATUSCODE, AA.USERID,
                                       NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE,
                                       PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.PACKAGE_NO, AA.LECTURE_NO, BB.STATUSCODE) P_PRICE 
                                FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, TB_LEC_MST EE
                                WHERE AA.ORDERNO = BB.ORDERNO
                                AND AA.ORDERNO = CC.ORDERNO
                                AND AA.PACKAGE_NO = BB.MGNTNO
                                AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) > 0
                                AND BB.STATUSCODE = 'DLV105'
                                AND AA.USERID = DD.USER_ID
                                AND AA.LECTURE_NO = EE.LECCODE
                                AND AA.LECTURE_NO <> BB.MGNTNO
                                AND BB.PTYPE <> 'Y'
                                AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                               ) A
                          ) A
                          GROUP BY SRHTYPE
                        ) A
                    ) T1
                    LEFT JOIN
                    (
                     SELECT SRHTYPE, TOTAL_PRICE
                     FROM (
                           SELECT A.SRHTYPE, SUM(PRICE) TOTAL_PRICE, COUNT(A.USERID) USER_COUNT
                           FROM (
                                 SELECT A.SRHTYPE,
                                        A.USERID,
                                        CASE A.LEC_TYPE_CHOICE WHEN 'D' THEN A.PRICE
                                        ELSE A.P_PRICE
                                        END PRICE
                                 FROM (
                                       SELECT A.LECCODE, A.SRHTYPE, A.LEC_TYPE_CHOICE,
                                              B.ORDERNO, B.STATUSCODE, B.USERID, B.PRICE, 0 P_PRICE
                                       FROM (
                                             SELECT LECCODE, 
                                                   CASE #{SEARCHTYPE}
                                                   WHEN 'C' THEN CATEGORY_CD 
                                                   WHEN 'S' THEN SUBJECT_SJT_CD
                                                   WHEN 'L' THEN LEARNING_CD
                                                   WHEN 'T' THEN SUBJECT_TEACHER END SRHTYPE,
                                             LEC_TYPE_CHOICE
                                             FROM TB_LEC_MST
                                             WHERE LEC_TYPE_CHOICE = 'D'
                                            ) A,
                                            (
                                             SELECT A.USERID, B.ORDERNO, B.MGNTNO, NVL(DECODE(B.GIFT_YN, 'Y', 0, B.PRICE), 0) PRICE, B.STATUSCODE
                                             FROM (
                                                   SELECT A.ORDERNO, A.PACKAGE_NO, A.USERID
                                                   FROM TB_MYLECTURE A LEFT JOIN TB_MA_MEMBER B
                                                   ON A.USERID = B.USER_ID
                                                  ) A, TB_ORDER_MGNT_NO B, TB_APPROVALS C
                                             WHERE A.ORDERNO = B.ORDERNO
                                             AND A.PACKAGE_NO = B.MGNTNO
                                             AND A.ORDERNO = C.ORDERNO
                                             AND TO_CHAR(B.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                             AND NVL(DECODE(B.GIFT_YN, 'Y', 0, B.PRICE), 0) <> 0
                                             AND B.ISCANCEL = 2
                                            ) B
                                       WHERE A.LECCODE = B.MGNTNO
                                 UNION
                                 SELECT EE.LECCODE, 
                                       CASE #{SEARCHTYPE}
                                       WHEN 'C' THEN EE.CATEGORY_CD 
                                       WHEN 'S' THEN EE.SUBJECT_SJT_CD
                                       WHEN 'L' THEN EE.LEARNING_CD
                                       WHEN 'T' THEN EE.SUBJECT_TEACHER END SRHTYPE,
                                        BB.PTYPE LEC_TYPE_CHOICE,
                                        AA.ORDERNO, BB.STATUSCODE, AA.USERID,
                                        NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE,
                                        PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.PACKAGE_NO, AA.LECTURE_NO, BB.STATUSCODE) P_PRICE 
                                 FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, TB_LEC_MST EE
                                 WHERE AA.ORDERNO = BB.ORDERNO
                                 AND AA.ORDERNO = CC.ORDERNO
                                 AND AA.PACKAGE_NO = BB.MGNTNO
                                 AND BB.ISCANCEL = 2
                                 AND AA.USERID = DD.USER_ID
                                 AND AA.LECTURE_NO = EE.LECCODE
                                 AND AA.LECTURE_NO <> BB.MGNTNO
                                 AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                ) A
                             ) A
                             GROUP BY SRHTYPE
                         ) A
                   ) T2
              ON T1.SRHTYPE = T2.SRHTYPE
             )
        WHERE TOTAL_PRICE > 0
        ORDER BY TOTAL_PRICE DESC
	]]>
	</select>

	<select id="onCategorySalesList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
        SELECT T.SRHTYPE, 
               SUM(T.USER_COUNT) USER_COUNT, SUM(T.TOTAL_PRICE) TOTAL_PRICE, 
               SUM(T.REFUND_USER_COUNT) REFUND_USER_COUNT, SUM(T.REFUND_TOTAL_PRICE) REFUND_TOTAL_PRICE,
                   (SELECT NAME FROM TB_CATEGORY_INFO WHERE CODE = SRHTYPE) SRHNAME
        FROM (
                SELECT L.CATEGORY_CD SRHTYPE, COUNT(M.ORDERNO) USER_COUNT, SUM(M.PRICE) TOTAL_PRICE, 0 REFUND_USER_COUNT, 0 REFUND_TOTAL_PRICE
                FROM TB_ORDER_MGNT_NO M, TB_LEC_MST L
                WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                AND M.STATUSCODE = 'DLV105'
                AND M.PTYPE IN ('D', 'P', 'N', 'J')
                AND M.MGNTNO = L.LECCODE
                AND PRICE > 0
                GROUP BY L.CATEGORY_CD
                UNION ALL
                SELECT L.CATEGORY_CD SRHTYPE, 0 USER_COUNT, 0 TOTAL_PRICE, COUNT(M.ORDERNO) REFUND_USER_COUNT, SUM(M.PRICE) REFUND_TOTAL_PRICE
                FROM TB_ORDER_MGNT_NO M, TB_LEC_MST L
                WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                AND M.STATUSCODE = 'DLV230'
                AND M.PTYPE IN ('D', 'P', 'N', 'J')
                AND M.MGNTNO = L.LECCODE
                AND PRICE < 0
                GROUP BY L.CATEGORY_CD
              ) T
        GROUP BY SRHTYPE
        ORDER BY SRHTYPE
    ]]>
    </select>
	
	<select id="onSubjectSalesList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
         SELECT T.SRHTYPE, 
               SUM(T.USER_COUNT) USER_COUNT, SUM(T.TOTAL_PRICE) TOTAL_PRICE, 
               SUM(T.REFUND_USER_COUNT) REFUND_USER_COUNT, SUM(T.REFUND_TOTAL_PRICE) REFUND_TOTAL_PRICE,
              (SELECT SUBJECT_NM FROM TB_SUBJECT_INFO WHERE SUBJECT_CD = T.SRHTYPE) SRHNAME
         FROM (
               SELECT L.SUBJECT_SJT_CD SRHTYPE, 
                      COUNT(M.ORDERNO) USER_COUNT,
                      SUM(DECODE(M.PTYPE, 'D', M.PRICE, PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(M.ORDERNO, R.PACKAGE_NO, R.LECTURE_NO, M.STATUSCODE))) TOTAL_PRICE,
                      0 REFUND_USER_COUNT, 0 REFUND_TOTAL_PRICE
               FROM TB_ORDER_MGNT_NO M, TB_MYLECTURE R, TB_LEC_MST L
               WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
               AND M.STATUSCODE = 'DLV105'
               AND M.PTYPE IN ('D', 'P', 'N', 'J')
               AND M.ORDERNO = R.ORDERNO
               AND M.MGNTNO = R.PACKAGE_NO
               AND R.LECTURE_NO = L.LECCODE
               AND PRICE > 0
               GROUP BY L.SUBJECT_SJT_CD
               UNION ALL
               SELECT L.SUBJECT_SJT_CD SRHTYPE, 
                      0 USER_COUNT, 0 TOTAL_PRICE, 
                      COUNT(M.ORDERNO) REFUND_USER_COUNT,
                      SUM(DECODE(M.PTYPE, 'D', M.PRICE, PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(M.ORDERNO, R.PACKAGE_NO, R.LECTURE_NO, M.STATUSCODE))) REFUND_TOTAL_PRICE
               FROM TB_ORDER_MGNT_NO M, TB_MYLECTURE R, TB_LEC_MST L
               WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
               AND M.STATUSCODE = 'DLV230'
               AND M.PTYPE IN ('D', 'P', 'N', 'J')
               AND M.ORDERNO = R.ORDERNO
               AND M.MGNTNO = R.PACKAGE_NO
               AND R.LECTURE_NO = L.LECCODE
               AND PRICE < 0
               GROUP BY L.SUBJECT_SJT_CD
              ) T
         GROUP BY T.SRHTYPE
         ORDER BY T.SRHTYPE
	]]>
	</select>
	
	<select id="onLearningSalesList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
         SELECT T.SRHTYPE, 
               SUM(T.USER_COUNT) USER_COUNT, SUM(T.TOTAL_PRICE) TOTAL_PRICE, 
               SUM(T.REFUND_USER_COUNT) REFUND_USER_COUNT, SUM(T.REFUND_TOTAL_PRICE) REFUND_TOTAL_PRICE,
              (SELECT NAME FROM TB_LEARNING_FORM_INFO WHERE CODE = T.SRHTYPE) SRHNAME
         FROM (
               SELECT L.LEARNING_CD SRHTYPE, 
                      COUNT(M.ORDERNO) USER_COUNT,
                      SUM(DECODE(M.PTYPE, 'D', M.PRICE, PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(M.ORDERNO, R.PACKAGE_NO, R.LECTURE_NO, M.STATUSCODE))) TOTAL_PRICE,
                      0 REFUND_USER_COUNT, 0 REFUND_TOTAL_PRICE
               FROM TB_ORDER_MGNT_NO M, TB_MYLECTURE R, TB_LEC_MST L
               WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
               AND M.STATUSCODE = 'DLV105'
               AND M.PTYPE IN ('D', 'P', 'N', 'J')
               AND M.ORDERNO = R.ORDERNO
               AND M.MGNTNO = R.PACKAGE_NO
               AND R.LECTURE_NO = L.LECCODE
               AND PRICE > 0
               GROUP BY L.LEARNING_CD
               UNION ALL
               SELECT L.LEARNING_CD SRHTYPE, 
                      0 USER_COUNT, 0 TOTAL_PRICE, 
                      COUNT(M.ORDERNO) REFUND_USER_COUNT,
                      SUM(DECODE(M.PTYPE, 'D', M.PRICE, PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(M.ORDERNO, R.PACKAGE_NO, R.LECTURE_NO, M.STATUSCODE))) REFUND_TOTAL_PRICE
               FROM TB_ORDER_MGNT_NO M, TB_MYLECTURE R, TB_LEC_MST L
               WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
               AND M.STATUSCODE = 'DLV230'
               AND M.PTYPE IN ('D', 'P', 'N', 'J')
               AND M.ORDERNO = R.ORDERNO
               AND M.MGNTNO = R.PACKAGE_NO
               AND R.LECTURE_NO = L.LECCODE
               AND PRICE < 0
               GROUP BY L.LEARNING_CD
              ) T
         GROUP BY T.SRHTYPE
         ORDER BY T.SRHTYPE
    ]]>
	</select>

	<select id="onTeacherSalesList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
         SELECT T.SRHTYPE, 
               SUM(T.USER_COUNT) USER_COUNT, SUM(T.TOTAL_PRICE) TOTAL_PRICE, 
               SUM(T.REFUND_USER_COUNT) REFUND_USER_COUNT, SUM(T.REFUND_TOTAL_PRICE) REFUND_TOTAL_PRICE,
              (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = T.SRHTYPE) SRHNAME
         FROM (
               SELECT L.SUBJECT_TEACHER SRHTYPE, 
                      COUNT(M.ORDERNO) USER_COUNT,
                      SUM(DECODE(M.PTYPE, 'D', M.PRICE, PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(M.ORDERNO, R.PACKAGE_NO, R.LECTURE_NO, M.STATUSCODE))) TOTAL_PRICE,
                      0 REFUND_USER_COUNT, 0 REFUND_TOTAL_PRICE
               FROM TB_ORDER_MGNT_NO M, TB_MYLECTURE R, TB_LEC_MST L
               WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
               AND M.STATUSCODE = 'DLV105'
               AND M.PTYPE IN ('D', 'P', 'N', 'J')
               AND M.ORDERNO = R.ORDERNO
               AND M.MGNTNO = R.PACKAGE_NO
               AND R.LECTURE_NO = L.LECCODE
               AND PRICE > 0
               GROUP BY L.SUBJECT_TEACHER
               UNION ALL
               SELECT L.SUBJECT_TEACHER SRHTYPE, 
                      0 USER_COUNT, 0 TOTAL_PRICE, 
                      COUNT(M.ORDERNO) REFUND_USER_COUNT,
                      SUM(DECODE(M.PTYPE, 'D', M.PRICE, PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(M.ORDERNO, R.PACKAGE_NO, R.LECTURE_NO, M.STATUSCODE))) REFUND_TOTAL_PRICE
               FROM TB_ORDER_MGNT_NO M, TB_MYLECTURE R, TB_LEC_MST L
               WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
               AND M.STATUSCODE = 'DLV230'
               AND M.PTYPE IN ('D', 'P', 'N', 'J')
               AND M.ORDERNO = R.ORDERNO
               AND M.MGNTNO = R.PACKAGE_NO
               AND R.LECTURE_NO = L.LECCODE
               AND PRICE < 0
               GROUP BY L.SUBJECT_TEACHER
              ) T
         GROUP BY T.SRHTYPE
         ORDER BY (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = T.SRHTYPE)
	]]>
	</select>

	<select id="onCategorySalesListSum" parameterType="hashMap" resultType="hashMap">
		SELECT '동영상' CATEGORY_NAME, SUM(M.PRICE) PRICE
		FROM TB_APPROVALS A, TB_ORDERS O, TB_ORDER_MGNT_NO M, TB_LEC_MST L
		WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		AND A.ORDERNO = O.ORDERNO
		AND O.ORDERNO = M.ORDERNO
		AND M.STATUSCODE = 'DLV105'
		AND M.PTYPE IN ('D', 'P', 'N', 'J')
		AND M.MGNTNO = L.LECCODE
		UNION ALL                
		SELECT '도서' CATEGORY_NAME, SUM(M.PRICE) PRICE
		FROM TB_APPROVALS A, TB_ORDERS O, TB_ORDER_MGNT_NO M, TB_CA_BOOK L
		WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		AND A.ORDERNO = O.ORDERNO
		AND O.ORDERNO = M.ORDERNO
		AND M.STATUSCODE IN ('DLV105','DLV120','DLV125','DLV130')
		AND M.PTYPE IN ('L')
		AND M.MGNTNO = L.RSC_ID
		UNION ALL                
		SELECT '포인트' CATEGORY_NAME, SUM(A.POINT) PRICE
		FROM TB_APPROVALS A, TB_ORDERS O, TB_ORDER_MGNT_NO M, TB_CA_BOOK L
		WHERE TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		AND A.ORDERNO = O.ORDERNO
		AND O.ORDERNO = M.ORDERNO
		AND M.STATUSCODE IN ('DLV105','DLV120','DLV125','DLV130')
		AND M.PTYPE IN ('D', 'P', 'N', 'J', 'L')
		AND M.MGNTNO = L.RSC_ID
	</select>

	<select id="offCategorySalesList" parameterType="hashMap" resultType="hashMap">
		SELECT 	A.CODE           	AS CATEGORY_CODE,
		       		A.NAME           	AS CATEGORY_NAME,
		       		NVL(B.COUNT,0)  AS COUNT,
		       		NVL(B.PRICE,0)	AS PRICE
		       		, NVL(C.COUNT,0)  AS COUNT1,
		       		NVL(C.PRICE,0)	AS PRICE1
		FROM   	TB_CATEGORY_INFO A,
		       		(
		        		SELECT 	C.CATEGORY_CD            	AS CATEGORY_CD,
		              				COUNT(C.CATEGORY_CD)  AS COUNT,
		              				SUM(A.PRICE)   AS PRICE
		        		FROM		(
		                				SELECT 	A.ORDERNO, A.MGNTNO, A.PRICE
		                				FROM   	TB_OFF_ORDER_MGNT_NO A,
		                      						(
		                        						SELECT	ORDERNO, MGNTNO
		                        						FROM   	TB_OFF_ORDER_MGNT_NO
		                        						GROUP BY 	ORDERNO, MGNTNO
		                        						HAVING COUNT(*) = 1
		                       						) B
		                				WHERE	A.ORDERNO = B.ORDERNO
		                				AND    	A.MGNTNO  = B.MGNTNO
		                				AND    	A.PRICE <![CDATA[ > ]]> 0
		                				AND    	A.STATUSCODE = 'DLV105'
		               				) A,
		              				TB_OFF_APPROVALS B,
		              				TB_OFF_LEC_MST C,
		              				(SELECT B.PACKAGE_NO, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE
		              				 FROM 	TB_OFF_LECTURE_DATE A,  TB_OFF_MYLECTURE B
		              				 WHERE A.LECCODE = B.LECTURE_NO AND  B.PACKAGE_NO like ('D%')
		              				 GROUP BY B.PACKAGE_NO
		              				 HAVING	MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) BETWEEN 	#{searchStartDate} AND #{searchEndDate}
		              				 ) D
		        		WHERE  	A.ORDERNO = B.ORDERNO
		        		AND    	A.MGNTNO  = C.LECCODE
		        		AND		C.LECCODE = D.PACKAGE_NO
		        		GROUP BY 	C.CATEGORY_CD
		       		) B
		       		,
		       		(

                (  SELECT 	C.CATEGORY_CD            	AS CATEGORY_CD,
		              				COUNT(C.CATEGORY_CD)  AS COUNT,
		              				SUM(A.PRICE)   AS PRICE

		        		FROM		(
		                				SELECT 	A.ORDERNO, A.MGNTNO, A.PRICE
		                				FROM   	TB_OFF_ORDER_MGNT_NO A,
		                      						(
		                        						SELECT	ORDERNO, MGNTNO
		                        						FROM   	TB_OFF_ORDER_MGNT_NO
		                        						GROUP BY 	ORDERNO, MGNTNO
		                        						HAVING COUNT(*) = 1
		                       						) B
		                				WHERE	A.ORDERNO = B.ORDERNO
		                				AND    	A.MGNTNO  = B.MGNTNO
		                				AND    	A.PRICE <![CDATA[ > ]]> 0
		                				AND    	A.STATUSCODE = 'DLV105'

		               				) A,
		              				TB_OFF_APPROVALS B,
		              				TB_OFF_LEC_MST C,
		              				(SELECT B.PACKAGE_NO, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE
		              				 FROM 	TB_OFF_LECTURE_DATE A,  TB_OFF_MYLECTURE B
                                     WHERE A.LECCODE = B.LECTURE_NO 
                                     AND SUBSTR(B.PACKAGE_NO, 0, 1) IN ('N', 'J', 'P')
		              				 GROUP BY B.PACKAGE_NO
		              			 HAVING	MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) BETWEEN 	#{searchStartDate} AND #{searchEndDate}
		              				 ) D

		        		WHERE  	A.ORDERNO = B.ORDERNO
		        		AND    	A.MGNTNO  = C.LECCODE
		        		AND		C.LECCODE = D.PACKAGE_NO
              	GROUP BY 	C.CATEGORY_CD
                )
             	) C
		WHERE   A.CODE = B.CATEGORY_CD(+)
		AND    A.CODE = C.CATEGORY_CD(+)
		AND		A.ISUSE = 'Y'
		AND		A.USE_OFF = 'Y'
        AND    A.P_CODE = 'CLASSCODE'
		ORDER BY A.CODE
	</select>

	<select id="offCategorySalesListSum" parameterType="hashMap" resultType="hashMap">
		SELECT	CATEGORY_CODE,
					CATEGORY_NAME,
					SUM(PRICE)				AS PRICE
		FROM		(
				        SELECT  'SUM_1'             		CATEGORY_CODE,
					                '학원'	 		      		CATEGORY_NAME,
					                NVL(SUM(PRICE),0)  	PRICE
				        FROM		(
							       		SELECT 	SUM(A.PRICE)   AS PRICE
							       		FROM		(
							               				SELECT 	A.ORDERNO, A.MGNTNO, A.PRICE
							               				FROM   	TB_OFF_ORDER_MGNT_NO A,
							                   						(
							                     						SELECT	ORDERNO, MGNTNO
							                     						FROM   	TB_OFF_ORDER_MGNT_NO
							                     						GROUP BY 	ORDERNO, MGNTNO
							                     						HAVING COUNT(*) = 1
							                    					) B
							               				WHERE	A.ORDERNO = B.ORDERNO
							               				AND    	A.MGNTNO  = B.MGNTNO
							               				AND    	A.PRICE <![CDATA[ > ]]> 0
							               				AND    	A.STATUSCODE = 'DLV105'
							              			) A,
							             			TB_OFF_APPROVALS B,
							             			TB_OFF_LEC_MST C,
							             			(SELECT B.PACKAGE_NO, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE
		              				 FROM 	TB_OFF_LECTURE_DATE A,  TB_OFF_MYLECTURE B
		              				 WHERE A.LECCODE = B.LECTURE_NO
		              				 GROUP BY B.PACKAGE_NO
		              				 HAVING	MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) BETWEEN 	#{searchStartDate} AND #{searchEndDate}
		              				 ) D
							       		WHERE  	A.ORDERNO = B.ORDERNO
							       		AND    	A.MGNTNO  = C.LECCODE
							       		AND		C.LECCODE = D.PACKAGE_NO
				        			)
						UNION
				        SELECT  'SUM_2'  				CATEGORY_CODE,
					                '도서'						CATEGORY_NAME,
					                NVL(SUM(PRICE),0) 	PRICE
				        FROM		(
						                SELECT  B.DISCOUNT_PRICE PRICE
						                FROM    	(
														SELECT 	A.MGNTNO
							               				FROM   	TB_OFF_ORDER_MGNT_NO A,
							                   						(
							                     						SELECT	ORDERNO, MGNTNO
							                     						FROM   	TB_OFF_ORDER_MGNT_NO
							                     						GROUP BY 	ORDERNO, MGNTNO
							                     						HAVING COUNT(*) = 1
							                    					) B
							               				WHERE	A.ORDERNO = B.ORDERNO
							               				AND    	A.MGNTNO  = B.MGNTNO
							               				AND    	A.STATUSCODE IN ('DLV105','DLV120','DLV130')
						                			) A,
						                        	TB_CA_BOOK B,
						                        	(SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE
						              				 FROM 	TB_OFF_LECTURE_DATE
						              				 GROUP BY LECCODE
						              				 HAVING	MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) BETWEEN 	#{searchStartDate} AND #{searchEndDate}
						              				 ) C
						                WHERE   A.MGNTNO = B.RSC_ID
						                AND		A.MGNTNO = C.LECCODE
				        			)
					)
		GROUP BY  GROUPING SETS((CATEGORY_CODE, CATEGORY_NAME),())
	</select>
	
	<select id="onTeacherPayList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
        SELECT *
        FROM   (
                    SELECT     T1.SUBJECT_TEACHER    TEACHER_ID,
                                   (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = T1.SUBJECT_TEACHER) TEACHER_NAME,
                                   T1.TOTAL_PRICE,
                                   NVL(T1.TEACHER_PAY,0) + NVL(T2.TEACHER_PAY,0) REAL_MONEY,
                                   NVL(T2.TEACHER_PAY,0) REFUND_PAY,
                                   T1.USER_COUNT
                    FROM   (
                                SELECT  SUBJECT_TEACHER,
                                            TOTAL_PRICE,
                                            TEACHER_PAY - (TEACHER_PAY_TEMP1+TEACHER_PAY_TEMP2) TEACHER_PAY,
                                            USER_COUNT
                                FROM    (
                                            SELECT  A.SUBJECT_TEACHER,
                                                        SUM(PRICE) TOTAL_PRICE,
                                                         SUM(NVL(ROUND((CASE A.PAYCODE 
                                                                       WHEN 'PAY110' THEN A.PRICE - (A.PRICE * 0.036)
                                                                       WHEN 'PAY120' THEN A.PRICE - 275
                                                                       WHEN 'PAY130' THEN A.PRICE - (A.PRICE * 0.0143)
                                                                       WHEN 'PAY140' THEN A.PRICE
                                                                       WHEN 'PAY100' THEN A.PRICE
                                                        END) * (A.PAYMENT / 100),0),0)) TEACHER_PAY,
                                                 SUM(NVL(ROUND((CASE A.PAYCODE 
                                                 WHEN 'PAY110' THEN A.PRICE - (A.PRICE * 0.036)
                                                 WHEN 'PAY120' THEN A.PRICE - 275
                                                 WHEN 'PAY130' THEN A.PRICE - (A.PRICE * 0.0143)
                                                 WHEN 'PAY140' THEN A.PRICE
                                                 WHEN 'PAY100' THEN A.PRICE
                                                END) * (A.PAYMENT / 100) * 0.03,0),0)) TEACHER_PAY_TEMP1,
                                                SUM(NVL(ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.PRICE - (A.PRICE * 0.036)
                                                                WHEN 'PAY120' THEN A.PRICE - 275
                                                                WHEN 'PAY130' THEN A.PRICE - (A.PRICE * 0.0143)
                                                                WHEN 'PAY100' THEN A.PRICE
                                                                WHEN 'PAY140' THEN A.PRICE
                                                END) * (A.PAYMENT / 100) * 0.03 * 0.1,0),0)) TEACHER_PAY_TEMP2,
                                                   
                                                        COUNT(A.USERID) USER_COUNT
                                            FROM   (
                                                        SELECT  A.SUBJECT_TEACHER,
                                                                    A.USERID,
                                                                    CASE A.LEC_TYPE_CHOICE WHEN 'D' THEN A.PRICE
                                                                       ELSE        A.P_PRICE
                                                                    END PRICE,
                                                                    A.PAYMENT,
                                                                    A.PAYCODE
                                                        FROM    (
                                                                        SELECT     A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                                                                       B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.REG_DT, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
                                                                                       A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
                                                                        FROM       (
                                                                                        SELECT     LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT
                                                                                        FROM       TB_LEC_MST
                                                                                        WHERE      LEC_TYPE_CHOICE = 'D'
                                                                                       ) A,
                                                                                       (
                                                                                        SELECT     A.REG_DT, A.USERID, A.USER_NM, A.START_DATE, A.END_DATE,
                                                                                                       B.ORDERNO, B.MGNTNO, NVL (DECODE (B.GIFT_YN, 'Y', 0, B.PRICE), 0) AS PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                                                                        FROM       (
                                                                                                        SELECT     A.ORDERNO, A.PACKAGE_NO, A.REG_DT, A.USERID, A.START_DATE, A.END_DATE, B.USER_NM
                                                                                                        FROM       TB_ORDER_MGNT_NO  M, TB_MYLECTURE A LEFT JOIN TB_MA_MEMBER B
                                                                                                        ON         A.USERID = B.USER_ID
                                                                                                        WHERE      TO_CHAR(M.ISCONFIRM,'YYYYMMDD')  BETWEEN #{searchStartDate} AND #{searchEndDate}
                                                                                                        AND A.ORDERNO = M.ORDERNO
                                                                                                        AND A.PACKAGE_NO = M.MGNTNO
                                                                                                        AND M.STATUSCODE = 'DLV105'
                                                                                                        AND NVL (DECODE (M.GIFT_YN, 'Y', 0, M.PRICE), 0) > 0
                                                                                                        AND M.PTYPE <> 'L'
                                                                                                       ) A, TB_ORDER_MGNT_NO B, TB_APPROVALS C
                                                                                        WHERE  A.ORDERNO     = B.ORDERNO
                                                                                        AND    A.PACKAGE_NO  = B.MGNTNO
                                                                                        AND    A.ORDERNO     = C.ORDERNO
                                                                                        AND    NVL (DECODE (B.GIFT_YN, 'Y', 0, B.PRICE), 0) > 0
                                                                                        AND    B.STATUSCODE = 'DLV105'
                                                                                       ) B
                                                                        WHERE  A.LECCODE = B.MGNTNO
                                                                        UNION
                                                                        SELECT EE.LECCODE, EE.SUBJECT_TEACHER, EE.SUBJECT_TITLE, BB.PTYPE LEC_TYPE_CHOICE,
                                                                               AA.ORDERNO, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, BB.REG_DT, AA.USERID, DD.USER_NM, AA.START_DATE, AA.END_DATE,
                                                                               EE.SUBJECT_TEACHER_PAYMENT PAYMENT, CC.PAYCODE, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE,
                                                                               PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.PACKAGE_NO, AA.LECTURE_NO, BB.STATUSCODE) P_PRICE 
                                                                        FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, TB_LEC_MST EE
                                                                        WHERE AA.ORDERNO = BB.ORDERNO
                                                                        AND AA.ORDERNO = CC.ORDERNO
                                                                        AND AA.PACKAGE_NO = BB.MGNTNO
                                                                        AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) > 0
                                                                        AND BB.STATUSCODE = 'DLV105'
                                                                        AND AA.USERID = DD.USER_ID
                                                                        AND AA.LECTURE_NO = EE.LECCODE
                                                                        AND AA.LECTURE_NO <> BB.MGNTNO
                            											AND BB.PTYPE <> 'Y'
                                                                        AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                                                    ) A
                                                           ) A
                                            GROUP BY SUBJECT_TEACHER
                                        ) A
                            ) T1
                    LEFT JOIN
                               (
                                   SELECT  SUBJECT_TEACHER,
                                             TEACHER_PAY - (TEACHER_PAY_TEMP1+TEACHER_PAY_TEMP2) TEACHER_PAY
                                FROM    (
                                                SELECT  A.SUBJECT_TEACHER,
                                                            SUM(PRICE) TOTAL_PRICE,
                                                            SUM(ROUND(A.PRICE * (A.PAYMENT / 100),0)) TEACHER_PAY,
                                                            SUM(NVL(ROUND(A.PRICE * (A.PAYMENT / 100) * 0.03,0),0)) TEACHER_PAY_TEMP1,
                                                            SUM(NVL(ROUND(A.PRICE * (A.PAYMENT / 100) * 0.03 * 0.1,0),0)) TEACHER_PAY_TEMP2,
                                                            COUNT(A.USERID) USER_COUNT
                                                FROM   (
                                                            SELECT  A.SUBJECT_TEACHER,
                                                                        A.USERID,
                                                                        CASE A.LEC_TYPE_CHOICE WHEN 'D' THEN A.PRICE
                                                                           ELSE        A.P_PRICE
                                                                        END PRICE,
                                                                        A.PAYMENT,
                                                                        A.PAYCODE
                                                            FROM    (
                                                                            SELECT     A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                                                                           B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.CONFIRMDATE, B.USERID,B.USER_NM, B.START_DATE, B.END_DATE,
                                                                                           A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
                                                                            FROM       (
                                                                                            SELECT     LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT
                                                                                            FROM       TB_LEC_MST
                                                                                            WHERE      LEC_TYPE_CHOICE = 'D'
                                                                                        ) A,
                                                                                           (
                                                                                            SELECT     A.USERID, A.USER_NM, A.START_DATE, A.END_DATE,
                                                                                                           B.CONFIRMDATE, B.ORDERNO, B.MGNTNO, NVL(DECODE(B.GIFT_YN, 'Y', 0, B.PRICE), 0) PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                                                                            FROM       (
                                                                                                            SELECT     A.ORDERNO, A.PACKAGE_NO, A.REG_DT, A.USERID, A.START_DATE, A.END_DATE, B.USER_NM
                                                                                                            FROM       TB_MYLECTURE A LEFT JOIN TB_MA_MEMBER B
                                                                                                            ON         A.USERID = B.USER_ID
                                                                                                           ) A, TB_ORDER_MGNT_NO B, TB_APPROVALS C
                                                                                            WHERE  A.ORDERNO     = B.ORDERNO
                                                                                            AND    A.PACKAGE_NO  = B.MGNTNO
                                                                                            AND    A.ORDERNO     = C.ORDERNO
                                                                                            AND    TO_CHAR(B.ISCONFIRM,'YYYYMMDD')     BETWEEN #{searchStartDate} AND #{searchEndDate}
                                                                                            AND    NVL(DECODE(B.GIFT_YN, 'Y', 0, B.PRICE), 0) <> 0
                                                                                            AND    B.ISCANCEL = 2
                                                                                           ) B
                                                                            WHERE  A.LECCODE = B.MGNTNO
                                                                            UNION
                                                                            SELECT EE.LECCODE, EE.SUBJECT_TEACHER, EE.SUBJECT_TITLE, BB.PTYPE LEC_TYPE_CHOICE,
                                                                                   AA.ORDERNO, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, BB.REG_DT, AA.USERID, DD.USER_NM, AA.START_DATE, AA.END_DATE,
                                                                                   EE.SUBJECT_TEACHER_PAYMENT PAYMENT, CC.PAYCODE, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE,
                                                                                   PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.PACKAGE_NO, AA.LECTURE_NO, BB.STATUSCODE) P_PRICE 
                                                                            FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, TB_LEC_MST EE
                                                                            WHERE AA.ORDERNO = BB.ORDERNO
                                                                            AND AA.ORDERNO = CC.ORDERNO
                                                                            AND AA.PACKAGE_NO = BB.MGNTNO
                                                                            AND BB.ISCANCEL = 2
                                                                            AND AA.USERID = DD.USER_ID
                                                                            AND AA.LECTURE_NO = EE.LECCODE
                                                                            AND AA.LECTURE_NO <> BB.MGNTNO
                                                                            AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                                                        ) A
                                                               ) A
                                                GROUP BY SUBJECT_TEACHER
                                            ) A
                            ) T2
                    ON T1.SUBJECT_TEACHER = T2.SUBJECT_TEACHER
                )
        WHERE TEACHER_NAME LIKE '%' || #{searchTeacherName} || '%'
        ORDER BY TOTAL_PRICE DESC
	]]>
	</select>
		
	<select id="onTeacherPayDetail" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT  A.USERID,
	                A.USER_NM,
	                DECODE(A.LEC_TYPE_CHOICE,'D','단과반','J','종합반','N','선택형종합반', '패키지') LEC_TYPE_CHOICE,
	                A.SUBJECT_TITLE,
	                TO_CHAR(A.ISCONFIRM,'YYYY-MM-DD') ISCONFIRM,
	                TO_CHAR(A.REG_DT,'YYYY-MM-DD') REG_DT,
	                TO_CHAR(A.START_DATE,'YYYY-MM-DD') START_DATE,
	                TO_CHAR(A.END_DATE,'YYYY-MM-DD') END_DATE,
	                NVL(A.TOTAL_PAY,0) TOTAL_PAY,
	                NVL(A.PAYMENT,0) PAYMENT,
	                DECODE(A.PAYCODE,'PAY110','신용카드','PAY120','가상계좌','PAY130','계좌이체','PAY100','무통장입금') PAYCODE,
	                NVL(ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.036)
	                                WHEN 'PAY120' THEN A.TOTAL_PAY - 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.0143)
	                                WHEN 'PAY100' THEN A.TOTAL_PAY
	                END) * (A.PAYMENT / 100),0),0) TEACHER_PAY,
	                NVL((CASE A.PAYCODE WHEN 'PAY110' THEN 3.04
	                                WHEN 'PAY120' THEN 275
	                                WHEN 'PAY130' THEN 1.43
	                                WHEN 'PAY100' THEN 0
	                END),0) SUSU,
	                NVL(ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY * 0.036
	                                WHEN 'PAY120' THEN 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY * 0.0143
	                                WHEN 'PAY100' THEN 0
	                END),0),0) SUSU_PAY,
	                NVL(ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.036)
	                                WHEN 'PAY120' THEN A.TOTAL_PAY - 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.0143)
	                                WHEN 'PAY100' THEN A.TOTAL_PAY
	                END) * (A.PAYMENT / 100) * 0.03,0),0) TEACHER_PAY_TEMP1,
	                NVL(ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.036)
	                                WHEN 'PAY120' THEN A.TOTAL_PAY - 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.0143)
	                                WHEN 'PAY100' THEN A.TOTAL_PAY
	                END) * (A.PAYMENT / 100) * 0.03 * 0.1,0),0) TEACHER_PAY_TEMP2,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY END,0),0) PAY110_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN A.TOTAL_PAY END,0),0) PAY120_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY END,0),0) PAY130_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN A.TOTAL_PAY END,0),0) PAY100_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY * 0.036 END,0),0) PAY110_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN 275 END,0),0) PAY120_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY * 0.0143 END,0),0) PAY130_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN 0 END,0),0) PAY100_SUSU,
	                NVL(A.DISCOUNTPER,0) DISCOUNTPER
        FROM    (
                    SELECT  A.*,
	                            CASE A.LEC_TYPE_CHOICE WHEN 'D' THEN A.PRICE
	                                           ELSE        A.P_PRICE
	                            END TOTAL_PAY
                    FROM    (
                            SELECT A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
	                                   B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.ISCONFIRM, B.REG_DT, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
	                                   A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
                            FROM   (
                                    SELECT LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT
                                    FROM   TB_LEC_MST
                                    WHERE  LEC_TYPE_CHOICE = 'D'
                                    AND    SUBJECT_TEACHER = #{searchTeacher}
                                   ) A,
                                   (
                                    SELECT B.ISCONFIRM, A.REG_DT, A.USERID, A.USER_NM, A.START_DATE, A.END_DATE,
                                           B.ORDERNO, B.MGNTNO, NVL (DECODE (B.GIFT_YN, 'Y', 0, B.PRICE), 0) AS PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                    FROM   (
                                            SELECT A.ORDERNO, A.PACKAGE_NO, M.ISCONFIRM, A.REG_DT, A.USERID, A.START_DATE, A.END_DATE,
                                                   B.USER_NM, M.GIFT_YN
                                            FROM   TB_ORDER_MGNT_NO M, TB_MYLECTURE A LEFT JOIN TB_MA_MEMBER B
                                            ON     A.USERID = B.USER_ID
                                            WHERE  TO_CHAR(M.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                            AND A.ORDERNO = M.ORDERNO
                                            AND A.PACKAGE_NO = M.MGNTNO
                                            AND M.STATUSCODE = 'DLV105'
                                           ) A, TB_ORDER_MGNT_NO B, TB_APPROVALS C
                                    WHERE  A.ORDERNO     = B.ORDERNO
                                    AND    A.PACKAGE_NO  = B.MGNTNO
                                    AND    A.ORDERNO     = C.ORDERNO
                                    AND    NVL (DECODE (B.GIFT_YN, 'Y', 0, B.PRICE), 0) > 0
                                    AND    B.STATUSCODE = 'DLV105'
                                   ) B
                            WHERE  A.LECCODE = B.MGNTNO
                            UNION
                            SELECT EE.LECCODE, EE.SUBJECT_TEACHER, EE.SUBJECT_TITLE, BB.PTYPE LEC_TYPE_CHOICE,
                                   AA.ORDERNO, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, BB.ISCONFIRM, BB.REG_DT, AA.USERID, DD.USER_NM, AA.START_DATE, AA.END_DATE,
                                   EE.SUBJECT_TEACHER_PAYMENT PAYMENT, CC.PAYCODE, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE,
                                   PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.PACKAGE_NO, AA.LECTURE_NO, BB.STATUSCODE) P_PRICE 
                            FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, TB_LEC_MST EE
                            WHERE AA.ORDERNO = BB.ORDERNO
                            AND AA.ORDERNO = CC.ORDERNO
                            AND AA.PACKAGE_NO = BB.MGNTNO
                            AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) > 0
                            AND BB.STATUSCODE = 'DLV105'
                            AND EE.SUBJECT_TEACHER = #{searchTeacher}
                            AND AA.USERID = DD.USER_ID
                            AND AA.LECTURE_NO = EE.LECCODE
                            AND AA.LECTURE_NO <> BB.MGNTNO
                            AND BB.PTYPE <> 'Y'
                            AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                    ) A
         ) A
	]]>
	</select>
	
	<select id="onTeacherPayReturnDetail" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT  A.USERID,
	                A.USER_NM,
	                DECODE(A.LEC_TYPE_CHOICE,'D','단과반','J','종합반','N','선택형종합반', '패키지') LEC_TYPE_CHOICE,
	                A.SUBJECT_TITLE,
	                TO_CHAR(A.ISCONFIRM,'YYYY-MM-DD') ISCONFIRM,
	                TO_CHAR(A.CONFIRMDATE,'YYYY-MM-DD') REG_DT,
	                TO_CHAR(A.START_DATE,'YYYY-MM-DD') START_DATE,
	                TO_CHAR(A.END_DATE,'YYYY-MM-DD') END_DATE,
	                NVL(A.TOTAL_PAY,0) TOTAL_PAY,
	                NVL(A.PAYMENT,0) PAYMENT,
	                DECODE(A.PAYCODE,'PAY110','신용카드','PAY120','가상계좌','PAY130','계좌이체','무통장입금') PAYCODE,
	                NVL(ROUND(A.TOTAL_PAY * (A.PAYMENT / 100),0),0) TEACHER_PAY,
	                NVL(ROUND(A.TOTAL_PAY * (A.PAYMENT / 100) * 0.03,0),0) TEACHER_PAY_TEMP1,
	                NVL(ROUND(A.TOTAL_PAY * (A.PAYMENT / 100) * 0.03 * 0.1,0),0) TEACHER_PAY_TEMP2,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY END,0),0) PAY110_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN A.TOTAL_PAY END,0),0) PAY120_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY END,0),0) PAY130_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN A.TOTAL_PAY END,0),0) PAY100_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY * 0.036 END,0),0) PAY110_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN 275 END,0),0) PAY120_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY * 0.0143 END,0),0) PAY130_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN 0 END,0),0) PAY100_SUSU,
	                NVL(A.DISCOUNTPER,0) DISCOUNTPER
		FROM    (
		            SELECT  A.*,
		                    CASE A.P_PRICE WHEN 0 THEN A.PRICE
		                                   ELSE        A.P_PRICE
		                    END TOTAL_PAY
		            FROM    (
		                        SELECT A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
		                               B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, 
		                               B.ISCONFIRM, B.CONFIRMDATE, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
		                               A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
		                        FROM   (
		                                SELECT LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT
		                                FROM   TB_LEC_MST
		                                WHERE  LEC_TYPE_CHOICE = 'D'
		                                AND    SUBJECT_TEACHER = #{searchTeacher}
		                               ) A,
		                               (
		                                SELECT A.USERID, A.USER_NM, A.START_DATE, A.END_DATE,
		                                       B.ISCONFIRM, B.CONFIRMDATE, B.ORDERNO, B.MGNTNO, 
		                                       NVL(DECODE(B.GIFT_YN, 'Y', 0, B.PRICE), 0) PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
		                                FROM   (
		                                        SELECT A.ORDERNO, A.PACKAGE_NO, A.REG_DT, A.USERID, A.START_DATE, A.END_DATE, B.USER_NM
		                                        FROM   TB_MYLECTURE A LEFT JOIN TB_MA_MEMBER B
		                                        ON     A.USERID = B.USER_ID
		                                       ) A, TB_ORDER_MGNT_NO B, TB_APPROVALS C
		                                WHERE  A.ORDERNO     = B.ORDERNO
		                                AND    A.PACKAGE_NO  = B.MGNTNO
		                                AND    A.ORDERNO     = C.ORDERNO
		                                AND    TO_CHAR(B.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		                                AND    NVL(DECODE(B.GIFT_YN, 'Y', 0, B.PRICE), 0) <> 0
		                                AND    B.ISCANCEL = 2
		                               ) B
		                        WHERE  A.LECCODE = B.MGNTNO
		                        UNION
                                SELECT EE.LECCODE, EE.SUBJECT_TEACHER, EE.SUBJECT_TITLE, BB.PTYPE LEC_TYPE_CHOICE,
                                       AA.ORDERNO, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, BB.ISCONFIRM, BB.REG_DT, 
                                       AA.USERID, DD.USER_NM, AA.START_DATE, AA.END_DATE,
                                       EE.SUBJECT_TEACHER_PAYMENT PAYMENT, CC.PAYCODE, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE,
                                       PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.PACKAGE_NO, AA.LECTURE_NO, BB.STATUSCODE) P_PRICE 
                                FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, TB_LEC_MST EE
                                WHERE AA.ORDERNO = BB.ORDERNO
                                AND AA.ORDERNO = CC.ORDERNO
                                AND AA.PACKAGE_NO = BB.MGNTNO
                                AND BB.ISCANCEL = 2
                                AND EE.SUBJECT_TEACHER = #{searchTeacher}
                                AND AA.USERID = DD.USER_ID
                                AND AA.LECTURE_NO = EE.LECCODE
                                AND AA.LECTURE_NO <> BB.MGNTNO
	                            AND BB.PTYPE <> 'Y'
                                AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		            ) A
		) A
	]]>
	</select>	
	
	<select id="offTeacherPayList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT *
		FROM   (
					SELECT 	T1.SUBJECT_TEACHER	TEACHER_ID,
					       		(SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = T1.SUBJECT_TEACHER) TEACHER_NAME,
					       		T1.TOTAL_PRICE,
					       		T1.TEACHER_PAY + NVL(T2.TEACHER_PAY,0) REAL_MONEY,
					       		T1.USER_COUNT
					FROM   (
					        	SELECT  SUBJECT_TEACHER,
					                		TOTAL_PRICE,
					                		ROUND(TEACHER_PAY - ((TEACHER_PAY * 0.03) + (TEACHER_PAY * 0.03 * 0.1)),0) TEACHER_PAY,
					                		USER_COUNT
					        	FROM    (
					            		    SELECT  A.SUBJECT_TEACHER,
					                        			SUM(PRICE) TOTAL_PRICE,
					                        			SUM((CASE A.PAYCODE WHEN 'PAY110' THEN A.PRICE - (A.PRICE * 0.036)
					                                    							    WHEN 'PAY120' THEN A.PRICE - 275
					                                        							WHEN 'PAY130' THEN A.PRICE - (A.PRICE * 0.0143)
					                                        							WHEN 'PAY100' THEN A.PRICE
					                                        							WHEN 'PAY140' THEN A.PRICE
					                        					END) * A.PAYMENT / 100) TEACHER_PAY,
					                        			COUNT(A.USERID) USER_COUNT
					                		FROM   (
					                        			SELECT  A.SUBJECT_TEACHER,
					                                				A.USERID,
					                                				CASE A.P_PRICE WHEN 0 THEN A.PRICE
					                                               	ELSE        A.P_PRICE
					                                				END PRICE,
					                                				A.PAYMENT,
					                                				A.PAYCODE
					                        			FROM    (
					                                					SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
					                                       							B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
					                                       							A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
					                                					FROM   	(
					                                        							SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, A.SUBJECT_TEACHER_PAYMENT PAYMENT, B.LEC_DATE
					                                        							FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
					                                        							WHERE  	A.LECCODE = B.LECCODE
					                                        							AND      	A.LEC_TYPE_CHOICE = 'D'
					                                        							AND		B.LEC_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
					                                       							) A,
					                                       							(
					                                        							SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE,
					                                               									B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
					                                        							FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
					                                        							WHERE  A.ORDERNO     = B.ORDERNO
												                                        AND    A.PACKAGE_NO  = B.MGNTNO
												                                        AND    A.ORDERNO     = C.ORDERNO
												                                        AND    B.PRICE > 0
												                                        AND    B.STATUSCODE = 'DLV105'
					                                       							) B
					                                					WHERE  A.LECCODE = B.MGNTNO
					                                					UNION
					                                					SELECT	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
					                                       							B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
					                                       							A.PAYMENT, B.PAYCODE, B.PRICE,
					                                       							ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
					                                					FROM   	(
						                                        						SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
						                                               								(SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
						                                               								(SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT,
						                                               								B.LECCODE JONG_LECCODE,
						                                               								C.LEC_DATE
						                                        						FROM   	TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
						                                        						WHERE  	A.LECCODE = B.MST_LECCODE
						                                        						AND		A.LECCODE = C.LECCODE
						                                        						AND    	A.LEC_TYPE_CHOICE = 'D'
						                                        						AND		C.LEC_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
					                                       							) A,
					                                       							(
					                                        							SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE, A.PACKAGE_NO, A.LECTURE_NO,
					                                               									B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
					                                        							FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
					                                        							WHERE  A.ORDERNO     = B.ORDERNO
					                                        							AND    A.ORDERNO     = C.ORDERNO
					                                        							AND    B.PRICE > 0
					                                        							AND    B.STATUSCODE = 'DLV105'
					                                       							) B
					                                					WHERE  A.LECCODE = B.LECTURE_NO
					                                					AND    A.JONG_LECCODE = B.PACKAGE_NO
					                                				) A
					                       				) A
					                		GROUP BY SUBJECT_TEACHER
					            		) A
					        ) T1
					LEFT JOIN
					       	(
					           	SELECT  SUBJECT_TEACHER,
					            	        ROUND(TEACHER_PAY - ((TEACHER_PAY * 0.03) + (TEACHER_PAY * 0.03 * 0.1)),0) TEACHER_PAY
					            FROM    (
					            		        SELECT  A.SUBJECT_TEACHER,
					                    			        SUM(PRICE) TOTAL_PRICE,
					                            			SUM(A.PRICE * (A.PAYMENT / 100)) TEACHER_PAY,
					                            			COUNT(A.USERID) USER_COUNT
					                    		FROM   (
					                            			SELECT  A.SUBJECT_TEACHER,
					                                    				A.USERID,
					                                    				CASE A.P_PRICE WHEN 0 THEN A.PRICE
					                                                   	ELSE        A.P_PRICE
					                                    				END PRICE,
					                                    				A.PAYMENT,
					                                    				A.PAYCODE
					                            			FROM    (
					                                        				SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
					                                               						B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID,B.USER_NM, B.START_DATE, B.END_DATE,
					                                               						A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
					                                        				FROM   	(
					                                                						SELECT 	A.LECCODE, SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, A.SUBJECT_TEACHER_PAYMENT PAYMENT, B.LEC_DATE
					                                                						FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
					                                                						WHERE  	A.LECCODE = B.LECCODE
					                                                						AND		A.LEC_TYPE_CHOICE = 'D'
					                                                						AND		B.LEC_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
																						) A,
					                                               						(
					                                                						SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE,
					                                                       								B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
					                                                						FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
					                                                						WHERE  A.ORDERNO     = B.ORDERNO
					                                                						AND    A.PACKAGE_NO  = B.MGNTNO
					                                                						AND    A.ORDERNO     = C.ORDERNO
					                                                						AND    B.PRICE <> 0
					                                                						AND    B.ISCANCEL = 2
					                                               						) B
					                                        				WHERE  A.LECCODE = B.MGNTNO
					                                        				UNION
					                                        				SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
					                                               						B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
					                                               						A.PAYMENT, B.PAYCODE, B.PRICE,
					                                               						ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
					                                        				FROM   	(
					                                                						SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
					                                                       								(SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
					                                                       								(SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT,
					                                                       								B.LECCODE JONG_LECCODE,
					                                                       								C.LEC_DATE
					                                                						FROM   	TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMMDD')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
					                                                						WHERE  	A.LECCODE = B.MST_LECCODE
					                                                						AND		A.LECCODE = C.LECCODE
					                                                						AND    	A.LEC_TYPE_CHOICE = 'D'
					                                                						AND		C.LEC_DATE BETWEEN #{searchStartDate} AND #{searchEndDate}
					                                               						) A,
					                                               						(
					                                                						SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE, A.PACKAGE_NO, A.LECTURE_NO,
					                                                       								B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
					                                                						FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
					                                                						WHERE  A.ORDERNO     = B.ORDERNO
					                                                						AND   A.ORDERNO     = C.ORDERNO
					                                                						AND   B.ISCANCEL = 2
					                                               						) B
					                                        				WHERE  A.LECCODE = B.LECTURE_NO
					                                        				AND    A.JONG_LECCODE = B.PACKAGE_NO
					                                    				) A
					                           				) A
					                    		GROUP BY SUBJECT_TEACHER
					                		) A
					        ) T2
					ON T1.SUBJECT_TEACHER = T2.SUBJECT_TEACHER
				)
		WHERE TEACHER_NAME LIKE '%' || #{searchTeacherName} || '%'
		ORDER BY TOTAL_PRICE DESC
	]]>
	</select>

	<select id="offTeacherPayDetail" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT  A.USERID,
	                A.USER_NM,
	                DECODE(A.LEC_TYPE_CHOICE,'D','단과반','J','종합반','N','선택형종합반', 'Y','연회원패키지','패키지') LEC_TYPE_CHOICE,
	                A.SUBJECT_TITLE,
	                TO_CHAR(A.REG_DT,'YYYY-MM-DD') REG_DT,
	                TO_CHAR(A.START_DATE,'YYYY-MM-DD') START_DATE,
	                TO_CHAR(A.END_DATE,'YYYY-MM-DD') END_DATE,
	                A.TOTAL_PAY,
	                A.PAYMENT,
	                DECODE(A.PAYCODE,'PAY110','신용카드','PAY120','가상계좌','PAY130','계좌이체','PAY140','현금','PAY100','무통장입금') PAYCODE,
	                ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.036)
	                                WHEN 'PAY120' THEN A.TOTAL_PAY - 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.0143)
	                                WHEN 'PAY100' THEN A.TOTAL_PAY
	                                WHEN 'PAY140' THEN A.TOTAL_PAY
	                END) * (A.PAYMENT / 100),0) TEACHER_PAY,
	                (CASE A.PAYCODE WHEN 'PAY110' THEN 3.04
	                                WHEN 'PAY120' THEN 275
	                                WHEN 'PAY130' THEN 1.43
	                                WHEN 'PAY100' THEN 0
	                                WHEN 'PAY140' THEN 0
	                END) SUSU,
	                ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY * 0.036
	                                WHEN 'PAY120' THEN 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY * 0.0143
	                                WHEN 'PAY100' THEN 0
	                                WHEN 'PAY140' THEN 0
	                END),0) SUSU_PAY,
	                ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.036)
	                                WHEN 'PAY120' THEN A.TOTAL_PAY - 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.0143)
	                                WHEN 'PAY100' THEN A.TOTAL_PAY
	                                WHEN 'PAY140' THEN A.TOTAL_PAY
	                END) * (A.PAYMENT / 100) * 0.03,0) TEACHER_PAY_TEMP1,
	                ROUND((CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.036)
	                                WHEN 'PAY120' THEN A.TOTAL_PAY - 275
	                                WHEN 'PAY130' THEN A.TOTAL_PAY - (A.TOTAL_PAY * 0.0143)
	                                WHEN 'PAY100' THEN A.TOTAL_PAY
	                                WHEN 'PAY140' THEN A.TOTAL_PAY
	                END) * (A.PAYMENT / 100) * 0.03 * 0.1,0) TEACHER_PAY_TEMP2,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY END,0),0) PAY110_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN A.TOTAL_PAY END,0),0) PAY120_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY END,0),0) PAY130_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN A.TOTAL_PAY END,0),0) PAY100_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY140' THEN A.TOTAL_PAY END,0),0) PAY140_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY * 0.036 END,0),0) PAY110_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN 275 END,0),0) PAY120_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY * 0.0143 END,0),0) PAY130_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN 0 END,0),0) PAY100_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY140' THEN 0 END,0),0) PAY140_SUSU,
	                A.DISCOUNTPER
        FROM    (
                    SELECT  A.*,
	                            CASE A.P_PRICE WHEN 0 THEN A.PRICE
	                                           ELSE        A.P_PRICE
	                            END TOTAL_PAY
                    FROM    (
                            SELECT A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
	                                   B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
	                                   A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
                            FROM   (
                                    SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, A.SUBJECT_TEACHER_PAYMENT PAYMENT, B.LEC_DATE
                                    FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
                                    WHERE  	A.LECCODE = B.LECCODE
                                    AND		A.LEC_TYPE_CHOICE = 'D'
                                    AND    	A.SUBJECT_TEACHER = #{searchTeacher}
                                    AND		TO_CHAR(B.LEC_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                   ) A,
                                   (
                                    SELECT A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE,
                                           B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                    FROM   TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
                                    WHERE  A.ORDERNO     = B.ORDERNO
                                    AND    A.PACKAGE_NO  = B.MGNTNO
                                    AND    A.ORDERNO     = C.ORDERNO
                                    AND    B.PRICE > 0
                                    AND    B.STATUSCODE = 'DLV105'
                                   ) B
                            WHERE  A.LECCODE = B.MGNTNO
                            UNION
                            SELECT A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                   B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
                                   A.PAYMENT, B.PAYCODE, B.PRICE,
                                   ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
                            FROM   (
                                    SELECT A.LECCODE, A.SUBJECT_TEACHER,
                                           (SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
                                           (SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT,
                                           B.LECCODE JONG_LECCODE,
                                           C.LEC_DATE
                                    FROM   	TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
                                    WHERE  	A.LECCODE = B.MST_LECCODE
                                    AND 		A.LECCODE = C.LECCODE
                                    AND    	A.LEC_TYPE_CHOICE = 'D'
                                    AND    	A.SUBJECT_TEACHER = #{searchTeacher}
                                    AND		TO_CHAR(C.LEC_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                   ) A,
                                   (
                                    SELECT A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE, A.PACKAGE_NO, A.LECTURE_NO,
                                           B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                    FROM  TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
                                    WHERE  A.ORDERNO     = B.ORDERNO
                                    AND    A.ORDERNO     = C.ORDERNO
                                    AND    B.PRICE > 0
                                    AND    B.STATUSCODE = 'DLV105'
                                   ) B
                            WHERE  A.LECCODE = B.LECTURE_NO
                            AND    A.JONG_LECCODE = B.PACKAGE_NO
                    ) A
         ) A
	]]>
	</select>

	<select id="offTeacherPayReturnDetail" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT  A.USERID,
	                A.USER_NM,
	                DECODE(A.LEC_TYPE_CHOICE,'D','단과반','J','종합반','N','선택형종합반', 'Y','연회원패키지','패키지') LEC_TYPE_CHOICE,
	                A.SUBJECT_TITLE,
	                TO_CHAR(A.CONFIRMDATE,'YYYY-MM-DD') REG_DT,
	                TO_CHAR(A.START_DATE,'YYYY-MM-DD') START_DATE,
	                TO_CHAR(A.END_DATE,'YYYY-MM-DD') END_DATE,
	                A.TOTAL_PAY,
	                A.PAYMENT,
	                DECODE(A.PAYCODE,'PAY110','신용카드','PAY120','가상계좌','PAY130','계좌이체','PAY140','현금','PAY100','무통장입금') PAYCODE,
	                ROUND(A.TOTAL_PAY * (A.PAYMENT / 100),0) TEACHER_PAY,
	                ROUND(A.TOTAL_PAY * (A.PAYMENT / 100) * 0.03,0) TEACHER_PAY_TEMP1,
	                ROUND(A.TOTAL_PAY * (A.PAYMENT / 100) * 0.03 * 0.1,0) TEACHER_PAY_TEMP2,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY END,0),0) PAY110_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN A.TOTAL_PAY END,0),0) PAY120_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY END,0),0) PAY130_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN A.TOTAL_PAY END,0),0) PAY100_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY140' THEN A.TOTAL_PAY END,0),0) PAY140_PRICE,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY110' THEN A.TOTAL_PAY * 0.036 END,0),0) PAY110_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY120' THEN 275 END,0),0) PAY120_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY130' THEN A.TOTAL_PAY * 0.0143 END,0),0) PAY130_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY100' THEN 0 END,0),0) PAY100_SUSU,
	                ROUND(NVL(CASE A.PAYCODE WHEN 'PAY140' THEN 0 END,0),0) PAY140_SUSU,
	                A.DISCOUNTPER
		FROM    (
		            SELECT  A.*,
		                    CASE A.P_PRICE WHEN 0 THEN A.PRICE
		                                   ELSE        A.P_PRICE
		                    END TOTAL_PAY
		            FROM    (
		                        SELECT A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
		                               B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
		                               A.PAYMENT, B.PAYCODE, B.PRICE, 0 P_PRICE
		                        FROM   (
		                                SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, A.SUBJECT_TEACHER_PAYMENT PAYMENT, B.LEC_DATE
		                                FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
		                                WHERE  	A.LECCODE = B.LECCODE
		                                AND		A.LEC_TYPE_CHOICE = 'D'
		                                AND    	A.SUBJECT_TEACHER = #{searchTeacher}
		                                AND		TO_CHAR(B.LEC_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		                               ) A,
		                               (
		                                SELECT A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE,
		                                       B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
		                                FROM   TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
		                                WHERE  A.ORDERNO     = B.ORDERNO
		                                AND    A.PACKAGE_NO  = B.MGNTNO
		                                AND    A.ORDERNO     = C.ORDERNO
		                                AND    B.PRICE <> 0
		                                AND    B.ISCANCEL = 2
		                               ) B
		                        WHERE  A.LECCODE = B.MGNTNO
		                        UNION
		                        SELECT A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
		                               B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID, B.USER_NM, B.START_DATE, B.END_DATE,
		                               A.PAYMENT, B.PAYCODE, B.PRICE,
		                               ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
		                        FROM   (
		                                SELECT A.LECCODE, A.SUBJECT_TEACHER,
		                                       (SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
		                                       (SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE, SUBJECT_TEACHER_PAYMENT PAYMENT,
		                                       B.LECCODE JONG_LECCODE,
		                                       C.LEC_DATE
		                                FROM   TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
		                                WHERE  	A.LECCODE = B.MST_LECCODE
		                                AND		A.LECCODE = C.LECCODE
		                                AND    	A.LEC_TYPE_CHOICE = 'D'
		                                AND    	A.SUBJECT_TEACHER = #{searchTeacher}
		                                AND		TO_CHAR(C.LEC_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		                               ) A,
		                               (
		                                SELECT A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.START_DATE, A.END_DATE, A.PACKAGE_NO, A.LECTURE_NO,
		                                       		B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
		                                FROM   TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
		                                WHERE  A.ORDERNO     = B.ORDERNO
		                                AND    A.ORDERNO     = C.ORDERNO
		                                AND    B.ISCANCEL = 2
		                               ) B
		                        WHERE  A.LECCODE = B.LECTURE_NO
		                        AND    A.JONG_LECCODE = B.PACKAGE_NO
		            ) A
		) A
	]]>
	</select>

	<select id="offTeacherAdjustList" parameterType="hashMap" resultType="hashMap">
		SELECT LTBL.*
		FROM (
			SELECT TBL.*, ROWNUM rnum
			FROM   (
SELECT T.*, NVL(YY.CNT, 0) OFFERERCNT,
       TO_CHAR(TT.SETTLE_DT,'yyyy-MM-dd') AS SETTLE_DT
        , NVL(PREAMOUNT,0) PREAMOUNT, NVL(AMOUNT,0) AMOUNT, NVL(TEACHERAMOUNT,0) TEACHERAMOUNT,CALCUCRITERIA_DTYPE
        , NVL(CALCUCRITERIA_DVALUE,0) CALCUCRITERIA_DVALUE, CALCUCRITERIA_JTYPE,NVL(CALCUCRITERIA_JVALUE,0) CALCUCRITERIA_JVALUE ,NVL(TEACHERPAY,0) TEACHERPAY
        , WITHHOLDRATIO, NVL(WITHHOLDTAX,0) WITHHOLDTAX, NVL(ADJUSTAMOUNT,0) ADJUSTAMOUNT
        , (SELECT NVL(SUM(DECODE(ADDTYPE,'P',1,'M',-1,1) * ADDMONEY),0) FROM TB_PAYSETTLEMENT_ADD
              WHERE LECCODE = T.BRIDGE_LECCODE AND TEACHER_ID = T.SUBJECT_TEACHER AND ETCYN = 'N') AS DEDUCTAMOUNT
        , (SELECT NVL(SUM(DECODE(ADDTYPE,'P',1,'M',-1,1) * ADDMONEY),0) FROM TB_PAYSETTLEMENT_ADD
            WHERE LECCODE = T.BRIDGE_LECCODE AND TEACHER_ID = T.SUBJECT_TEACHER AND ETCYN = 'Y') AS DEDUCTAMOUNT_ETC
             FROM  (SELECT TM.LECCODE, AA.BRIDGE_LECCODE, TM.SEQ,
                              TM.SUBJECT_SJT_CD, (SELECT SUBJECT_NM FROM TB_SUBJECT_INFO WHERE SUBJECT_CD = TM.SUBJECT_SJT_CD) AS SUBJECT_NM,
                              TM.SUBJECT_TEACHER, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = TM.SUBJECT_TEACHER) AS TEACHER_NM,
                              TM.SUBJECT_TITLE,
                              TM.SUBJECT_OPEN_DATE,
                              BB.MIN_DATE, BB.MAX_DATE
                       FROM TB_OFF_LEC_MST TM, (SELECT A.LECCODE, B.BRIDGE_LECCODE, RANK () OVER(PARTITION BY B.BRIDGE_LECCODE ORDER BY A.LECCODE ASC, A.SEQ ASC) RANK
                                                FROM TB_OFF_LEC_MST A, TB_OFF_LEC_BRIDGE B
                                                WHERE A.LECCODE = B.LECCODE
                                                ) AA, (SELECT Z.LECCODE, MIN(Z.LEC_DATE) MIN_DATE, MAX(Z.LEC_DATE) MAX_DATE 
                                                       FROM TB_OFF_LECTURE_DATE Z 
                                                       GROUP BY Z.LECCODE) BB
                       WHERE TM.LECCODE = AA.LECCODE
                       AND TM.LECCODE = BB.LECCODE
                       AND AA.RANK = 1) T, (SELECT CC.LECCODE, MM.CNT
                                              FROM (SELECT BB.BRIDGE_LECCODE, COUNT (OM.MGNTNO) CNT
                                                    FROM TB_OFF_LEC_MST LM, TB_OFF_ORDER_MGNT_NO OM,
                                                         (SELECT B.ORDERNO, B.MGNTNO, C.BRIDGE_LECCODE
                                                          FROM TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_BRIDGE C,
                                                               (SELECT A.LECCODE, B.BRIDGE_LECCODE
                                                                FROM TB_OFF_LEC_MST A, TB_OFF_LEC_BRIDGE B
                                                                WHERE A.LECCODE = B.LECCODE) D
                                                          WHERE A.ORDERNO = B.ORDERNO
                                                          AND A.PACKAGE_NO = B.MGNTNO
                                                          AND A.LECTURE_NO = C.LECCODE
                                                          AND B.STATUSCODE IN ('DLV105', 'DLV230')
                                                          AND C.LECCODE = D.LECCODE
                                                          AND C.BRIDGE_LECCODE = D.BRIDGE_LECCODE
                                                          GROUP BY B.ORDERNO, B.MGNTNO, C.BRIDGE_LECCODE
                                                          HAVING COUNT(B.MGNTNO) = 1) BB
                                                    WHERE OM.ORDERNO = BB.ORDERNO
                                                    AND OM.MGNTNO = BB.MGNTNO
                                                    AND LM.LECCODE = OM.MGNTNO
                                                    GROUP BY BB.BRIDGE_LECCODE) MM, TB_OFF_LEC_BRIDGE CC
                                              WHERE MM.BRIDGE_LECCODE = CC.BRIDGE_LECCODE) YY, TB_PAYSETTLEMENT TT
                                              WHERE 1 = 1
                                              AND T.LECCODE = YY.LECCODE(+)
                                              AND T.BRIDGE_LECCODE = TT.LECCODE(+)
					<if test='searchType == "SETTLE_DT"'>
				        AND	(TO_CHAR(TT.SETTLE_DT,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
					</if>
					<if test='searchType == "SUBJECT_OPEN_DATE"'>
				        AND	(TO_CHAR(T.MIN_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
					</if>
					<if test='searchType == "SUBJECT_CLOSE_DATE"'>
				        AND	(TO_CHAR(T.MAX_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
					</if>
					<if test='searchTeacherName != null and searchTeacherName != ""'>
			    	AND (T.TEACHER_NM LIKE '%' || #{searchTeacherName} || '%')
			    	</if>
			ORDER BY T.TEACHER_NM ASC
			) TBL
              	WHERE ROWNUM <![CDATA[ <= ]]> #{endNo}
		) LTBL
		WHERE rnum <![CDATA[ > ]]> #{startNo}
	</select>

	<select id="offTeacherAdjustListCount" parameterType="hashMap" resultType="String">
		SELECT
		COUNT(*)
		FROM
		(SELECT T.*, NVL(YY.CNT, 0) OFFERERCNT,
       TO_CHAR(TT.SETTLE_DT,'yyyy-MM-dd') AS SETTLE_DT
        , NVL(PREAMOUNT,0) PREAMOUNT, NVL(AMOUNT,0) AMOUNT, NVL(TEACHERAMOUNT,0) TEACHERAMOUNT,CALCUCRITERIA_DTYPE
        , NVL(CALCUCRITERIA_DVALUE,0) CALCUCRITERIA_DVALUE, CALCUCRITERIA_JTYPE,NVL(CALCUCRITERIA_JVALUE,0) CALCUCRITERIA_JVALUE ,NVL(TEACHERPAY,0) TEACHERPAY
        , WITHHOLDRATIO, NVL(WITHHOLDTAX,0) WITHHOLDTAX, NVL(ADJUSTAMOUNT,0) ADJUSTAMOUNT
        , (SELECT NVL(SUM(DECODE(ADDTYPE,'P',1,'M',-1,1) * ADDMONEY),0) FROM TB_PAYSETTLEMENT_ADD
              WHERE LECCODE = T.BRIDGE_LECCODE AND TEACHER_ID = T.SUBJECT_TEACHER AND ETCYN = 'N') AS DEDUCTAMOUNT
        , (SELECT NVL(SUM(DECODE(ADDTYPE,'P',1,'M',-1,1) * ADDMONEY),0) FROM TB_PAYSETTLEMENT_ADD
            WHERE LECCODE = T.BRIDGE_LECCODE AND TEACHER_ID = T.SUBJECT_TEACHER AND ETCYN = 'Y') AS DEDUCTAMOUNT_ETC
             FROM  (SELECT TM.LECCODE, AA.BRIDGE_LECCODE, TM.SEQ,
                              TM.SUBJECT_SJT_CD, (SELECT SUBJECT_NM FROM TB_SUBJECT_INFO WHERE SUBJECT_CD = TM.SUBJECT_SJT_CD) AS SUBJECT_NM,
                              TM.SUBJECT_TEACHER, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = TM.SUBJECT_TEACHER) AS TEACHER_NM,
                              TM.SUBJECT_TITLE,
                              TM.SUBJECT_OPEN_DATE,
                              BB.MIN_DATE, BB.MAX_DATE
                       FROM TB_OFF_LEC_MST TM, (SELECT A.LECCODE, B.BRIDGE_LECCODE, RANK () OVER(PARTITION BY B.BRIDGE_LECCODE ORDER BY A.LECCODE ASC, A.SEQ ASC) RANK
                                                FROM TB_OFF_LEC_MST A, TB_OFF_LEC_BRIDGE B
                                                WHERE A.LECCODE = B.LECCODE
                                                ) AA, (SELECT Z.LECCODE, MIN(Z.LEC_DATE) MIN_DATE, MAX(Z.LEC_DATE) MAX_DATE 
                                                       FROM TB_OFF_LECTURE_DATE Z 
                                                       GROUP BY Z.LECCODE) BB
                       WHERE TM.LECCODE = AA.LECCODE
                       AND TM.LECCODE = BB.LECCODE
                       AND AA.RANK = 1) T, (SELECT CC.LECCODE, MM.CNT
                                              FROM (SELECT BB.BRIDGE_LECCODE, COUNT (OM.MGNTNO) CNT
                                                    FROM TB_OFF_LEC_MST LM, TB_OFF_ORDER_MGNT_NO OM,
                                                         (SELECT B.ORDERNO, B.MGNTNO, C.BRIDGE_LECCODE
                                                          FROM TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_BRIDGE C,
                                                               (SELECT A.LECCODE, B.BRIDGE_LECCODE
                                                                FROM TB_OFF_LEC_MST A, TB_OFF_LEC_BRIDGE B
                                                                WHERE A.LECCODE = B.LECCODE) D
                                                          WHERE A.ORDERNO = B.ORDERNO
                                                          AND A.PACKAGE_NO = B.MGNTNO
                                                          AND A.LECTURE_NO = C.LECCODE
                                                          AND B.STATUSCODE IN ('DLV105', 'DLV230')
                                                          AND C.LECCODE = D.LECCODE
                                                          AND C.BRIDGE_LECCODE = D.BRIDGE_LECCODE
                                                          GROUP BY B.ORDERNO, B.MGNTNO, C.BRIDGE_LECCODE
                                                          HAVING COUNT(B.MGNTNO) = 1) BB
                                                    WHERE OM.ORDERNO = BB.ORDERNO
                                                    AND OM.MGNTNO = BB.MGNTNO
                                                    AND LM.LECCODE = OM.MGNTNO
                                                    GROUP BY BB.BRIDGE_LECCODE) MM, TB_OFF_LEC_BRIDGE CC
                                              WHERE MM.BRIDGE_LECCODE = CC.BRIDGE_LECCODE) YY, TB_PAYSETTLEMENT TT
                                              WHERE 1 = 1
                                              AND T.LECCODE = YY.LECCODE(+)
                                              AND T.BRIDGE_LECCODE = TT.LECCODE(+)
					<if test='searchType == "SETTLE_DT"'>
				        AND	(TO_CHAR(TT.SETTLE_DT,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
					</if>
					<if test='searchType == "SUBJECT_OPEN_DATE"'>
				        AND	(TO_CHAR(T.MIN_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
					</if>
					<if test='searchType == "SUBJECT_CLOSE_DATE"'>
				        AND	(TO_CHAR(T.MAX_DATE,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
					</if>
					<if test='searchTeacherName != null and searchTeacherName != ""'>
			    	AND (T.TEACHER_NM LIKE '%' || #{searchTeacherName} || '%')
			    	</if>
			    	)
	</select>

	<!-- 수강신청/환불 내역 조회 -->
	<select id="offAdjustOrderList" parameterType="hashMap" resultType="hashMap">
		SELECT
		A.ORDERNO, B.LECTURE_NO,TO_CHAR(B.REG_DT,'YYYY-MM-DD') REG_DT, C.USER_NM, C.PHONE_NO, C.EMAIL,
		CASE WHEN (D.PRICE_CARD <![CDATA[>]]> 0 AND A.STATUSCODE = 'DLV105') THEN B.REALPRICE ELSE 0 END AS PRICE_CARD,
		CASE WHEN (D.PRICE_CASH <![CDATA[>]]> 0 AND D.PRICE_CARD = 0 AND A.STATUSCODE = 'DLV105') THEN B.REALPRICE ELSE 0 END AS PRICE_CASH,
		CASE WHEN (D.PRICE_BANK <![CDATA[>]]> 0 AND D.PRICE_CASH = 0 AND D.PRICE_CARD = 0 AND A.STATUSCODE = 'DLV105') THEN B.REALPRICE ELSE 0 END AS PRICE_BANK,
		CASE WHEN (D.PRICE_VACCT <![CDATA[>]]> 0 AND D.PRICE_CASH = 0 AND D.PRICE_CARD = 0 AND A.STATUSCODE = 'DLV105') THEN B.REALPRICE ELSE 0 END AS PRICE_VACCT,
		CASE WHEN (D.PRICE_DBANK <![CDATA[>]]> 0 AND D.PRICE_CASH = 0 AND D.PRICE_CARD = 0 AND A.STATUSCODE = 'DLV105') THEN B.REALPRICE ELSE 0 END AS PRICE_DBANK,
		CASE WHEN (D.PRICE_CARD <![CDATA[>]]> 0 AND A.STATUSCODE = 'DLV105') THEN TRUNC(B.REALPRICE * 0.036) ELSE 0 END AS CHARGE,
		CASE WHEN A.STATUSCODE <![CDATA[<>]]> 'DLV105' THEN B.REALPRICE ELSE 0 END AS REFUND,
		DECODE(A.PTYPE,'D','단과반','N','종합반','J','종합반','P','패키지')  AS PTYPE,
		NVL(D.PRICE_DISCOUNT_REASON,' ') AS PRICE_DISCOUNT_REASON,
		CASE WHEN NVL(D.PRICE_DISCOUNT,0) <![CDATA[>]]> 0 THEN TO_CHAR(D.PRICE_DISCOUNT) || DECODE(D.PRICE_DISCOUNT_TYPE,'R','%','W','원','') ELSE ' ' END AS DISCOUNTPLUS
		FROM (
		    SELECT ORDERNO, MGNTNO, MAX(ISCANCEL) ISCANCEL, MIN(PRICE) PRICE, MAX(STATUSCODE) STATUSCODE, MIN(PTYPE) PTYPE
		    FROM TB_OFF_ORDER_MGNT_NO
		    WHERE STATUSCODE IN ('DLV230','DLV105','DLV150') AND  PTYPE IN ('D','N','J','P')
		    GROUP BY ORDERNO, MGNTNO
		) A
		INNER JOIN TB_OFF_MYLECTURE B
		ON A.ORDERNO = B.ORDERNO AND A.MGNTNO = B.PACKAGE_NO
		INNER JOIN TB_OFF_ORDERS C
		ON A.ORDERNO = C.ORDERNO
		INNER JOIN TB_OFF_LEC_MST E
		ON B.LECTURE_NO = E.LECCODE
		LEFT OUTER JOIN  TB_OFF_APPROVALS D
		ON C.ORDERNO = D.ORDERNO
		INNER JOIN TB_OFF_LEC_BRIDGE F
		ON B.LECTURE_NO = F.LECCODE
		WHERE 1=1
		<if test='searchTeacher != null and searchTeacher != ""'>
			AND E.SUBJECT_TEACHER = #{searchTeacher}
		</if>
		<if test='searchLeccode != null and searchLeccode != ""'>
			AND F.BRIDGE_LECCODE = #{searchLeccode}
		</if>
		ORDER BY B.REG_DT DESC

	</select>

	<!-- 추가사항 조회 -->
	<select id="offAdjustDeductList" parameterType="hashMap" resultType="hashMap">
		SELECT
		PSA_NO,
		TEACHER_ID,
		LECCODE,
		ADDTYPE,
		ADDMEMO,
		ADDMONEY,
		ETCYN,
		CASE WHEN ADDTYPE = 'P' THEN '+' WHEN ADDTYPE = 'M' THEN '-' END AS ATYPE
		FROM TB_PAYSETTLEMENT_ADD
		WHERE TEACHER_ID = #{searchTeacher}
			AND LECCODE = #{searchLeccode}
		  	AND ETCYN = 'N'
		ORDER BY PSA_NO ASC
	</select>

	<!-- 기타 추가사항 조회 -->
	<select id="offAdjustDeductEtcList" parameterType="hashMap" resultType="hashMap">
		SELECT
		PSA_NO,
		TEACHER_ID,
		LECCODE,
		ADDTYPE,
		ADDMEMO,
		ADDMONEY,
		ETCYN,
		CASE WHEN ADDTYPE = 'P' THEN '+' WHEN ADDTYPE = 'M' THEN '-' END AS ATYPE
		FROM TB_PAYSETTLEMENT_ADD
		WHERE TEACHER_ID = #{searchTeacher}
			AND LECCODE = #{searchLeccode}
		  	AND ETCYN = 'Y'
		ORDER BY PSA_NO ASC
	</select>

	<select id="offTeacherAdjustDetail" parameterType="hashMap" resultType="hashMap">
        SELECT
        B.SETTLE_DT
        , NVL(B.SEQ,0) AS SEQ
        , A.BRIDGE_LECCODE, A.SUBJECT_NM, B.LECCODE
        , A.SUBJECT_TEACHER, A.TEACHER_NM, A.SUBJECT_TITLE
        , TO_CHAR(A.MIN_DATE,'yyyy-MM-dd') AS STARTDATE
        , TO_CHAR(A.MAX_DATE,'yyyy-MM-dd') AS ENDDATE
        , NVL(PREAMOUNT,0) PREAMOUNT, NVL(AMOUNT,0) AMOUNT
        , NVL(TEACHERAMOUNT,0) TEACHERAMOUNT
        , CALCUCRITERIA_DTYPE
        , CASE WHEN CALCUCRITERIA_DTYPE = 1 THEN '비율(%)'
            WHEN CALCUCRITERIA_DTYPE = 2 THEN '시급(월)'
            WHEN CALCUCRITERIA_DTYPE = 3 THEN '월정액(월)' END AS CALCUCRITERIA_DTYPE_NM
        , NVL(CALCUCRITERIA_DVALUE,0) CALCUCRITERIA_DVALUE
        , CALCUCRITERIA_JTYPE
        , CASE WHEN CALCUCRITERIA_JTYPE = 1 THEN '비율(%)'
            WHEN CALCUCRITERIA_JTYPE = 2 THEN '시급(월)'
            WHEN CALCUCRITERIA_JTYPE = 3 THEN '월정액(월)' END AS CALCUCRITERIA_JTYPE_NM
        , NVL(CALCUCRITERIA_JVALUE,0) CALCUCRITERIA_JVALUE
        , NVL(TEACHERPAY,0) TEACHERPAY
        , WITHHOLDRATIO, NVL(WITHHOLDTAX,0) WITHHOLDTAX
        , NVL(ADJUSTAMOUNT,0) ADJUSTAMOUNT
        , (SELECT NVL(SUM(DECODE(ADDTYPE,'P',1,'M',-1,1) * ADDMONEY),0) FROM TB_PAYSETTLEMENT_ADD
              WHERE LECCODE = A.LECCODE AND TEACHER_ID = A.SUBJECT_TEACHER AND ETCYN = 'N') AS DEDUCTAMOUNT
        , (SELECT NVL(SUM(DECODE(ADDTYPE,'P',1,'M',-1,1) * ADDMONEY),0) FROM TB_PAYSETTLEMENT_ADD
              WHERE LECCODE = A.LECCODE AND TEACHER_ID = A.SUBJECT_TEACHER AND ETCYN = 'Y') AS DEDUCTAMOUNT_ETC
        FROM
        (SELECT TM.LECCODE, AA.BRIDGE_LECCODE,
                              TM.SUBJECT_SJT_CD, (SELECT SUBJECT_NM FROM TB_SUBJECT_INFO WHERE SUBJECT_CD = TM.SUBJECT_SJT_CD) AS SUBJECT_NM,
                              TM.SUBJECT_TEACHER, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = TM.SUBJECT_TEACHER) AS TEACHER_NM,
                              TM.SUBJECT_TITLE,
                              TM.SUBJECT_OPEN_DATE,
                              NVL((SELECT MIN(Z.LEC_DATE) FROM TB_OFF_LECTURE_DATE Z WHERE Z.LECCODE = TM.LECCODE),'') AS MIN_DATE,
                              NVL((SELECT MAX(Z.LEC_DATE) FROM TB_OFF_LECTURE_DATE Z WHERE Z.LECCODE = TM.LECCODE),'') AS MAX_DATE
                       FROM TB_OFF_LEC_MST TM, (SELECT A.LECCODE, B.BRIDGE_LECCODE, RANK () OVER(PARTITION BY B.BRIDGE_LECCODE ORDER BY A.LECCODE ASC, A.SEQ ASC) RANK
                                                FROM TB_OFF_LEC_MST A, TB_OFF_LEC_BRIDGE B
                                                WHERE A.LECCODE = B.LECCODE
                                                ) AA
                       WHERE TM.LECCODE = AA.LECCODE
                       AND AA.RANK = 1) A, TB_PAYSETTLEMENT B
        WHERE 1=1
        AND A.SUBJECT_TEACHER = B.TEACHER_ID(+)
        AND A.BRIDGE_LECCODE = B.LECCODE(+)
		<if test='searchTeacher != null and searchTeacher != ""'>
			AND A.SUBJECT_TEACHER = #{searchTeacher}
		</if>
		<if test='searchLeccode != null and searchLeccode != ""'>
			AND A.BRIDGE_LECCODE = #{searchLeccode}
		</if>
	</select>

	<insert id="offTeacherAdjustInsert" parameterType="hashMap" flushCache="true">
	  	INSERT INTO TB_PAYSETTLEMENT
       	(
	       	SEQ
	       	,ONOFF
	       	,TEACHER_ID
	       	,TEACHER_NM
	       	,LECCODE
	       	,PREAMOUNT
	       	,AMOUNT
	       	,TEACHERAMOUNT
	       	,DEDUCTAMOUNT
	       	,CALCUCRITERIA_DTYPE
	       	,CALCUCRITERIA_DVALUE
	       	,CALCUCRITERIA_JTYPE
	       	,CALCUCRITERIA_JVALUE
	       	,TEACHERPAY
	       	,WITHHOLDRATIO
	       	,WITHHOLDTAX
	       	,DEDUCTAMOUNT_ETC
	       	,ADJUSTAMOUNT
	       	,SETTLE_DT
	       	,REG_DT
		)
		VALUES
		(
           	SEQ_TB_PAYSETTLEMENT.NEXTVAL
           	,'OFF'
           	,#{TEACHER_ID}
           	,#{TEACHER_NM}
           	,#{LECCODE}
			,TO_NUMBER(#{PREAMOUNT})
			,TO_NUMBER(#{AMOUNT})
			,TO_NUMBER(#{TEACHERAMOUNT})
			,TO_NUMBER(#{DEDUCTAMOUNT})
           	,#{CALCUCRITERIA_DTYPE}
			,TO_NUMBER(#{CALCUCRITERIA_DVALUE})
           	,#{CALCUCRITERIA_JTYPE}
			,TO_NUMBER(#{CALCUCRITERIA_JVALUE})
			,TO_NUMBER(#{TEACHERPAY})
			,TO_NUMBER(#{WITHHOLDRATIO})
			,TO_NUMBER(#{WITHHOLDTAX})
			,TO_NUMBER(#{DEDUCTAMOUNT_ETC})
			,TO_NUMBER(#{ADJUSTAMOUNT})
           	,SYSDATE
           	,SYSDATE
		)
	</insert>

	<update  id="offTeacherAdjustUpdate" parameterType="hashMap" flushCache="true">
	  	UPDATE TB_PAYSETTLEMENT
			SET
			PREAMOUNT = TO_NUMBER(#{PREAMOUNT})
			, AMOUNT = TO_NUMBER(#{AMOUNT})
			, TEACHERAMOUNT = TO_NUMBER(#{TEACHERAMOUNT})
			, DEDUCTAMOUNT = TO_NUMBER(#{DEDUCTAMOUNT})
			, CALCUCRITERIA_DTYPE = #{CALCUCRITERIA_DTYPE}
			, CALCUCRITERIA_JTYPE = #{CALCUCRITERIA_JTYPE}
			, CALCUCRITERIA_DVALUE = TO_NUMBER(#{CALCUCRITERIA_DVALUE})
			, CALCUCRITERIA_JVALUE = TO_NUMBER(#{CALCUCRITERIA_JVALUE})
			, TEACHERPAY = TO_NUMBER(#{TEACHERPAY})
			, WITHHOLDRATIO = TO_NUMBER(#{WITHHOLDRATIO})
			, WITHHOLDTAX = TO_NUMBER(#{WITHHOLDTAX})
			, DEDUCTAMOUNT_ETC = TO_NUMBER(#{DEDUCTAMOUNT_ETC})
			, ADJUSTAMOUNT = TO_NUMBER(#{ADJUSTAMOUNT})
			, SETTLE_DT =  SYSDATE
		WHERE TEACHER_ID = #{TEACHER_ID}
           	AND LECCODE = #{LECCODE}
        <if test='SEQ != null and SEQ != "" and SEQ != "0"'>
			AND SEQ = #{SEQ}
		</if>
	</update>

	<insert id="offAdjustDeductInsert" parameterType="hashMap" flushCache="true">
	  	INSERT INTO TB_PAYSETTLEMENT_ADD
       	(
	       	PSA_NO
	       	,TEACHER_ID
	       	,LECCODE
	       	,ADDTYPE
	       	,ADDMEMO
	       	,ADDMONEY
	       	,ADDREG_DT
	       	,ADDUPD_DT
	       	,ETCYN
		)
		VALUES
		(
           	SEQ_TB_PAYSETTLEMENT_ADD.NEXTVAL
           	,#{TEACHER_ID}
           	,#{LECCODE}
           	,#{ADDTYPE}
           	,#{ADDMEMO}
			,TO_NUMBER(#{ADDMONEY})
           	,SYSDATE
           	,SYSDATE
           	,#{ETCYN}
		)
	</insert>

	<update id="offAdjustDeductUpdate" parameterType="hashMap" flushCache="true">
	  	UPDATE TB_PAYSETTLEMENT_ADD
			SET
			ADDTYPE = #{ADDTYPE}
			, ADDMEMO =  #{ADDMEMO}
			, ADDMONEY = TO_NUMBER(#{ADDMONEY})
			, ADDUPD_DT =  SYSDATE
			, ETCYN = #{ETCYN}
		WHERE PSA_NO = #{PSA_NO}
			AND TEACHER_ID = #{TEACHER_ID}
           	AND LECCODE = #{LECCODE}
	</update>


	<update id="updateOffMylectureRealprice" parameterType="hashMap" flushCache="true">
		{call
		DECLARE
		BEGIN

			UPDATE TB_OFF_MYLECTURE TOM
			SET REALPRICE =
			( SELECT  TREALPAY FROM
			(SELECT B.ORDERNO, B.PACKAGE_NO, TRUNC(PRICE/ LCNT) TREALPAY
			FROM
			(SELECT ORDERNO, MGNTNO, MIN(PRICE) PRICE
			FROM TB_OFF_ORDER_MGNT_NO
			WHERE STATUSCODE IN ('DLV230','DLV105','DLV150') AND PTYPE IN ('N','J')
			GROUP BY ORDERNO, MGNTNO) A
			, (SELECT ORDERNO, PACKAGE_NO, COUNT(*) LCNT  FROM TB_OFF_MYLECTURE
			GROUP BY ORDERNO, PACKAGE_NO
			HAVING COUNT(*) <![CDATA[ > ]]> 1 ) B
			WHERE A.ORDERNO = B.ORDERNO AND A.MGNTNO = B.PACKAGE_NO
			) C WHERE TOM.ORDERNO = C.ORDERNO AND TOM.PACKAGE_NO= C.PACKAGE_NO)
			WHERE SUBSTR(TOM.PACKAGE_NO,1,1) = 'N'  AND TOM.REALPRICE IS NULL;

       	END
       	}
	</update>

	<select id="onAdvanceReceivedList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
        SELECT 
              USER_ID, USER_NM, 
              FN_GET_CODE_NM('PAYMENT_CODE', PAYCODE) PAYNAME,
              FN_GET_CODE_NM('LEC_TYPE', LEC_TYPE_CHOICE) LEC_TYPE_CHOICE,
              ORDERNO,MGNTNO, SUBJECT_TITLE, 
              DECODE('J',LECTURE_NO,'N',LECTURE_NO, 'P',LECTURE_NO) LECTURE_NO, LEC_TITLE,
              (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = SUBJECT_TEACHER) SUBJECT_TEACHER,
              ORDER_DATE, NVL(ROUND(PRICE),0) PRICE, 
              NVL(SUSU_RATE,0) SUSU_RATE, NVL(ROUND(SUSU_PRICE),0) SUSU_PRICE, 
              (NVL(ROUND(SUB_PRICE),0) / NVL(ROUND(PRICE),0)) SUB_AVR, NVL(ROUND(SUB_PRICE),0) SUB_PRICE, 
              PAYMENT, NVL(ROUND(SUB_PRICE * (PAYMENT/100)) ,0) TEACHER_PRICE, 
              TO_CHAR(START_DATE, 'YYYY-MM-DD') START_DATE, TO_CHAR(END_DATE, 'YYYY-MM-DD') END_DATE, 
              PERIOD, REST_PERIOD, (PERIOD - REST_PERIOD) USE_PERIOD, 
              NVL(ROUND(NVL(ROUND(SUB_PRICE),0)*(REST_PERIOD/PERIOD)),0) REST_PRICE,
              NVL(ROUND(NVL(ROUND(SUB_PRICE),0)*(1-(REST_PERIOD/PERIOD))),0) USE_PRICE
        FROM   (
                SELECT T.MGNTNO
                      ,T.SUBJECT_TITLE
                      ,T.LECTURE_NO
                      ,T.LEC_TITLE
                      ,T.SUBJECT_TEACHER
                      ,T.LEC_TYPE_CHOICE
                      ,T.ORDER_DATE
                      ,T.ORDERNO
                      ,T.USER_ID
                      ,T.USER_NM
                      ,T.PAYCODE
                      ,T.PRICE
                      ,T.SUB_PRICE
                      ,DECODE(T.LEC_TYPE_CHOICE, 'Y', 
                              NVL(PKG_LECTURE.FN_GET_REST_YEAR_PASS(T.ORDERNO, T.MGNTNO, T.END_DATE, (TO_CHAR(TO_DATE(#{searchDate})+1))),0),
                              NVL(PKG_LECTURE.FN_GET_REST_LECTURE(T.ORDERNO, T.MGNTNO, T.LECTURE_NO, (TO_CHAR(TO_DATE(#{searchDate})+1))),0)) REST_PERIOD
                      ,(CASE T.PAYCODE WHEN 'PAY110' THEN 3.04
                                       WHEN 'PAY120' THEN 275
                                       WHEN 'PAY130' THEN 1.43
                                       WHEN 'PAY100' THEN 0
                       END) SUSU_RATE
                      ,T.PRICE - ROUND((CASE T.PAYCODE WHEN 'PAY110' THEN T.PRICE * 0.036
                                             WHEN 'PAY120' THEN 275
                                             WHEN 'PAY130' THEN T.PRICE * 0.0143
                                             WHEN 'PAY100' THEN 0
                             END),0) SUSU_PRICE
                      ,T.START_DATE
                      ,T.END_DATE
                      ,T.PERIOD
                      ,T.PAYMENT
                FROM   (
                        SELECT 
                              OO.USER_ID, OO.USER_NM, OA.PAYCODE, P1.LEC_TYPE_CHOICE, 
                              OO.ORDERNO, OM.MGNTNO, P1.SUBJECT_TITLE, MY.LECTURE_NO, '' LEC_TITLE,
                              P1.SUBJECT_TEACHER, TO_CHAR(OM.ISCONFIRM,'YYYY-MM-DD') AS ORDER_DATE,
                              OM.PRICE, OM.PRICE SUB_PRICE, P1.SUBJECT_PRICE, 
                              P1.SUBJECT_TEACHER_PAYMENT PAYMENT, 
                              MY.START_DATE, MY.END_DATE, MY.PERIOD
                        FROM TB_MYLECTURE MY, TB_ORDER_MGNT_NO OM, TB_ORDERS OO, TB_APPROVALS OA, TB_LEC_MST P1,
                             (SELECT ORDERNO, MGNTNO
                              FROM TB_ORDER_MGNT_NO
                              WHERE STATUSCODE IN ('DLV105', 'DLV230')
                              AND TO_CHAR(ISCONFIRM,'YYYYMMDD') <= #{searchDate}
                              GROUP BY ORDERNO, MGNTNO
                              HAVING COUNT(*) = 1) ZZ
                        WHERE  P1.LEC_TYPE_CHOICE = 'D'
                        AND OM.ORDERNO = ZZ.ORDERNO
                        AND OM.MGNTNO = ZZ.MGNTNO
                        AND OM.PRICE > 0
                        AND MY.ORDERNO = OM.ORDERNO 
                        AND MY.PACKAGE_NO = OM.MGNTNO
                        AND MY.ORDERNO = OO.ORDERNO
                        AND MY.ORDERNO = OA.ORDERNO
                        AND OM.MGNTNO = P1.LECCODE
                        AND TO_CHAR(MY.END_DATE,'YYYYMMDD') > #{searchDate}
                        AND TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') <= #{searchDate}
                        UNION
                        SELECT 
                              OO.USER_ID, OO.USER_NM, OA.PAYCODE, OM.PTYPE,
                              OO.ORDERNO, OM.MGNTNO, TBM.SUBJECT_TITLE, MY.LECTURE_NO, P1.SUBJECT_TITLE  LEC_TITLE,
                              P1.SUBJECT_TEACHER, TO_CHAR(OM.ISCONFIRM,'YYYY-MM-DD') ORDER_DATE, 
                              OM.PRICE, PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(OO.ORDERNO, OM.MGNTNO, MY.LECTURE_NO, 'DLV105') SUB_PRICE, P1.SUBJECT_PRICE, 
                              P1.SUBJECT_TEACHER_PAYMENT PAYMENT,
                              MY.START_DATE, MY.END_DATE, MY.PERIOD
                        FROM TB_ORDERS OO, TB_ORDER_MGNT_NO OM, TB_MYLECTURE MY, TB_APPROVALS OA, TB_LEC_MST TBM, 
                             (SELECT A.LECCODE, A.MST_LECCODE, B.SUBJECT_TEACHER, B.SUBJECT_PRICE, B.SUBJECT_TITLE, 
                                     B.SUBJECT_PERIOD, B.LEC_TYPE_CHOICE, B.SUBJECT_TEACHER_PAYMENT
                              FROM   TB_LEC_JONG A
                              LEFT JOIN TB_LEC_MST B
                              ON A.MST_LECCODE = B.LECCODE
                              WHERE  B.LEC_TYPE_CHOICE = 'D'
                              AND  SUBSTR(A.LECCODE, 1, 1) <> 'Y') P1,
                             (SELECT ORDERNO, MGNTNO
                              FROM TB_ORDER_MGNT_NO
                              WHERE STATUSCODE IN ('DLV105', 'DLV230')
                              AND TO_CHAR(ISCONFIRM,'YYYYMMDD') <= #{searchDate}
                              GROUP BY ORDERNO, MGNTNO
                              HAVING COUNT(*) = 1) ZZ
                        WHERE OO.ORDERNO = OM.ORDERNO 
                        AND OO.ORDERNO = OA.ORDERNO 
                        AND OM.PTYPE IN ('J', 'N', 'P')
                        AND OM.ORDERNO = ZZ.ORDERNO
                        AND OM.MGNTNO = ZZ.MGNTNO
                        AND OM.PRICE > 0
                        AND OM.ORDERNO = MY.ORDERNO 
                        AND OM.MGNTNO = MY.PACKAGE_NO
                        AND OM.MGNTNO = P1.LECCODE  
                        AND OM.MGNTNO = TBM.LECCODE 
                        AND MY.LECTURE_NO = P1.MST_LECCODE  
                        AND MY.PACKAGE_NO = P1.LECCODE 
                        AND TO_CHAR(MY.END_DATE,'YYYYMMDD') > #{searchDate}
                        AND TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') <= #{searchDate}          
                        UNION
                        SELECT 
                              OO.USER_ID, OO.USER_NM, OA.PAYCODE,'Y' LEC_TYPE_CHOICE,
                              OO.ORDERNO, OM.MGNTNO,MY.SUBJECT_TITLE, LECTURE_NO,'' LEC_TITLE, 
                              MY.SUBJECT_TEACHER, TO_CHAR(OM.ISCONFIRM,'YYYY-MM-DD') ORDER_DATE,
                              OM.PRICE, OM.PRICE SUB_PRICE, MY.SUBJECT_PRICE, 
                              TM.PAYMENT, 
                              MY.START_DATE, MY.END_DATE, MY.PERIOD
                        FROM TB_ORDERS OO, TB_APPROVALS OA, TB_ORDER_MGNT_NO OM, TB_MA_MEMBER TM,  
                             (SELECT
                                   'wc_000' AS SUBJECT_TEACHER, 
                                   B.SUBJECT_TITLE, B.SUBJECT_PRICE, A.PACKAGE_NO, 
                                   A.START_DATE, (A.START_DATE+DECODE(B.SUBJECT_PERIOD, '6', 182, 364)) END_DATE, 
                                   DECODE(B.SUBJECT_PERIOD, '6', 183, 365) PERIOD,
                                   A.ORDERNO, '' LECTURE_NO
                              FROM  TB_ORDER_YEARPACKAGE A, TB_LEC_MST B 
                              WHERE A.PACKAGE_NO = B.LECCODE
                              AND A.SUBJECT_TEACHER = 'wc_001') MY,
                             (SELECT ORDERNO, MGNTNO
                              FROM TB_ORDER_MGNT_NO
                              WHERE STATUSCODE IN ('DLV105', 'DLV230')
                              AND TO_CHAR(ISCONFIRM,'YYYYMMDD') <= #{searchDate}
                              GROUP BY ORDERNO, MGNTNO
                              HAVING COUNT(*) = 1) ZZ
                        WHERE OO.ORDERNO = OA.ORDERNO
                        AND OO.ORDERNO = OM.ORDERNO
                        AND OM.ORDERNO = ZZ.ORDERNO
                        AND OM.MGNTNO = ZZ.MGNTNO
                        AND OM.PTYPE = 'Y'
                        AND OM.PRICE > 0
                        AND OM.ORDERNO = MY.ORDERNO 
                        AND OM.MGNTNO = MY.PACKAGE_NO 
                        AND TM.USER_ID = MY.SUBJECT_TEACHER
                        AND TO_CHAR(MY.END_DATE,'YYYYMMDD') > #{searchDate}
                        AND TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') <= #{searchDate}
                       ) T
                )
        ORDER BY USER_NM
	]]>
	</select>

	<select id="offAdvanceReceivedList" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT 
		      AA.ORDERNO, AA.USER_NM, AA.USER_ID,
		      DECODE(AA.ORDER_TYPE, 'ON', '온라인', 'OFF', '학원', 'DESK', '데스크') ORDER_TYPE,
		      DECODE(AA.PTYPE, 'D', '단과', 'J', '선택형종합반', 'N', '종합반', 'P', '패키지', 'Y', '프리패스') PTYPE,
		      AA.MGNTNO, BB.SUBJECT_TITLE,
		      AA.LECTURE_NO, AA.SUBJECT_TITLE LEC_TITLE,
		      (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = AA.SUBJECT_TEACHER) SUBJECT_TEACHER,
		      AA.PRICE, 
		      (AA.SUB_PRICE/AA.PRICE) SUB_AVR,
		      AA.SUB_PRICE,
		      AA.SUBJECT_TEACHER_PAYMENT TEACHER_PAYMENT,
		      (AA.SUB_PRICE * AA.SUBJECT_TEACHER_PAYMENT /100) TEACHER_PRICE,
		      AA.MIN_DATE,
		      AA.MAX_DATE,
		      AA.LEC_SCHEDULE,
		      AA.REST,
		      AA.REST_PRICE,
		      AA.USE_PRICE
		FROM (
		        SELECT A.ORDERNO, A.USER_NM, A.USER_ID, A.ORDER_TYPE,
		               B.PTYPE, B.MGNTNO, B.MGNTNO LECTURE_NO, D.SUBJECT_TITLE, D.SUBJECT_TEACHER,
		               D.SUBJECT_TEACHER_PAYMENT,
		               B.PRICE, NVL(B.PRICE, 0) SUB_PRICE,
		               (SELECT MIN(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MIN_DATE,
		               (SELECT MAX(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MAX_DATE,
		               D.LEC_SCHEDULE,
		               NVL(FN_GET_LEC_REST(D.LECCODE,  #{searchDate}), 0) REST,
		               NVL(B.PRICE - ROUND(B.PRICE * (FN_GET_LEC_REST(D.LECCODE, #{searchDate})/D.LEC_SCHEDULE)),0) USE_PRICE,
		               NVL(ROUND(B.PRICE * (FN_GET_LEC_REST(D.LECCODE, #{searchDate})/D.LEC_SCHEDULE)),0) REST_PRICE
		        FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_MST D, (SELECT A.ORDERNO, B.MGNTNO
		                                                                                            FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B
		                                                                                            WHERE A.ORDERNO = B.ORDERNO
		                                                                                            GROUP BY A.ORDERNO, B.MGNTNO
		                                                                                            HAVING COUNT(*) = 1) E
		        WHERE A.ORDERNO = B.ORDERNO
		        AND B.MGNTNO = D.LECCODE
		        AND D.LEC_TYPE_CHOICE = 'D'
		        AND B.STATUSCODE = 'DLV105'
		        AND B.ORDERNO = E.ORDERNO
		        AND B.MGNTNO = E.MGNTNO
		        AND FN_GET_LEC_REST(D.LECCODE, #{searchDate}) > 0
		        AND B.PRICE > 0
		        UNION
		        SELECT A.ORDERNO, A.USER_NM, A.USER_ID, A.ORDER_TYPE, 
		               B.PTYPE, B.MGNTNO, D.LECCODE, D.SUBJECT_TITLE, D.SUBJECT_TEACHER,
		               D.SUBJECT_TEACHER_PAYMENT,
		               B.PRICE,
		               PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(C.ORDERNO, C.PACKAGE_NO, C.LECTURE_NO, B.STATUSCODE) SUB_PRICE,
		               (SELECT MIN(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MIN_DATE,
		               (SELECT MAX(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MAX_DATE,
		               D.LEC_SCHEDULE, 
		               NVL(FN_GET_LEC_REST(D.LECCODE, #{searchDate}), 0) REST,
		               NVL(PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(C.ORDERNO, C.PACKAGE_NO, C.LECTURE_NO, B.STATUSCODE) - ROUND(PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(C.ORDERNO, C.PACKAGE_NO, C.LECTURE_NO, B.STATUSCODE) * (FN_GET_LEC_REST(D.LECCODE, #{searchDate})/D.LEC_SCHEDULE)),0) USE_PRICE,
		               NVL(ROUND(PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(C.ORDERNO, C.PACKAGE_NO, C.LECTURE_NO, B.STATUSCODE) * (FN_GET_LEC_REST(D.LECCODE, #{searchDate})/D.LEC_SCHEDULE)),0) REST_PRICE
		               FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_MYLECTURE C, TB_OFF_LEC_MST D, (SELECT A.ORDERNO, B.MGNTNO
		                                                                                            FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B
		                                                                                            WHERE A.ORDERNO = B.ORDERNO
		                                                                                            GROUP BY A.ORDERNO, B.MGNTNO
		                                                                                            HAVING COUNT(*) = 1) E
		        WHERE A.ORDERNO = B.ORDERNO
		        AND B.ORDERNO = C.ORDERNO
		        AND B.MGNTNO = C.PACKAGE_NO
		        AND B.PTYPE IN ('N', 'J', 'P')
		        AND B.STATUSCODE = 'DLV105'
		        AND C.LECTURE_NO = D.LECCODE
		        AND B.ORDERNO = E.ORDERNO
		        AND B.MGNTNO = E.MGNTNO
		        AND B.PRICE > 0
		) AA, TB_OFF_LEC_MST BB
		WHERE AA.MGNTNO = BB.LECCODE
		ORDER BY ORDERNO
	]]>
	</select>

	<select id="offAdvanceReceivedList_D" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
        SELECT 
              AA.ORDERNO, AA.USER_NM, AA.USER_ID,
              AA.PAYCODE, FN_GET_CODE_NM('PAYMENT_CODE', AA.PAYCODE) PAYNAME,
              FN_GET_CODE_NM('LEC_TYPE', AA.PTYPE) LEC_TYPE_CHOICE,
              DECODE(AA.ORDER_TYPE, 'ON', '온라인', 'OFF', '학원', 'DESK', '데스크') ORDER_TYPE,
              '단과'PTYPE,
              AA.MGNTNO, BB.SUBJECT_TITLE,
              AA.LECTURE_NO, AA.SUBJECT_TITLE LEC_TITLE,
              (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = AA.SUBJECT_TEACHER) SUBJECT_TEACHER,
              AA.PRICE, 
              (AA.SUB_PRICE/AA.PRICE) SUB_AVR,
              AA.SUB_PRICE,
              AA.SUBJECT_TEACHER_PAYMENT TEACHER_PAYMENT,
              (AA.SUB_PRICE * AA.SUBJECT_TEACHER_PAYMENT /100) TEACHER_PRICE,
              AA.MIN_DATE,
              AA.MAX_DATE,
              AA.LEC_SCHEDULE,
              AA.REST,
              NVL(AA.PRICE - ROUND(AA.PRICE * AA.REST/AA.LEC_SCHEDULE),0) USE_PRICE,
              NVL(ROUND(AA.PRICE * AA.REST/AA.LEC_SCHEDULE),0) REST_PRICE
        FROM (
                SELECT A.ORDERNO, A.USER_NM, A.USER_ID, A.ORDER_TYPE,
                       B.PTYPE, B.MGNTNO, O.PAYCODE, B.MGNTNO LECTURE_NO, D.SUBJECT_TITLE, D.SUBJECT_TEACHER,
                       D.SUBJECT_TEACHER_PAYMENT,
                       B.PRICE, NVL(B.PRICE, 0) SUB_PRICE,
                       F.MIN_DATE, F.MAX_DATE,
                       D.LEC_SCHEDULE,
                       NVL(FN_GET_LEC_REST(D.LECCODE, #{searchDate}), 0) REST
                FROM TB_OFF_ORDERS A, TB_OFF_APPROVALS O, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_MST D, 
                     (SELECT A.ORDERNO, B.MGNTNO
                      FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B
                      WHERE A.ORDERNO = B.ORDERNO
                      AND B.STATUSCODE IN ('DLV105', 'DLV230')
                      GROUP BY A.ORDERNO, B.MGNTNO
                      HAVING COUNT(*) = 1) E,
                     (SELECT LECCODE, MIN(LEC_DATE) MIN_DATE, MAX(LEC_DATE) MAX_DATE
                      FROM TB_OFF_LECTURE_DATE
                      GROUP BY LECCODE) F
                WHERE A.ORDERNO = B.ORDERNO
                AND A.ORDERNO = O.ORDERNO
                AND B.MGNTNO = D.LECCODE
                AND B.STATUSCODE = 'DLV105'
                AND B.ORDERNO = E.ORDERNO
                AND B.MGNTNO = E.MGNTNO
                AND D.LEC_TYPE_CHOICE = 'D'
                AND D.LECCODE = F.LECCODE
                AND #{searchDate} < F.MAX_DATE
                AND B.PRICE > 0
        ) AA, TB_OFF_LEC_MST BB
        WHERE AA.MGNTNO = BB.LECCODE
        ORDER BY ORDERNO
	]]>
	</select>

	<select id="offAdvanceReceivedList_P" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
        SELECT 
              AA.ORDERNO, AA.USER_NM, AA.USER_ID,
              AA.PAYCODE, FN_GET_CODE_NM('PAYMENT_CODE', AA.PAYCODE) PAYNAME,
              FN_GET_CODE_NM('LEC_TYPE', AA.PTYPE) LEC_TYPE_CHOICE,
              DECODE(AA.ORDER_TYPE, 'ON', '온라인', 'OFF', '학원', 'DESK', '데스크') ORDER_TYPE,
              DECODE(AA.PTYPE, 'D', '단과', 'J', '선택형종합반', 'N', '종합반', 'P', '패키지', 'Y', '프리패스') PTYPE,
              AA.MGNTNO, BB.SUBJECT_TITLE,
              AA.LECCODE, AA.SUBJECT_TITLE LEC_TITLE,
              (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = AA.SUBJECT_TEACHER) SUBJECT_TEACHER,
              AA.PRICE, 
              (AA.SUB_PRICE/AA.PRICE) SUB_AVR,
              AA.SUB_PRICE,
              AA.SUBJECT_TEACHER_PAYMENT TEACHER_PAYMENT,
              TRUNC(AA.SUB_PRICE * AA.SUBJECT_TEACHER_PAYMENT /100) TEACHER_PRICE,
              AA.MIN_DATE, AA.MAX_DATE,
              AA.LEC_SCHEDULE,
              AA.REST,
              NVL(PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.MGNTNO, AA.LECCODE, AA.STATUSCODE) - ROUND(PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.MGNTNO, AA.LECCODE, AA.STATUSCODE) * (AA.REST/AA.LEC_SCHEDULE)),0) USE_PRICE,
              NVL(ROUND(PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(AA.ORDERNO, AA.MGNTNO, AA.LECCODE, AA.STATUSCODE) * (AA.REST/AA.LEC_SCHEDULE)),0) REST_PRICE
        FROM (
                SELECT A.ORDERNO, A.USER_NM, A.USER_ID, A.ORDER_TYPE, 
                       B.PTYPE, B.MGNTNO, O.PAYCODE, B.STATUSCODE, D.LECCODE, D.SUBJECT_TITLE, D.SUBJECT_TEACHER,
                       D.SUBJECT_TEACHER_PAYMENT,
                       B.PRICE,
                       PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(C.ORDERNO, C.PACKAGE_NO, C.LECTURE_NO, B.STATUSCODE) SUB_PRICE,
                       F.MIN_DATE, F.MAX_DATE,
                       D.LEC_SCHEDULE, 
                       NVL(FN_GET_LEC_REST(D.LECCODE, #{searchDate}), 0) REST
                       FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_MYLECTURE C, TB_OFF_LEC_MST D, TB_OFF_APPROVALS O,
                       (SELECT A.ORDERNO, B.MGNTNO
                        FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B
                        WHERE A.ORDERNO = B.ORDERNO
                        AND B.PTYPE IN ('N', 'J', 'P')
                        AND B.STATUSCODE IN ('DLV105', 'DLV230')
                        GROUP BY A.ORDERNO, B.MGNTNO
                        HAVING COUNT(*) = 1) E,
                       (SELECT LECCODE, MIN(LEC_DATE) MIN_DATE, MAX(LEC_DATE) MAX_DATE
                        FROM TB_OFF_LECTURE_DATE
                        GROUP BY LECCODE) F                        
                WHERE A.ORDERNO = B.ORDERNO
                AND A.ORDERNO = O.ORDERNO
                AND A.USER_ID = C.USERID
                AND B.ORDERNO = C.ORDERNO
                AND B.MGNTNO = C.PACKAGE_NO
                AND B.PTYPE IN ('N', 'J', 'P')
                AND B.STATUSCODE = 'DLV105'
                AND C.LECTURE_NO = D.LECCODE
                AND B.ORDERNO = E.ORDERNO
                AND B.MGNTNO = E.MGNTNO
                AND #{searchDate} < F.MAX_DATE
                AND B.PRICE > 0
                AND C.LECTURE_NO = F.LECCODE
        ) AA, TB_OFF_LEC_MST BB
        WHERE AA.MGNTNO = BB.LECCODE
        ORDER BY AA.ORDERNO
	]]>
	</select>

	<select id="offLecSalesList" parameterType="hashMap" resultType="hashMap">
        SELECT A.ORDERNO, A.USER_NM, A.PHONE_NO, A.ORDER_TYPE,
               B.MGNTNO, D.SUBJECT_TITLE, B.STATUSCODE,
               NVL(D.SUBJECT_REAL_PRICE,0) SUBJECT_REAL_PRICE,
               NVL(B.PRICE, 0) PRICE,
               (SELECT MIN(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MIN_DATE,
               (SELECT MAX(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MAX_DATE,
               D.LEC_SCHEDULE,
               NVL(FN_GET_LEC_REST(D.LECCODE,  #{searchEndDate}), 0) REST,
               NVL(B.PRICE - ROUND(B.PRICE * (FN_GET_LEC_REST(D.LECCODE, #{searchEndDate})/D.LEC_SCHEDULE)),0) USE_PRICE,
               NVL(ROUND(B.PRICE * (FN_GET_LEC_REST(D.LECCODE, #{searchEndDate})/D.LEC_SCHEDULE)),0) REST_PRICE
        FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_MST D, (SELECT A.ORDERNO, B.MGNTNO, COUNT(B.MGNTNO) CNT
                                                                                            FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_MST D
                                                                                            WHERE A.ORDERNO = B.ORDERNO
                                                                                            AND B.MGNTNO = D.LECCODE
                                                                                            AND D.LEC_TYPE_CHOICE = 'D'
                                                                                            AND STATUSCODE IN ('DLV105', 'DLV230')
                                                                                            AND TO_CHAR(B.ISCONFIRM, 'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                                                                            GROUP BY A.ORDERNO, B.MGNTNO) E
        WHERE A.ORDERNO = B.ORDERNO
        AND B.MGNTNO = D.LECCODE
        AND D.LEC_TYPE_CHOICE = 'D'
        AND E.CNT = 1
        AND B.ORDERNO = E.ORDERNO
        AND B.MGNTNO = E.MGNTNO
        AND TO_CHAR(B.ISCONFIRM, 'YYYYMMDD') BETWEEN #{searchStartDate} AND#{searchEndDate}
        ORDER BY A.REG_DT, A.ORDERNO, B.MGNTNO, B.STATUSCODE
	</select>

	<select id="offLecSalesJongList" parameterType="hashMap" resultType="hashMap">
		SELECT AA.ORDERNO, AA.USER_NM, AA.PHONE_NO, AA.ORDER_TYPE, AA.LECCODE, AA.SUBJECT_TITLE, AA.SUBJECT_REAL_PRICE, 
		AA.PRICE, AA.MIN_DATE, AA.MAX_DATE, AA.LEC_SCHEDULE, AA.REST,
		NVL(AA.PRICE - ROUND(AA.PRICE * (FN_GET_LEC_REST(AA.LECCODE, #{searchEndDate})/AA.LEC_SCHEDULE)),0) USE_PRICE,
		NVL(ROUND(AA.PRICE * (FN_GET_LEC_REST(AA.LECCODE, #{searchEndDate})/AA.LEC_SCHEDULE)),0) REST_PRICE
		FROM (
		SELECT A.ORDERNO, A.USER_NM, A.PHONE_NO, A.ORDER_TYPE, D.LECCODE, D.SUBJECT_TITLE, D.SUBJECT_REAL_PRICE, 
		PKG_CART.FN_GET_OFF_PRICE_PRF_PACKAGE(C.ORDERNO, C.PACKAGE_NO, C.LECTURE_NO, B.STATUSCODE) PRICE,
		(SELECT MIN(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MIN_DATE,
		(SELECT MAX(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MAX_DATE,
		D.LEC_SCHEDULE, B.MGNTNO, B.STATUSCODE, B.ISCONFIRM,
		NVL(FN_GET_LEC_REST(D.LECCODE, #{searchEndDate}), 0) REST
		FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_MYLECTURE C, TB_OFF_LEC_MST D
		WHERE A.ORDERNO = B.ORDERNO
		AND B.ORDERNO = C.ORDERNO
		AND B.MGNTNO = C.PACKAGE_NO
		AND B.PTYPE IN ('N', 'J', 'P')
		AND C.LECTURE_NO = D.LECCODE
		AND B.STATUSCODE IN ('DLV105', 'DLV230')
		AND TO_CHAR(B.ISCONFIRM, 'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
		) AA
		ORDER BY AA.ISCONFIRM, AA.ORDERNO, AA.MGNTNO, AA.STATUSCODE
	</select>

	<select id="offLecSalesExcelList" parameterType="hashMap" resultType="hashMap">
        SELECT A.ORDERNO, A.USER_NM, A.PHONE_NO, A.ORDER_TYPE,
               B.MGNTNO, D.SUBJECT_TITLE, B.STATUSCODE,
               NVL(D.SUBJECT_REAL_PRICE,0) SUBJECT_REAL_PRICE,
               NVL(B.PRICE, 0) PRICE,
               (SELECT MIN(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MIN_DATE,
               (SELECT MAX(LEC_DATE) FROM TB_OFF_LECTURE_DATE WHERE LECCODE = D.LECCODE) MAX_DATE,
               D.LEC_SCHEDULE,
               NVL(FN_GET_LEC_REST(D.LECCODE,  #{searchEndDate}), 0) REST,
               NVL(B.PRICE - ROUND(B.PRICE * (FN_GET_LEC_REST(D.LECCODE, #{searchEndDate})/D.LEC_SCHEDULE)),0) USE_PRICE,
               NVL(ROUND(B.PRICE * (FN_GET_LEC_REST(D.LECCODE, #{searchEndDate})/D.LEC_SCHEDULE)),0) REST_PRICE
        FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_MST D, (SELECT A.ORDERNO, B.MGNTNO, COUNT(B.MGNTNO) CNT
                                                                                            FROM TB_OFF_ORDERS A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_LEC_MST D
                                                                                            WHERE A.ORDERNO = B.ORDERNO
                                                                                            AND B.MGNTNO = D.LECCODE
                                                                                            AND D.LEC_TYPE_CHOICE = 'D'
                                                                                            AND STATUSCODE IN ('DLV105', 'DLV230')
                                                                                            AND TO_CHAR(A.REG_DT, 'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                                                                                            GROUP BY A.ORDERNO, B.MGNTNO) E
        WHERE A.ORDERNO = B.ORDERNO
        AND B.MGNTNO = D.LECCODE
        AND D.LEC_TYPE_CHOICE = 'D'
        AND E.CNT = 1
        AND B.ORDERNO = E.ORDERNO
        AND B.MGNTNO = E.MGNTNO
        AND TO_CHAR(A.REG_DT, 'YYYYMMDD') BETWEEN #{searchStartDate} AND#{searchEndDate}
        ORDER BY A.REG_DT, A.ORDERNO, B.MGNTNO, B.STATUSCODE
	</select>

	<select id="dashBoardList1" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT 	*
		FROM		(
						SELECT NVL(LEC_TYPE_CHOICE,'A') LEC_TYPE_CHOICE,
							       LEC_TYPE_CHOICE_DESC,
							       SUM(TOTAL_PRICE) TOTAL_PRICE,
							       SUM(D_PRICE + J_PRICE + N_PRICE + P_PRICE) SUM_PRICE
						FROM   (
						        SELECT A.LEC_TYPE_CHOICE,
							               A.LEC_TYPE_CHOICE_DESC,
							               NVL(SUM(B.TOTAL_PRICE), 0) TOTAL_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'D',NVL(SUM(B.TOTAL_PRICE),0),0) D_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'J',NVL(SUM(B.TOTAL_PRICE),0),0) J_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'N',NVL(SUM(B.TOTAL_PRICE),0),0) N_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'P',NVL(SUM(B.TOTAL_PRICE),0),0) P_PRICE
						        FROM   (
							                SELECT 'D' LEC_TYPE_CHOICE, '단과반 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'J' LEC_TYPE_CHOICE, '종합반 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'N' LEC_TYPE_CHOICE, '선택형 종합반 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'P' LEC_TYPE_CHOICE, '패키지 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'R' LEC_TYPE_CHOICE, '환불' LEC_TYPE_CHOICE_DESC FROM DUAL
							                
						              ) A,
						              (
											SELECT 	SUBJECT_TEACHER,
												       	LEC_TYPE_CHOICE,
												       	SUM(TOTAL_PRICE) TOTAL_PRICE
											FROM   	(
												            SELECT  A.SUBJECT_TEACHER,
													                    A.LEC_TYPE_CHOICE,
													                    SUM(PRICE) 				AS TOTAL_PRICE
												            FROM   	(
													                    	SELECT  A.SUBJECT_TEACHER,
													                        		    A.USERID,
													                            		CASE A.P_PRICE WHEN 0 THEN A.PRICE
													                                    ELSE 	A.P_PRICE
													                            		END PRICE,
													                            		A.LEC_TYPE_CHOICE
													                    	FROM    	(
														                        		    SELECT	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
														                                			   	B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.REG_DT, B.USERID, B.USER_NM,
														                                   				B.PAYCODE, B.PRICE, 0 P_PRICE
														                            		FROM		(
															                                    			SELECT LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE
															                                    			FROM   TB_LEC_MST
															                                    			WHERE  LEC_TYPE_CHOICE = 'D'
															                                    			AND	   SUBJECT_TEACHER = #{searchUserId}
														                                   				) A,
															                                   			(
                                                                                                            SELECT BB.ISCONFIRM REG_DT, AA.USERID, DD.USER_NM,
                                                                                                                   BB.ORDERNO, BB.MGNTNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
                                                                                                            FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD
                                                                                                            WHERE AA.ORDERNO = BB.ORDERNO
                                                                                                            AND AA.PACKAGE_NO = BB.MGNTNO
                                                                                                            AND AA.ORDERNO = CC.ORDERNO
                                                                                                            AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) > 0
                                                                                                            AND BB.STATUSCODE = 'DLV105'
                                                                                                            AND AA.USERID = DD.USER_ID
                                                                                                            AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{startdate} AND #{enddate}
														                                   				) B
														                            		WHERE  A.LECCODE = B.MGNTNO
														                            		UNION
														                            		SELECT	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
														                                   				B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.REG_DT, B.USERID, B.USER_NM,
														                                   				B.PAYCODE, B.PRICE,
                                                                                                        PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(B.ORDERNO, B.PACKAGE_NO, B.LECTURE_NO, B.STATUSCODE) P_PRICE
														                            		FROM   	(
														                                    				SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
														                                           						(SELECT SUBJECT_TITLE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
														                                           						(SELECT LEC_TYPE_CHOICE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
														                                           						B.LECCODE JONG_LECCODE
														                                    				FROM   	TB_LEC_MST A, TB_LEC_JONG B
														                                    				WHERE  	A.LECCODE = B.MST_LECCODE
														                                    				AND    	A.LEC_TYPE_CHOICE = 'D'
														                                    				AND       SUBSTR(B.LECCODE, 1, 1) <> 'Y'
														                                    				AND    	A.SUBJECT_TEACHER = #{searchUserId}
														                                   				) A,
														                                   				(
                                                                                                            SELECT AA.REG_DT, AA.USERID, DD.USER_NM, AA.PACKAGE_NO, AA.LECTURE_NO,
                                                                                                                           BB.ORDERNO,NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
                                                                                                            FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD
                                                                                                            WHERE AA.ORDERNO = BB.ORDERNO
                                                                                                            AND AA.ORDERNO = CC.ORDERNO
                                                                                                            AND AA.PACKAGE_NO = BB.MGNTNO
                                                                                                            AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) > 0
                                                                                                            AND BB.STATUSCODE = 'DLV105'
                                                                                                            AND AA.USERID = DD.USER_ID
                                                                                                            AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{startdate} AND #{enddate}
														                                   				) B
														                            		WHERE  	A.LECCODE = B.LECTURE_NO
														                            		AND    	A.JONG_LECCODE = B.PACKAGE_NO
													                            		) A
																			) A
												            GROUP BY SUBJECT_TEACHER, LEC_TYPE_CHOICE
												            UNION ALL
												            SELECT  A.SUBJECT_TEACHER,
												            	        'R' 								AS LEC_TYPE_CHOICE,
												                    	SUM(PRICE) 				AS TOTAL_PRICE
												            FROM   	(
													                    	SELECT  A.SUBJECT_TEACHER,
													                        		    A.USERID,
													                            		CASE A.P_PRICE WHEN 0 THEN A.PRICE
													                                    ELSE 	A.P_PRICE
													                            		END PRICE
													                    	FROM		(
														                                	SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
														                                    		   	B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.CONFIRMDATE, B.USERID, B.USER_NM,
														                                       			B.PAYCODE, B.PRICE, 0 P_PRICE
														                                	FROM   	(
															                                        		SELECT	LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE
															                                        		FROM   	TB_LEC_MST
															                                        		WHERE  	LEC_TYPE_CHOICE = 'D'
															                                        		AND    	SUBJECT_TEACHER = #{searchUserId}
														                                       			) A,
														                                       			(
                                                                                                            SELECT AA.USERID, DD.USER_NM, BB.CONFIRMDATE, BB.ORDERNO, BB.MGNTNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
                                                                                                            FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD
                                                                                                            WHERE AA.ORDERNO = BB.ORDERNO
                                                                                                            AND AA.PACKAGE_NO = BB.MGNTNO
                                                                                                            AND AA.ORDERNO = CC.ORDERNO
                                                                                                            AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) <> 0
                                                                                                            AND BB.ISCANCEL = 2
                                                                                                            AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{startdate} AND #{enddate}
                                                                                                            AND AA.USERID = DD.USER_ID
														                                       			) B
														                                	WHERE  	A.LECCODE = B.MGNTNO
													                                		UNION
													                                		SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
													                                       				B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.CONFIRMDATE, B.USERID, B.USER_NM,
													                                       				B.PAYCODE, B.PRICE,
													                                       				ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
													                                		FROM		(
														                                        			SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
														                                               					(SELECT SUBJECT_TITLE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
														                                               					(SELECT LEC_TYPE_CHOICE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
														                                               					B.LECCODE JONG_LECCODE
														                                        			FROM   TB_LEC_MST A, TB_LEC_JONG B
														                                        			WHERE  A.LECCODE = B.MST_LECCODE
														                                        			AND    A.LEC_TYPE_CHOICE = 'D'
														                                        			AND    SUBSTR(B.LECCODE, 1, 1) <> 'Y'
														                                        			AND    A.SUBJECT_TEACHER = #{searchUserId}
													                                       				) A,
													                                       				(
                                                                                                            SELECT AA.USERID, DD.USER_NM, AA.PACKAGE_NO, AA.LECTURE_NO,
                                                                                                                   BB.CONFIRMDATE, BB.ORDERNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
                                                                                                            FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO  BB, TB_APPROVALS CC, TB_MA_MEMBER DD
                                                                                                            WHERE AA.ORDERNO = BB.ORDERNO
                                                                                                            AND AA.ORDERNO = CC.ORDERNO
                                                                                                            AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{startdate} AND #{enddate}
                                                                                                            AND BB.ISCANCEL = 2
                                                                                                            AND AA.USERID = DD.USER_ID
													                                       				) B
													                                		WHERE  	A.LECCODE 			= B.LECTURE_NO
													                                		AND    	A.JONG_LECCODE = B.PACKAGE_NO
													                                		UNION ALL
													                                		SELECT 	A.LECCODE, B.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
													                                       				B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.CONFIRMDATE, B.USERID, B.USER_NM,
													                                       				B.PAYCODE, B.PRICE,
													                                       				ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
													                                		FROM		(
														                                        			SELECT DISTINCT	B.LECCODE,
														                                               					(SELECT SUBJECT_TITLE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
														                                               					(SELECT LEC_TYPE_CHOICE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
														                                               					B.LECCODE JONG_LECCODE
														                                        			FROM   TB_LEC_JONG B
														                                        			WHERE  0=0
														                                        			AND    SUBSTR(B.LECCODE, 1, 1) = 'Y'
													                                       				) A,
													                                       				(
                                                                                                            SELECT AA.USERID, DD.USER_NM, AA.PACKAGE_NO, '' LECTURE_NO,
                                                                                                                   BB.CONFIRMDATE, BB.ORDERNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE, AA.SUBJECT_TEACHER
                                                                                                            FROM TB_MYLECTURE_YEAR AA, TB_ORDER_MGNT_NO  BB, TB_APPROVALS CC, TB_MA_MEMBER DD
                                                                                                            WHERE AA.ORDERNO = BB.ORDERNO
                                                                                                            AND AA.ORDERNO = CC.ORDERNO
                                                                                                            AND TO_CHAR(BB.ISCONFIRM,'YYYYMMDD') BETWEEN #{startdate} AND #{enddate}
                                                                                                            AND BB.ISCANCEL = 2
                                                                                                            AND AA.USERID = DD.USER_ID
														                                        			AND AA.SUBJECT_TEACHER = #{searchUserId}
													                                       				) B
													                                		WHERE  	0=0
													                                		AND    	A.JONG_LECCODE = B.PACKAGE_NO
													                            		) A
												                   		) A
												            GROUP BY SUBJECT_TEACHER
											        	) A
											GROUP BY SUBJECT_TEACHER, LEC_TYPE_CHOICE
						              ) B
						        WHERE A.LEC_TYPE_CHOICE = B.LEC_TYPE_CHOICE(+)
						        GROUP BY A.LEC_TYPE_CHOICE, A.LEC_TYPE_CHOICE_DESC
						)
						GROUP BY  GROUPING SETS((LEC_TYPE_CHOICE, LEC_TYPE_CHOICE_DESC),())
					)
		ORDER BY LEC_TYPE_CHOICE
	]]>
	</select>
		
	<select id="dashBoardList2" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT 	NVL(NAME,'총 수강인원') NAME,
		       		SUM(USER_COUNT) USER_COUNT
		FROM   	(
		        		SELECT 	(SELECT CODE_NM FROM TB_BA_CONFIG_CD WHERE SYS_CD = 'LEC_FORM' AND CODE_VAL = A.LEC_DIV) ||'-'|| A.NAME NAME,
		               				NVL(B.USER_COUNT,0) USER_COUNT
		        		FROM   	TB_LEARNING_FORM_INFO A,
		               				(
		                				SELECT	A.LEC_TYPE_CHOICE,
		                       						A.LEARNING_CD,
		                       						COUNT(B.USERID) USER_COUNT
		                				FROM   	(
		                        						SELECT 	LECCODE, LEC_TYPE_CHOICE, LEARNING_CD
		                        						FROM   	TB_LEC_MST
		                        						WHERE  	LEC_TYPE_CHOICE = 'D'
		                        						AND    	SUBJECT_TEACHER = #{searchUserId}
		                       						) A,
		                       						(
		                        						SELECT 	A.ORDERNO, A.USERID, B.MGNTNO
		                        						FROM   	(
			                                							SELECT ORDERNO, PACKAGE_NO, USERID
			                                							FROM   TB_MYLECTURE
			                                							WHERE TO_CHAR(REG_DT,'YYYYMMDD') BETWEEN #{startdate} AND #{enddate}
		                               								) A,
									                               	(
		                    								            SELECT 	A.ORDERNO, A.MGNTNO
		                                								FROM   	TB_ORDER_MGNT_NO A,
		                                       										(
		                                        										SELECT ORDERNO, MGNTNO
		                                        										FROM   TB_ORDER_MGNT_NO
		                                        										WHERE   NVL(DECODE(GIFT_YN, 'Y', 0, PRICE), 0) > 0
		                                        										GROUP BY ORDERNO, MGNTNO
		                                        										HAVING COUNT(*) = 1
		                                       										) B
		                                								WHERE  A.ORDERNO = B.ORDERNO
		                                								AND    A.MGNTNO  = B.MGNTNO
		                                								AND    A.STATUSCODE = 'DLV105'
						                               				) B
						                        		WHERE  A.ORDERNO     = B.ORDERNO
						                        		AND    A.PACKAGE_NO  = B.MGNTNO
						                       		) B
		                				WHERE  A.LECCODE = B.MGNTNO
		                				GROUP BY A.LEC_TYPE_CHOICE, A.LEARNING_CD
		             				) B
        				WHERE  A.CODE = B.LEARNING_CD(+)
		        		AND    A.LEC_DIV = 'LEC_A'
		        		UNION ALL
		        		SELECT 	(SELECT CODE_NM FROM TB_BA_CONFIG_CD WHERE SYS_CD = 'LEC_FORM' AND CODE_VAL = DECODE(B.LEC_TYPE_CHOICE,'N','LEC_D','J','LEC_B','LEC_C','P')) ||'-'|| A.NAME,
		               				NVL(B.USER_COUNT,0) USER_COUNT
		        		FROM   	TB_LEARNING_FORM_INFO A,
		               				(
		                				SELECT 	A.LEC_TYPE_CHOICE,
		                       						A.LEARNING_CD LEARNING_CD,
		                       						COUNT(B.USERID) USER_COUNT
		                				FROM   	(
		                        						SELECT 	A.LECCODE,
		                               								(SELECT LEC_TYPE_CHOICE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
		                               								B.LECCODE JONG_LECCODE,
		                               								A.LEARNING_CD
		                        						FROM   	TB_LEC_MST A, TB_LEC_JONG B
		                        						WHERE  	A.LECCODE = B.MST_LECCODE
		                        						AND    	A.LEC_TYPE_CHOICE = 'D'
		                        						AND    	A.SUBJECT_TEACHER = #{searchUserId}
		                       						) A,
		                       						(
		                        						SELECT 	A.LECTURE_NO, A.PACKAGE_NO, A.USERID
		                        						FROM   	(
		                                								SELECT	ORDERNO, PACKAGE_NO, USERID, LECTURE_NO
		                                								FROM   	TB_MYLECTURE
		                                								WHERE TO_CHAR(REG_DT,'YYYYMMDD') BETWEEN #{startdate} AND #{enddate}
		                               								) A,
		                               								(
		                                								SELECT 	A.ORDERNO, A.MGNTNO
		                                								FROM   	TB_ORDER_MGNT_NO A,
		                                       										(
		                                        										SELECT 	ORDERNO, MGNTNO
		                                        										FROM   	TB_ORDER_MGNT_NO
		                                        										WHERE  	 NVL(DECODE(GIFT_YN, 'Y', 0, PRICE), 0) > 0
		                                        										GROUP BY ORDERNO, MGNTNO
		                                        										HAVING COUNT(*) = 1
		                                       										) B
		                                								WHERE  A.ORDERNO = B.ORDERNO
		                                								AND    A.MGNTNO  = B.MGNTNO
		                                								AND    A.STATUSCODE = 'DLV105'
		                               								) B
		                        						WHERE  A.ORDERNO     = B.ORDERNO
		                        						AND    A.PACKAGE_NO  = B.MGNTNO
		                       						) B
		                				WHERE  A.LECCODE = B.LECTURE_NO
		                				AND    A.JONG_LECCODE = B.PACKAGE_NO
		                				GROUP BY A.LEC_TYPE_CHOICE, A.LEARNING_CD
		               				) B
		        		WHERE  A.CODE = B.LEARNING_CD(+)
		        		AND    A.LEC_DIV != 'LEC_A'
		       		)
		GROUP BY  GROUPING SETS((NAME),())
	]]>
	</select>
	
	<select id="dashBoardList3" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT ${sqlMonth1}
		FROM (
					${sqlMonth2}
		     	) A,
		     	(
            		SELECT  A.SUBJECT_TEACHER,
                    			A.REG_DT,
                    			SUM(PRICE) TOTAL_PRICE
            		FROM   	(
                    				SELECT  A.SUBJECT_TEACHER,
                            					TO_CHAR(A.REG_DT,'YYYYMM') REG_DT,
                            					CASE A.P_PRICE WHEN 0 THEN A.PRICE
                                           		ELSE A.P_PRICE
                            					END PRICE
                    				FROM    (
                            						SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                   								B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.REG_DT, B.USERID, B.USER_NM,
                                   								B.PAYCODE, B.PRICE, 0 P_PRICE
                            						FROM   	(
                                    								SELECT 	LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE
                                    								FROM   	TB_LEC_MST
                                    								WHERE  	LEC_TYPE_CHOICE = 'D'
                                    								AND    	SUBJECT_TEACHER = #{searchUserId}
                                   								) A,
                                   								(
                                    								SELECT BB.ISCONFIRM REG_DT, AA.USERID, DD.USER_NM,
                                           									  BB.ORDERNO, BB.MGNTNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
                                    								FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD
                                    								WHERE AA.ORDERNO = BB.ORDERNO
                                    								AND AA.PACKAGE_NO = BB.MGNTNO
                                    								AND AA.ORDERNO = CC.ORDERNO
                                    								AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) > 0
                                    								AND BB.STATUSCODE = 'DLV105'
                                            						AND AA.USERID = DD.USER_ID
                                            						AND TO_CHAR(BB.ISCONFIRM,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
                                   								) B
                            						WHERE  	A.LECCODE = B.MGNTNO
                            						UNION
                            						SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                   								B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.REG_DT, B.USERID, B.USER_NM,
                                   								B.PAYCODE, B.PRICE,
                                   								PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(B.ORDERNO, B.PACKAGE_NO, B.LECTURE_NO, B.STATUSCODE) P_PRICE
                            						FROM   	(
                                    								SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
                                           										(SELECT SUBJECT_TITLE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
                                           										(SELECT LEC_TYPE_CHOICE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
                                           										B.LECCODE JONG_LECCODE
                                    								FROM   	TB_LEC_MST A, TB_LEC_JONG B
                                    								WHERE  A.LECCODE = B.MST_LECCODE
                                    								AND    A.LEC_TYPE_CHOICE = 'D'
                                    								AND    A.SUBJECT_TEACHER = #{searchUserId}
                                   								) A,
                                   								(
                                    								SELECT BB.ISCONFIRM REG_DT, AA.USERID, DD.USER_NM, AA.PACKAGE_NO, AA.LECTURE_NO,
                                           									  BB.ORDERNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
                                    								FROM TB_MYLECTURE AA,  TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, (SELECT ORDERNO, MGNTNO
                                                                                                 FROM   TB_ORDER_MGNT_NO
                                                                                                 GROUP BY ORDERNO, MGNTNO
                                                                                                 HAVING COUNT(*) = 1) EE
                                    								WHERE AA.ORDERNO = BB.ORDERNO
                                    								AND AA.ORDERNO = CC.ORDERNO
                                    								AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) > 0
                                    								AND BB.STATUSCODE = 'DLV105'
                                            						AND AA.USERID = DD.USER_ID
                                            						AND TO_CHAR(BB.ISCONFIRM,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
																	AND BB.ORDERNO = EE.ORDERNO
																	AND BB.MGNTNO = EE.MGNTNO
                                   								) B
                            						WHERE  A.LECCODE = B.LECTURE_NO
                            						AND    A.JONG_LECCODE = B.PACKAGE_NO
                            					) A
                   				) A
            		GROUP BY SUBJECT_TEACHER, REG_DT
            		UNION ALL
            		SELECT  A.SUBJECT_TEACHER,
                    			A.CONFIRMDATE REG_DT,
                    			SUM(PRICE) TOTAL_PRICE
            		FROM   	(
                    				SELECT 	A.SUBJECT_TEACHER,
                            					TO_CHAR(A.CONFIRMDATE,'YYYYMM') CONFIRMDATE,
                            					CASE A.P_PRICE WHEN 0 THEN A.PRICE
                                           		ELSE A.P_PRICE
                            					END PRICE
                    				FROM    (
                                					SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                       							B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.CONFIRMDATE, B.USERID, B.USER_NM,
                                       							B.PAYCODE, B.PRICE, 0 P_PRICE
                                					FROM   	(
                                        							SELECT LECCODE, SUBJECT_TEACHER, SUBJECT_TITLE, LEC_TYPE_CHOICE
                                        							FROM   TB_LEC_MST
                                        							WHERE  LEC_TYPE_CHOICE = 'D'
                                        							AND    SUBJECT_TEACHER = #{searchUserId}
                                     							) A,
                                     							(
                                      							SELECT AA.USERID, DD.USER_NM,
                                             							  BB.ISCONFIRM CONFIRMDATE, BB.ORDERNO, BB.MGNTNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
                                      							FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD
                                      							WHERE AA.ORDERNO = BB.ORDERNO
                                      							AND AA.PACKAGE_NO = BB.MGNTNO
                                      							AND AA.ORDERNO = CC.ORDERNO
                                      							AND TO_CHAR(BB.ISCONFIRM,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
                                      							AND NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) <> 0
                                      							AND BB.ISCANCEL = 2
                               									AND AA.USERID = DD.USER_ID
                                     							) B
                                					WHERE  A.LECCODE = B.MGNTNO
                                					UNION
                                					SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                     							B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, B.CONFIRMDATE, B.USERID, B.USER_NM,
                                     							B.PAYCODE, B.PRICE,
                                     							PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(B.ORDERNO, B.PACKAGE_NO, B.LECTURE_NO, B.STATUSCODE) P_PRICE
                                					FROM   	(
                                        							SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
                                               									(SELECT SUBJECT_TITLE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
                                               									(SELECT LEC_TYPE_CHOICE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
                                               									B.LECCODE JONG_LECCODE
                                        							FROM   	TB_LEC_MST A, TB_LEC_JONG B
                                        							WHERE  A.LECCODE = B.MST_LECCODE
                                        							AND    A.LEC_TYPE_CHOICE = 'D'
                                        							AND    A.SUBJECT_TEACHER = #{searchUserId}
                                   							) A,
                                   							(
                                    								SELECT AA.USERID, DD.USER_NM, AA.PACKAGE_NO, AA.LECTURE_NO,
                                           									BB.ISCONFIRM CONFIRMDATE, BB.ORDERNO, NVL(DECODE(BB.GIFT_YN, 'Y', 0, BB.PRICE), 0) PRICE, BB.STATUSCODE, BB.WMV_PMP, BB.DISCOUNTPER, CC.PAYCODE
	                                     							FROM TB_MYLECTURE AA, TB_ORDER_MGNT_NO BB, TB_APPROVALS CC, TB_MA_MEMBER DD, (SELECT ORDERNO, MGNTNO
                                                                                                 FROM   TB_ORDER_MGNT_NO
                                                                                                 GROUP BY ORDERNO, MGNTNO
                                                                                                 HAVING COUNT(*) = 1) EE
	                                            					WHERE AA.ORDERNO = BB.ORDERNO
	         							                            AND AA.ORDERNO = CC.ORDERNO
	                                     							AND TO_CHAR(BB.ISCONFIRM,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
	                                     							AND BB.ISCANCEL = 2
	                                     							AND AA.USERID = DD.USER_ID
																	AND BB.ORDERNO = EE.ORDERNO
																	AND BB.MGNTNO = EE.MGNTNO
                                   							) B
                                					WHERE  A.LECCODE = B.LECTURE_NO
                                					AND    A.JONG_LECCODE = B.PACKAGE_NO
                            					) A
                   					) A
            		GROUP BY SUBJECT_TEACHER, CONFIRMDATE
		       ) B
		WHERE A.YYYYMM = B.REG_DT(+)
	]]>
	</select>
	
	<select id="dashBoardList4" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT AA.*, BB.CODE_NM FROM (
			  SELECT NVL (CODE_VAL, '총 수강인원') CODE_VAL, SUM (USER_COUNT) USER_COUNT
			    FROM (SELECT    A.CODE_NM,
			                 NVL (B.USER_COUNT, 0) USER_COUNT, A.CODE_VAL
			            FROM (SELECT *   FROM TB_BA_CONFIG_CD WHERE SYS_CD = 'AREA') A,
			                 (  SELECT A.LEC_TYPE_CHOICE,
			                           COUNT (B.USERID) USER_COUNT, B.U_AREA
			                      FROM (SELECT LECCODE, LEC_TYPE_CHOICE, LEARNING_CD
			                              FROM TB_LEC_MST
			                             WHERE     LEC_TYPE_CHOICE = 'D'
			                                   AND SUBJECT_TEACHER = #{searchUserId}) A,
			                           (SELECT A.ORDERNO, A.USERID, B.MGNTNO, A.U_AREA
			                              FROM (SELECT ORDERNO, PACKAGE_NO, A.USERID, MA.U_AREA
			                                      FROM TB_MYLECTURE A
			                                      LEFT OUTER JOIN TB_MA_MEMBER MA ON A.USERID = MA.USER_ID
			                                     WHERE TO_CHAR (A.REG_DT, 'YYYYMM') = #{searchDate}) A,
			                                   (SELECT A.ORDERNO, A.MGNTNO
			                                      FROM TB_ORDER_MGNT_NO A,
			                                           (  SELECT ORDERNO, MGNTNO
			                                                FROM TB_ORDER_MGNT_NO
			                                               WHERE NVL(DECODE(GIFT_YN, 'Y', 0, PRICE), 0)  > 0
			                                            GROUP BY ORDERNO, MGNTNO
			                                              HAVING COUNT (*) = 1) B
			                                     WHERE     A.ORDERNO = B.ORDERNO
			                                           AND A.MGNTNO = B.MGNTNO
			                                           AND A.STATUSCODE = 'DLV105') B
			                             WHERE     A.ORDERNO = B.ORDERNO
			                                   AND A.PACKAGE_NO = B.MGNTNO) B
			                     WHERE A.LECCODE = B.MGNTNO
			                  GROUP BY A.LEC_TYPE_CHOICE, B.U_AREA) B
			           WHERE A.CODE_CD = B.U_AREA(+) 
			          UNION ALL
			          SELECT    A.CODE_NM,
			                 NVL (B.USER_COUNT, 0) USER_COUNT, A.CODE_VAL
			            FROM (SELECT *
			                       FROM TB_BA_CONFIG_CD
			                      WHERE SYS_CD = 'AREA') A,
			                 (  SELECT A.LEC_TYPE_CHOICE,
			                           COUNT (B.USERID) USER_COUNT,
			                           B.U_AREA
			                      FROM (SELECT A.LECCODE,
			                                   (SELECT LEC_TYPE_CHOICE FROM TB_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
			                                   B.LECCODE JONG_LECCODE
			                              FROM TB_LEC_MST A, TB_LEC_JONG B
			                             WHERE     A.LECCODE = B.MST_LECCODE
			                                   AND A.LEC_TYPE_CHOICE = 'D'
			                                   AND A.SUBJECT_TEACHER = #{searchUserId}) A,
			                           (SELECT A.LECTURE_NO, A.PACKAGE_NO, A.USERID, A.U_AREA
			                              FROM (SELECT ORDERNO, PACKAGE_NO, A.USERID,  LECTURE_NO, MA.U_AREA
			                                      FROM TB_MYLECTURE A
			                                      LEFT OUTER JOIN TB_MA_MEMBER MA ON A.USERID = MA.USER_ID
			                                     WHERE TO_CHAR (A.REG_DT, 'YYYYMM') = #{searchDate}) A,
			                                   (SELECT A.ORDERNO, A.MGNTNO
			                                      FROM TB_ORDER_MGNT_NO A,
			                                           (  SELECT ORDERNO, MGNTNO
			                                                FROM TB_ORDER_MGNT_NO
			                                               WHERE NVL(DECODE(GIFT_YN, 'Y', 0, PRICE), 0) > 0
			                                            GROUP BY ORDERNO, MGNTNO
			                                              HAVING COUNT (*) = 1) B
			                                     WHERE     A.ORDERNO = B.ORDERNO
			                                           AND A.MGNTNO = B.MGNTNO
			                                           AND A.STATUSCODE = 'DLV105') B
			                             WHERE     A.ORDERNO = B.ORDERNO
			                                   AND A.PACKAGE_NO = B.MGNTNO) B
			                     WHERE     A.LECCODE = B.LECTURE_NO
			                           AND A.JONG_LECCODE = B.PACKAGE_NO
			                  GROUP BY A.LEC_TYPE_CHOICE, B.U_AREA) B
			           WHERE A.CODE_CD = B.U_AREA(+) )
			GROUP BY GROUPING SETS ( (CODE_VAL), ())
			) AA 
			LEFT OUTER JOIN TB_BA_CONFIG_CD BB ON SYS_CD = 'AREA' AND  AA.CODE_VAL = BB.CODE_VAL

	]]>
	</select>
	
	
	<select id="dashBoardOffList1" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT 	*
		FROM		(
						SELECT NVL(LEC_TYPE_CHOICE,'A') LEC_TYPE_CHOICE,
							       LEC_TYPE_CHOICE_DESC,
							       SUM(TOTAL_PRICE) TOTAL_PRICE,
							       SUM(D_PRICE + J_PRICE + N_PRICE + P_PRICE) SUM_PRICE
						FROM   (
						        SELECT A.LEC_TYPE_CHOICE,
							               A.LEC_TYPE_CHOICE_DESC,
							               NVL(SUM(B.TOTAL_PRICE), 0) TOTAL_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'D',NVL(SUM(B.TOTAL_PRICE),0),0) D_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'J',NVL(SUM(B.TOTAL_PRICE),0),0) J_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'N',NVL(SUM(B.TOTAL_PRICE),0),0) N_PRICE,
							               DECODE(A.LEC_TYPE_CHOICE,'P',NVL(SUM(B.TOTAL_PRICE),0),0) P_PRICE
						        FROM   (
							                SELECT 'D' LEC_TYPE_CHOICE, '단과반 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'J' LEC_TYPE_CHOICE, '종합반 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'N' LEC_TYPE_CHOICE, '선택형 종합반 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'P' LEC_TYPE_CHOICE, '패키지 매출' LEC_TYPE_CHOICE_DESC FROM DUAL
							                UNION ALL
							                SELECT 'R' LEC_TYPE_CHOICE, '환불' LEC_TYPE_CHOICE_DESC FROM DUAL
						              ) A,
						              (
											SELECT 	SUBJECT_TEACHER,
												       	LEC_TYPE_CHOICE,
												       	SUM(TOTAL_PRICE) TOTAL_PRICE
											FROM   	(
												            SELECT  A.SUBJECT_TEACHER,
													                    A.LEC_TYPE_CHOICE,
													                    SUM(PRICE) 				AS TOTAL_PRICE
												            FROM   	(
													                    	SELECT  A.SUBJECT_TEACHER,
													                        		    A.USERID,
													                            		CASE A.P_PRICE WHEN 0 THEN A.PRICE
													                                    ELSE 	A.P_PRICE
													                            		END PRICE,
													                            		A.LEC_TYPE_CHOICE
													                    	FROM    	(
														                        		    SELECT	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
														                                			   	B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM,
														                                   				B.PAYCODE, B.PRICE, 0 P_PRICE
														                            		FROM		(
															                                    			SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, B.LEC_DATE
															                                    			FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMM')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
															                                    			WHERE  	A.LECCODE = B.LECCODE
															                                    			AND      	A.LEC_TYPE_CHOICE = 'D'
															                                    			AND	   	A.SUBJECT_TEACHER = #{searchUserId}
															                                    			AND		B.LEC_DATE = #{searchDate}
														                                   				) A,
															                                   			(
															                                    			SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM,
															                                           					B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
															                                    			FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
														                                    				WHERE  	A.ORDERNO     	= B.ORDERNO
														                                    				AND    	A.PACKAGE_NO  	= B.MGNTNO
														                                    				AND    	A.ORDERNO     	= C.ORDERNO
														                                    				AND    	B.PRICE 				> 0
														                                    				AND    	B.STATUSCODE 	= 'DLV105'
														                                   				) B
														                            		WHERE  A.LECCODE = B.MGNTNO
														                            		UNION
														                            		SELECT	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
														                                   				B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM,
														                                   				B.PAYCODE, B.PRICE,
														                                   				ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
														                            		FROM   	(
														                                    				SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
														                                           						(SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
														                                           						(SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
														                                           						B.LECCODE JONG_LECCODE,
														                                           						C.LEC_DATE
														                                    				FROM   	TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMM')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
														                                    				WHERE  	A.LECCODE = B.MST_LECCODE
														                                    				AND     	A.LECCODE = C.LECCODE
														                                    				AND    	A.LEC_TYPE_CHOICE = 'D'
														                                    				AND    	A.SUBJECT_TEACHER = #{searchUserId}
														                                    				AND   	C.LEC_DATE = #{searchDate}
														                                   				) A,
														                                   				(
														                                    				SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.PACKAGE_NO, A.LECTURE_NO,
														                                           						B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
														                                    				FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
														                                    				WHERE  	A.ORDERNO     = B.ORDERNO
														                                    				AND    	A.ORDERNO     = C.ORDERNO
														                                    				AND    	B.PRICE > 0
														                                    				AND    	B.STATUSCODE = 'DLV105'
														                                   				) B
														                            		WHERE  	A.LECCODE = B.LECTURE_NO
														                            		AND    	A.JONG_LECCODE = B.PACKAGE_NO
													                            		) A
																			) A
												            GROUP BY SUBJECT_TEACHER, LEC_TYPE_CHOICE
												            UNION ALL
												            SELECT  A.SUBJECT_TEACHER,
												            	        'R' 								AS LEC_TYPE_CHOICE,
												                    	SUM(PRICE) 				AS TOTAL_PRICE
												            FROM   	(
													                    	SELECT  A.SUBJECT_TEACHER,
													                        		    A.USERID,
													                            		CASE A.P_PRICE WHEN 0 THEN A.PRICE
													                                    ELSE 	A.P_PRICE
													                            		END PRICE
													                    	FROM		(
														                                	SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
														                                    		   	B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID, B.USER_NM,
														                                       			B.PAYCODE, B.PRICE, 0 P_PRICE
														                                	FROM   	(
															                                        		SELECT	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, B.LEC_DATE
															                                        		FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMM')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
															                                        		WHERE  	A.LECCODE = B.LECCODE
															                                        		AND      	A.LEC_TYPE_CHOICE = 'D'
															                                        		AND    	A.SUBJECT_TEACHER = #{searchUserId}
															                                        		AND		B.LEC_DATE = #{searchDate}
														                                       			) A,
														                                       			(
														                                        			SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM,
														                                               					B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
														                                        			FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
														                                        			WHERE  A.ORDERNO     = B.ORDERNO
														                                        			AND    A.PACKAGE_NO  = B.MGNTNO
														                                        			AND    A.ORDERNO     = C.ORDERNO
														                                        			AND    B.PRICE <> 0
														                                        			AND    B.ISCANCEL = 2
														                                       			) B
														                                	WHERE  	A.LECCODE = B.MGNTNO
													                                		UNION
													                                		SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
													                                       				B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID, B.USER_NM,
													                                       				B.PAYCODE, B.PRICE,
													                                       				ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
													                                		FROM		(
														                                        			SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
														                                               					(SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
														                                               					(SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
														                                               					B.LECCODE JONG_LECCODE,
														                                               					C.LEC_DATE
														                                        			FROM   TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMM')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
														                                        			WHERE  	A.LECCODE = B.MST_LECCODE
														                                        			AND     	A.LECCODE = C.LECCODE
														                                        			AND    	A.LEC_TYPE_CHOICE = 'D'
														                                        			AND    	A.SUBJECT_TEACHER = #{searchUserId}
														                                        			AND		C.LEC_DATE = #{searchDate}
													                                       				) A,
													                                       				(
													                                        				SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.PACKAGE_NO, A.LECTURE_NO,
													                                               						B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
													                                        				FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
													                                        				WHERE  	A.ORDERNO     = B.ORDERNO
													                                        				AND    	A.ORDERNO     = C.ORDERNO
													                                        				AND    	B.ISCANCEL = 2
													                                       				) B
													                                		WHERE  	A.LECCODE 			= B.LECTURE_NO
													                                		AND    	A.JONG_LECCODE = B.PACKAGE_NO
													                            		) A
												                   		) A
												            GROUP BY SUBJECT_TEACHER
											        	) A
											GROUP BY SUBJECT_TEACHER, LEC_TYPE_CHOICE
						              ) B
						        WHERE A.LEC_TYPE_CHOICE = B.LEC_TYPE_CHOICE(+)
						        GROUP BY A.LEC_TYPE_CHOICE, A.LEC_TYPE_CHOICE_DESC
						)
						GROUP BY  GROUPING SETS((LEC_TYPE_CHOICE, LEC_TYPE_CHOICE_DESC),())
					)
		ORDER BY LEC_TYPE_CHOICE
	]]>
	</select>

	<select id="dashBoardOffList2" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT 	NVL(NAME,'총 수강인원') NAME,
		       		SUM(USER_COUNT) USER_COUNT
		FROM   	(
		        		SELECT 	(SELECT CODE_NM FROM TB_BA_CONFIG_CD WHERE SYS_CD = 'LEC_FORM' AND CODE_VAL = A.LEC_DIV) ||'-'|| A.NAME NAME,
		               				NVL(B.USER_COUNT,0) USER_COUNT
		        		FROM   	TB_LEARNING_FORM_INFO A,
		               				(
		                				SELECT	A.LEC_TYPE_CHOICE,
		                       						A.LEARNING_CD,
		                       						COUNT(B.USERID) USER_COUNT
		                				FROM   	(
		                        						SELECT 	A.LECCODE, A.LEC_TYPE_CHOICE, A.LEARNING_CD
		                        						FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMM')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
		                        						WHERE  	A.LECCODE = B.LECCODE
		                        						AND		A.LEC_TYPE_CHOICE = 'D'
		                        						AND    	A.SUBJECT_TEACHER = #{searchUserId}
		                        						AND		B.LEC_DATE = #{searchDate}
		                       						) A,
		                       						(
		                        						SELECT 	A.ORDERNO, A.USERID, B.MGNTNO
		                        						FROM   	TB_OFF_MYLECTURE A,
									                               	(
		                    								            SELECT 	A.ORDERNO, A.MGNTNO
		                                								FROM   	TB_OFF_ORDER_MGNT_NO A,
		                                       										(
		                                        										SELECT ORDERNO, MGNTNO
		                                        										FROM   TB_OFF_ORDER_MGNT_NO
		                                        										WHERE  PRICE > -99999999
		                                        										GROUP BY ORDERNO, MGNTNO
		                                        										HAVING COUNT(*) = 1
		                                       										) B
		                                								WHERE  A.ORDERNO = B.ORDERNO
		                                								AND    A.MGNTNO  = B.MGNTNO
		                                								AND    A.STATUSCODE = 'DLV105'
						                               				) B
						                        		WHERE  A.ORDERNO     = B.ORDERNO
						                        		AND    A.PACKAGE_NO  = B.MGNTNO
						                       		) B
		                				WHERE  A.LECCODE = B.MGNTNO
		                				GROUP BY A.LEC_TYPE_CHOICE, A.LEARNING_CD
		             				) B
        				WHERE  A.CODE = B.LEARNING_CD(+)
		        		AND    A.LEC_DIV = 'LEC_A'
		        		UNION ALL
		        		SELECT 	(SELECT CODE_NM FROM TB_BA_CONFIG_CD WHERE SYS_CD = 'LEC_FORM' AND CODE_VAL = 'LEC_D') ||'-'|| A.NAME,
		               				NVL(B.USER_COUNT,0) USER_COUNT
		        		FROM   	TB_LEARNING_FORM_INFO A,
		               				(
		                				SELECT 	A.LEC_TYPE_CHOICE,
		                       						A.LEARNING_CD LEARNING_CD,
		                       						COUNT(B.USERID) USER_COUNT
		                				FROM   	(
		                        						SELECT 	A.LECCODE,
		                               								(SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
		                               								B.LECCODE JONG_LECCODE,
		                               								A.LEARNING_CD
		                        						FROM   	TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(TO_CHAR(LEC_DATE,'YYYYMM')) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
		                        						WHERE  	A.LECCODE = B.MST_LECCODE
		                        						AND		A.LECCODE = C.LECCODE
		                        						AND    	A.LEC_TYPE_CHOICE = 'D'
		                        						AND    	A.SUBJECT_TEACHER = #{searchUserId}
		                        						AND		C.LEC_DATE = #{searchDate}
		                       						) A,
		                       						(
		                        						SELECT 	A.LECTURE_NO, A.PACKAGE_NO, A.USERID
		                        						FROM   	TB_OFF_MYLECTURE A,
		                               								(
		                                								SELECT 	A.ORDERNO, A.MGNTNO
		                                								FROM   	TB_OFF_ORDER_MGNT_NO A,
		                                       										(
		                                        										SELECT 	ORDERNO, MGNTNO
		                                        										FROM   	TB_OFF_ORDER_MGNT_NO
		                                        										WHERE  	PRICE > -99999999
		                                        										GROUP BY ORDERNO, MGNTNO
		                                        										HAVING COUNT(*) = 1
		                                       										) B
		                                								WHERE  A.ORDERNO = B.ORDERNO
		                                								AND    A.MGNTNO  = B.MGNTNO
		                                								AND    A.STATUSCODE = 'DLV105'
		                               								) B
		                        						WHERE  A.ORDERNO     = B.ORDERNO
		                        						AND    A.PACKAGE_NO  = B.MGNTNO
		                       						) B
		                				WHERE  A.LECCODE = B.LECTURE_NO
		                				AND    A.JONG_LECCODE = B.PACKAGE_NO
		                				GROUP BY A.LEC_TYPE_CHOICE, A.LEARNING_CD
		               				) B
		        		WHERE  A.CODE = B.LEARNING_CD(+)
		            	AND    A.LEC_DIV = 'LEC_A'
		       		)
		GROUP BY  GROUPING SETS((NAME),())
	]]>
	</select>
	
	<select id="dashBoardOffList3" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
		SELECT ${sqlMonth1}
		FROM (
					${sqlMonth2}
		     	) A,
		     	(
            		SELECT  A.SUBJECT_TEACHER,
                    			A.REG_DT,
                    			SUM(PRICE) TOTAL_PRICE
            		FROM   	(
                    				SELECT  A.SUBJECT_TEACHER,
                            					TO_CHAR(A.REG_DT,'YYYYMM') REG_DT,
                            					CASE A.P_PRICE WHEN 0 THEN A.PRICE
                                           		ELSE A.P_PRICE
                            					END PRICE
                    				FROM    (
                            						SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                   								B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM,
                                   								B.PAYCODE, B.PRICE, 0 P_PRICE
                            						FROM   	(
                                    								SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, B.LEC_DATE
                                    								FROM   	TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
                                    								WHERE  	A.LECCODE = B.LECCODE
                                    								AND		A.LEC_TYPE_CHOICE = 'D'
                                    								AND    	A.SUBJECT_TEACHER = #{searchUserId}
                                    								AND		TO_CHAR(B.LEC_DATE,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
                                   								) A,
                                   								(
                                    								SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM,
                                           										B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                    								FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
                                    								WHERE  A.ORDERNO     = B.ORDERNO
                                    								AND    A.PACKAGE_NO  = B.MGNTNO
                                    								AND    A.ORDERNO     = C.ORDERNO
                                    								AND    B.PRICE > 0
                                    								AND    B.STATUSCODE = 'DLV105'
                                   								) B
                            						WHERE  	A.LECCODE = B.MGNTNO
                            						UNION
                            						SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                   								B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE REG_DT, B.USERID, B.USER_NM,
                                   								B.PAYCODE, B.PRICE,
                                   								ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
                            						FROM   	(
                                    								SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
                                           										(SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
                                           										(SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
                                           										B.LECCODE JONG_LECCODE,
                                           										C.LEC_DATE
                                    								FROM   	TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
                                    								WHERE  	A.LECCODE = B.MST_LECCODE
                                    								AND		A.LECCODE = C.LECCODE
                                    								AND    	A.LEC_TYPE_CHOICE = 'D'
                                    								AND    	A.SUBJECT_TEACHER = #{searchUserId}
                                    								AND		TO_CHAR(C.LEC_DATE,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
                                   								) A,
                                   								(
                                    								SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.PACKAGE_NO, A.LECTURE_NO,
                                           										B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                    								FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
                                    								WHERE  A.ORDERNO     = B.ORDERNO
                                    								AND    A.ORDERNO     = C.ORDERNO
                                    								AND    B.PRICE > 0
                                    								AND    B.STATUSCODE = 'DLV105'
                                   								) B
                            						WHERE  A.LECCODE = B.LECTURE_NO
                            						AND    A.JONG_LECCODE = B.PACKAGE_NO
                            					) A
                   				) A
            		GROUP BY SUBJECT_TEACHER, REG_DT
            		UNION ALL
            		SELECT  A.SUBJECT_TEACHER,
                    			A.CONFIRMDATE REG_DT,
                    			SUM(PRICE) TOTAL_PRICE
            		FROM   	(
                    				SELECT 	A.SUBJECT_TEACHER,
                            					TO_CHAR(A.CONFIRMDATE,'YYYYMM') CONFIRMDATE,
                            					CASE A.P_PRICE WHEN 0 THEN A.PRICE
                                           		ELSE A.P_PRICE
                            					END PRICE
                    				FROM    (
                                					SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                       							B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID, B.USER_NM,
                                       							B.PAYCODE, B.PRICE, 0 P_PRICE
                                					FROM   	(
                                        							SELECT A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE, B.LEC_DATE
                                        							FROM   TB_OFF_LEC_MST A, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) B
                                        							WHERE  	A.LECCODE = B.LECCODE
                                        							AND	   	A.LEC_TYPE_CHOICE = 'D'
                                        							AND      	A.SUBJECT_TEACHER = #{searchUserId}
                                        							AND		TO_CHAR(B.LEC_DATE,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
                                     							) A,
                                     							(
                                      							SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM,
                                             								B.ORDERNO, B.MGNTNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
                                      							FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
                                      							WHERE  A.ORDERNO     = B.ORDERNO
                                      							AND    A.PACKAGE_NO  = B.MGNTNO
                                      							AND    A.ORDERNO     = C.ORDERNO
                                      							AND    B.PRICE <> 0
                                      							AND    B.ISCANCEL = 2
                                     							) B
                                					WHERE  A.LECCODE = B.MGNTNO
                                					UNION
                                					SELECT 	A.LECCODE, A.SUBJECT_TEACHER, A.SUBJECT_TITLE, A.LEC_TYPE_CHOICE,
                                     							B.ORDERNO, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, A.LEC_DATE CONFIRMDATE, B.USERID, B.USER_NM,
                                     							B.PAYCODE, B.PRICE,
                                     							ROUND(B.PRICE/(SELECT COUNT(LECTURE_NO) FROM TB_OFF_MYLECTURE WHERE PACKAGE_NO = B.PACKAGE_NO AND ORDERNO = B.ORDERNO AND LECTURE_NO LIKE '%D%'),0) AS P_PRICE
                                					FROM   	(
                                        							SELECT 	A.LECCODE, A.SUBJECT_TEACHER,
                                               									(SELECT SUBJECT_TITLE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) SUBJECT_TITLE,
                                               									(SELECT LEC_TYPE_CHOICE FROM TB_OFF_LEC_MST WHERE LECCODE = B.LECCODE) LEC_TYPE_CHOICE,
                                               									B.LECCODE JONG_LECCODE,
                                               									C.LEC_DATE
                                        							FROM   	TB_OFF_LEC_MST A, TB_OFF_LEC_JONG B, (SELECT LECCODE, MIN(LEC_DATE) LEC_DATE FROM TB_OFF_LECTURE_DATE GROUP BY LECCODE) C
                                        							WHERE  	A.LECCODE = B.MST_LECCODE
                                        							AND     	A.LECCODE = C.LECCODE
                                        							AND    	A.LEC_TYPE_CHOICE = 'D'
                                        							AND    	A.SUBJECT_TEACHER = #{searchUserId}
                                        							AND		TO_CHAR(C.LEC_DATE,'YYYY') BETWEEN #{prevYear} AND #{currentYear}
                                   							) A,
                                   							(
                                    								SELECT 	A.USERID, (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = A.USERID) USER_NM, A.PACKAGE_NO, A.LECTURE_NO,
                                           									B.ORDERNO, B.PRICE, B.STATUSCODE, B.WMV_PMP, B.DISCOUNTPER, C.PAYCODE
	                                     							FROM   	TB_OFF_MYLECTURE A, TB_OFF_ORDER_MGNT_NO B, TB_OFF_APPROVALS C
	                                            					WHERE  A.ORDERNO     = B.ORDERNO
	         							                            AND    A.ORDERNO     = C.ORDERNO
	                                     							AND    B.ISCANCEL = 2
                                   							) B
                                					WHERE  A.LECCODE = B.LECTURE_NO
                                					AND    A.JONG_LECCODE = B.PACKAGE_NO
                            					) A
                   					) A
            		GROUP BY SUBJECT_TEACHER, CONFIRMDATE
		       ) B
		WHERE A.YYYYMM = B.REG_DT(+)
	]]>
	</select>
	
	<!-- 동영상매출내역-->
	<select id="MovieSalesD" parameterType="hashMap" resultType="hashMap">
	<![CDATA[ 
           SELECT T.ORDERNO, T.STATUSCODE, T.USER_NM, T.USER_ID, T.PHONE_NO,
                  T.OTYPE, T.PAYNAME, T.PTYPE,
                  T.MGNTNO, T.SUBJECT_TITLE, T.LECTURE_NO, T.LEC_TITLE,
                  T.SUBJECT_TEACHER, T.SUB_AVR, T.PAYMENT,
                  T.ORDER_DATE, T.CANCEL_DATE, T.START_DATE, T.END_DATE, #{searchEndDate} SEARCHENDDATE,
                  T.PERIOD, T.REST_PERIOD,
                  T.SUBJECT_PRICE, T.PRICE, T.CANCEL_PRICE, 
                  (T.PRICE + T.CANCEL_PRICE) DIV_PRICE, 
                  ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) SUB_PRICE, 
                  CASE WHEN T.STATUSCODE <> 'DLV230' AND T.CANCEL_PRICE <> 0 THEN 0
                  ELSE 
                  (ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) - LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR)))
                  END REST_PRICE,
                  CASE WHEN T.STATUSCODE <> 'DLV230' AND T.CANCEL_PRICE <> 0 THEN (T.PRICE + T.CANCEL_PRICE)
                  ELSE LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR)) 
                  END USE_PRICE
          FROM (
                   SELECT 
                         OO.ORDERNO, OM.STATUSCODE, OO.USER_NM, OO.USER_ID, OO.PHONE_NO, 
                         '온라인' OTYPE, FN_GET_CODE_NM('PAYMENT_CODE', OA.PAYCODE) PAYNAME, 
                         DECODE(OM.PTYPE,'D','단과반','J','종합반','N','선택형종합반', 'Y','프리패스','패키지') PTYPE,
                         OM.MGNTNO, P1.SUBJECT_TITLE, MY.LECTURE_NO, P1.SUBJECT_TITLE LEC_TITLE,
                         (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = P1.SUBJECT_TEACHER) SUBJECT_TEACHER,
                         (NVL(ROUND(OM.PRICE),0) / NVL(ROUND(OM.PRICE),0)) SUB_AVR,
                         P1.SUBJECT_TEACHER_PAYMENT PAYMENT, 
                         TO_CHAR(OM.ISCONFIRM,'YYYY-MM-DD') ORDER_DATE,
                         CASE WHEN OM.STATUSCODE = 'DLV230' THEN ''
                         ELSE 
                            (SELECT TO_CHAR(ISCONFIRM,'YYYY-MM-DD') 
                             FROM TB_ORDER_MGNT_NO 
                             WHERE ORDERNO = OM.ORDERNO 
                             AND MGNTNO = OM.MGNTNO 
                             AND STATUSCODE = 'DLV230' 
                             AND TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
                         END CANCEL_DATE,
                         TO_CHAR(MY.START_DATE,'YYYY-MM-DD') START_DATE, TO_CHAR(MY.END_DATE,'YYYY-MM-DD') END_DATE,
                         MY.PERIOD,
                         NVL(PKG_LECTURE.FN_GET_REST_LECTURE(OM.ORDERNO, OM.MGNTNO, OM.MGNTNO, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0) REST_PERIOD, 
                         PKG_ORDERS.FN_GET_ORDER_MGNT_PRICE (OM.ORDERNO, OM.MGNTNO) SUBJECT_PRICE,
                         OM.PRICE, 
                         CASE WHEN OM.STATUSCODE = 'DLV230' THEN 0
                         ELSE 
                            NVL((SELECT PRICE 
                                 FROM TB_ORDER_MGNT_NO 
                                 WHERE ORDERNO = OM.ORDERNO 
                                 AND MGNTNO= OM.MGNTNO 
                                 AND STATUSCODE = 'DLV230' 
                                 AND TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}),0) 
                         END CANCEL_PRICE,
                         NVL(ROUND(NVL(ROUND(OM.PRICE),0)*(NVL(PKG_LECTURE.FN_GET_REST_LECTURE(OM.ORDERNO, OM.MGNTNO, OM.MGNTNO, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0)/MY.PERIOD)),0) REST_PRICE,
                         NVL(ROUND(NVL(ROUND(OM.PRICE),0)*(1-(NVL(PKG_LECTURE.FN_GET_REST_LECTURE(OM.ORDERNO, OM.MGNTNO, OM.MGNTNO, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0)/MY.PERIOD))),0) USE_PRICE
                   FROM TB_MYLECTURE MY, TB_ORDER_MGNT_NO OM, TB_ORDERS OO, TB_APPROVALS OA, TB_LEC_MST P1, 
                   (SELECT ORDERNO, MGNTNO, MIN(STATUSCODE) STATUSCODE
                    FROM TB_ORDER_MGNT_NO 
                    WHERE STATUSCODE IN ('DLV105', 'DLV230')
                    AND PRICE <> 0
                    AND TO_CHAR(ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                    GROUP BY ORDERNO, MGNTNO) ZZ
                   WHERE OM.PRICE <> 0
                   AND MY.ORDERNO = OM.ORDERNO 
                   AND MY.PACKAGE_NO = OM.MGNTNO
                   AND MY.ORDERNO = OO.ORDERNO
                   AND MY.ORDERNO = OA.ORDERNO
                   AND OM.MGNTNO = P1.LECCODE
                   AND OM.PTYPE = 'D'
                   AND OM.ORDERNO = ZZ.ORDERNO
                   AND OM.MGNTNO = ZZ.MGNTNO
                   AND OM.STATUSCODE = ZZ.STATUSCODE
                  ) T
        ORDER BY T.STATUSCODE DESC, T.USER_NM, T.ORDERNO
       	]]>
	</select>
	
	<select id="MovieSalesP" parameterType="hashMap" resultType="hashMap">
		<![CDATA[ 
        SELECT T.ORDERNO, T.STATUSCODE, T.USER_NM, T.USER_ID, T.PHONE_NO,
                  T.OTYPE, T.PAYNAME, T.PTYPE,
                  T.MGNTNO, T.SUBJECT_TITLE, T.LECTURE_NO, T.LEC_TITLE,
                  T.SUBJECT_TEACHER, T.SUB_AVR, T.PAYMENT,
                  T.ORDER_DATE, T.CANCEL_DATE, T.START_DATE, T.END_DATE, #{searchEndDate} SEARCHENDDATE,
                  T.PERIOD, T.REST_PERIOD,
                  T.SUBJECT_PRICE, T.PRICE, T.CANCEL_PRICE, 
                  (T.PRICE + T.CANCEL_PRICE) DIV_PRICE, 
                  ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) SUB_PRICE, 
                  CASE WHEN T.STATUSCODE <> 'DLV230' AND T.CANCEL_PRICE <> 0 THEN 0
                  ELSE 
                  (ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) - LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR)))
                  END REST_PRICE,
                  CASE WHEN T.STATUSCODE <> 'DLV230' AND T.CANCEL_PRICE <> 0 THEN (T.PRICE + T.CANCEL_PRICE)
                  ELSE LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR)) 
                  END USE_PRICE
        FROM   (
                   SELECT 
                         OO.ORDERNO, OM.STATUSCODE, OO.USER_NM, OO.USER_ID, OO.PHONE_NO, 
                         '온라인' OTYPE, FN_GET_CODE_NM('PAYMENT_CODE', OA.PAYCODE) PAYNAME, 
                         DECODE(OM.PTYPE,'D','단과반','J','종합반','N','선택형종합반', 'Y','프리패스','패키지') PTYPE,
                         OM.MGNTNO, TBM.SUBJECT_TITLE, MY.LECTURE_NO, P1.SUBJECT_TITLE LEC_TITLE,
                         (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = P1.SUBJECT_TEACHER) SUBJECT_TEACHER,
                         (NVL(ROUND(PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(OO.ORDERNO, OM.MGNTNO, MY.LECTURE_NO, OM.STATUSCODE)),0) / NVL(ROUND(OM.PRICE),0)) SUB_AVR,
                         P1.SUBJECT_TEACHER_PAYMENT PAYMENT, 
                         TO_CHAR(OM.ISCONFIRM,'YYYY-MM-DD') ORDER_DATE,
                         CASE WHEN OM.STATUSCODE = 'DLV230' THEN ''
                         ELSE 
                            (SELECT TO_CHAR(ISCONFIRM,'YYYY-MM-DD') 
                             FROM TB_ORDER_MGNT_NO 
                             WHERE ORDERNO = OM.ORDERNO 
                             AND MGNTNO = OM.MGNTNO 
                             AND STATUSCODE = 'DLV230' 
                             AND TO_CHAR(ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
                         END CANCEL_DATE,
                         TO_CHAR(MY.START_DATE,'YYYY-MM-DD') START_DATE, TO_CHAR(MY.END_DATE,'YYYY-MM-DD') END_DATE,
                         MY.PERIOD,
                         NVL(PKG_LECTURE.FN_GET_REST_LECTURE(OO.ORDERNO, OM.MGNTNO, MY.LECTURE_NO, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0) REST_PERIOD, 
                         PKG_ORDERS.FN_GET_ORDER_MGNT_PRICE (OM.ORDERNO, OM.MGNTNO) SUBJECT_PRICE,
                         OM.PRICE, 
                         CASE WHEN OM.STATUSCODE = 'DLV230' THEN 0
                         ELSE 
                            NVL((SELECT PRICE 
                                 FROM TB_ORDER_MGNT_NO 
                                 WHERE ORDERNO = OM.ORDERNO 
                                 AND MGNTNO= OM.MGNTNO 
                                 AND STATUSCODE = 'DLV230' 
                                 AND TO_CHAR(ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}),0) 
                         END CANCEL_PRICE,
                         NVL(ROUND(PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(OO.ORDERNO, OM.MGNTNO, MY.LECTURE_NO, 'DLV105'))*(NVL(PKG_LECTURE.FN_GET_REST_LECTURE(OM.ORDERNO, OM.MGNTNO, OM.MGNTNO, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0)/MY.PERIOD),0) REST_PRICE,
                         NVL(ROUND(PKG_CART.FN_GET_ON_PRICE_PRF_PACKAGE(OO.ORDERNO, OM.MGNTNO, MY.LECTURE_NO, 'DLV105'))*(1-(NVL(PKG_LECTURE.FN_GET_REST_LECTURE(OM.ORDERNO, OM.MGNTNO, OM.MGNTNO, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0)/MY.PERIOD)),0) USE_PRICE
                   FROM TB_LEC_MST TBM, TB_MYLECTURE MY, TB_ORDER_MGNT_NO OM, TB_ORDERS OO, TB_APPROVALS OA, 
                    (SELECT A.LECCODE, A.MST_LECCODE, B.SUBJECT_TEACHER, B.SUBJECT_PRICE, B.SUBJECT_TITLE, 
                            B.SUBJECT_PERIOD, B.LEC_TYPE_CHOICE, B.SUBJECT_TEACHER_PAYMENT
                     FROM TB_LEC_JONG A
                     LEFT JOIN TB_LEC_MST B
                     ON A.MST_LECCODE = B.LECCODE
                     WHERE B.LEC_TYPE_CHOICE = 'D') P1,
                    (SELECT ORDERNO, MGNTNO, MIN(STATUSCODE) STATUSCODE
                     FROM TB_ORDER_MGNT_NO 
                     WHERE STATUSCODE IN ('DLV105', 'DLV230')
                     AND PRICE <> 0
                     AND TO_CHAR(ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                     GROUP BY ORDERNO, MGNTNO) ZZ
                   WHERE OM.PTYPE IN ('J', 'N', 'P')
                   AND OM.PRICE <> 0
                   AND MY.ORDERNO = OM.ORDERNO 
                   AND MY.PACKAGE_NO = OM.MGNTNO
                   AND MY.ORDERNO = OO.ORDERNO
                   AND MY.ORDERNO = OA.ORDERNO
                   AND P1.LECCODE = OM.MGNTNO 
                   AND P1.MST_LECCODE = MY.LECTURE_NO 
                   AND P1.LECCODE = MY.PACKAGE_NO
                   AND TBM.LECCODE = OM.MGNTNO
                   AND OM.ORDERNO = ZZ.ORDERNO
                   AND OM.MGNTNO = ZZ.MGNTNO
                   AND OM.STATUSCODE = ZZ.STATUSCODE
                  ) T
        ORDER BY T.STATUSCODE DESC, T.USER_NM, T.ORDERNO
	]]>
	</select>
	
	<select id="MovieSalesY" parameterType="hashMap" resultType="hashMap">
		<![CDATA[ 
         SELECT T.ORDERNO, T.USER_NM, T.USER_ID, T.PHONE_NO,
                  T.OTYPE, T.PAYNAME, T.PTYPE,
                  T.MGNTNO, T.SUBJECT_TITLE, T.LECTURE_NO, T.LEC_TITLE,
                  T.SUBJECT_TEACHER, T.SUB_AVR, T.PAYMENT,
                  T.ORDER_DATE, T.CANCEL_DATE, T.START_DATE, T.END_DATE, #{searchEndDate} SEARCHENDDATE,
                  T.PERIOD, T.REST_PERIOD,
                  T.SUBJECT_PRICE, T.PRICE, T.CANCEL_PRICE, 
                  (T.PRICE + T.CANCEL_PRICE) DIV_PRICE, 
                  ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) SUB_PRICE, 
                  (ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) - LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR))) REST_PRICE,
                  LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR)) USE_PRICE
            FROM   (
                    SELECT 
                         OO.ORDERNO, OO.USER_NM, OO.USER_ID, OO.PHONE_NO, 
                         '온라인' OTYPE, FN_GET_CODE_NM('PAYMENT_CODE', OA.PAYCODE) PAYNAME, 
                         DECODE(OM.PTYPE,'D','단과반','J','종합반','N','선택형종합반', 'Y','프리패스','패키지') PTYPE,
                         OM.MGNTNO, MY.SUBJECT_TITLE, OM.MGNTNO LECTURE_NO, MY.SUBJECT_TITLE LEC_TITLE,
                         (SELECT USER_NM FROM TB_MA_MEMBER WHERE USER_ID = MY.SUBJECT_TEACHER) SUBJECT_TEACHER,
                         (NVL(ROUND(OM.PRICE),0) / NVL(ROUND(OM.PRICE),0)) SUB_AVR,
                         TM.PAYMENT, 
                         TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') ORDER_DATE,
                         (SELECT TO_CHAR(ISCONFIRM,'YYYY-MM-DD') FROM TB_ORDER_MGNT_NO WHERE ORDERNO = OM.ORDERNO AND MGNTNO= OM.MGNTNO AND STATUSCODE = 'DLV230') CANCEL_DATE,
                         TO_CHAR(MY.START_DATE,'YYYYMMDD') START_DATE, TO_CHAR(MY.END_DATE,'YYYYMMDD') END_DATE,
                         MY.PERIOD,
                         NVL(PKG_LECTURE.FN_GET_REST_YEAR_PASS(OO.ORDERNO, OM.MGNTNO, MY.END_DATE, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0) REST_PERIOD, 
                         PKG_ORDERS.FN_GET_ORDER_MGNT_PRICE (OM.ORDERNO, OM.MGNTNO) SUBJECT_PRICE,
                         OM.PRICE, 
                         NVL((SELECT PRICE FROM TB_ORDER_MGNT_NO WHERE ORDERNO = OM.ORDERNO AND MGNTNO= OM.MGNTNO AND STATUSCODE = 'DLV230'),0) CANCEL_PRICE,
                         NVL(ROUND(NVL(ROUND(OM.PRICE),0)*(NVL(PKG_LECTURE.FN_GET_REST_YEAR_PASS(OO.ORDERNO, OM.MGNTNO, MY.END_DATE, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0)/MY.PERIOD)),0) REST_PRICE,
                         NVL(ROUND(NVL(ROUND(OM.PRICE),0)*(1-(NVL(PKG_LECTURE.FN_GET_REST_YEAR_PASS(OO.ORDERNO, OM.MGNTNO, MY.END_DATE, (TO_CHAR(TO_DATE(#{searchEndDate})+1))),0)/MY.PERIOD))),0) USE_PRICE
                    FROM   (
                             SELECT DISTINCT
                                  B.SUBJECT_TEACHER
                                  ,B.SUBJECT_TITLE
                                  ,B.SUBJECT_PRICE
                                  ,A.PACKAGE_NO
                                  ,(A.START_DATE+FN_GET_YEAR_PACKAGE_DAY(B.SUBJECT_PERIOD)-1) END_DATE
                                  ,A.START_DATE
                                  ,FN_GET_YEAR_PACKAGE_DAY(B.SUBJECT_PERIOD) PERIOD
                                  ,'' LECTURE_NO
                                  , A.ORDERNO
                            FROM  TB_ORDER_YEARPACKAGE A, TB_LEC_MST B 
                            WHERE A.PACKAGE_NO = B.LECCODE
                           ) MY
                           JOIN (SELECT A.ORDERNO
                                       ,A.MGNTNO
                                       ,A.PRICE
                                       ,A.ISCONFIRM
                                       ,A.PTYPE
                                 FROM   TB_ORDER_MGNT_NO A
                                 WHERE  A.STATUSCODE = 'DLV105'
                                 AND A.PTYPE = 'Y'
                                 AND A.PRICE > 0
                                ) OM
                           ON MY.ORDERNO = OM.ORDERNO AND MY.PACKAGE_NO = OM.MGNTNO
                           JOIN TB_ORDERS OO
                           ON MY.ORDERNO = OO.ORDERNO
                           JOIN TB_APPROVALS OA
                           ON MY.ORDERNO = OA.ORDERNO
                           LEFT OUTER JOIN TB_MA_MEMBER TM
                           ON TM.USER_ID = MY.SUBJECT_TEACHER
                    WHERE  TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                   ) T
            ORDER BY T.USER_NM, T.ORDERNO
	]]>
	</select>
	
	<select id="BookSales" parameterType="hashMap" resultType="hashMap">
		<![CDATA[ 
        SELECT T.ORDERNO, T.STATUSCODE, T.USER_NM, T.USER_ID, T.PHONE_NO,
                  T.OTYPE, T.PAYNAME, T.PTYPE,
                  T.MGNTNO, T.SUBJECT_TITLE, T.LECTURE_NO, T.LEC_TITLE,
                  T.SUBJECT_TEACHER, T.SUB_AVR, T.PAYMENT,
                  T.ORDER_DATE, T.CANCEL_DATE, T.START_DATE, T.END_DATE, #{searchEndDate} SEARCHENDDATE,
                  T.PERIOD, T.REST_PERIOD,
                  T.SUBJECT_PRICE, T.PRICE, T.CANCEL_PRICE, 
                  (T.PRICE + T.CANCEL_PRICE) DIV_PRICE, 
                  ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) SUB_PRICE, 
                  CASE WHEN T.STATUSCODE <> 'DLV230' AND T.CANCEL_PRICE <> 0 THEN 0
                  ELSE 
                  (ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR) - LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR)))
                  END REST_PRICE,
                  CASE WHEN T.STATUSCODE <> 'DLV230' AND T.CANCEL_PRICE <> 0 THEN (T.PRICE + T.CANCEL_PRICE)
                  ELSE LEAST(T.USE_PRICE, ROUND((T.PRICE + T.CANCEL_PRICE)*T.SUB_AVR)) 
                  END USE_PRICE
        FROM   (
                   SELECT 
                         OO.ORDERNO, OM.STATUSCODE, OO.USER_NM, OO.USER_ID, OO.PHONE_NO, 
                         '온라인' OTYPE, FN_GET_CODE_NM('PAYMENT_CODE', OA.PAYCODE) PAYNAME, 
                         '도서' PTYPE,
                         OM.MGNTNO, P1.BOOK_NM SUBJECT_TITLE, RSC_ID LECTURE_NO, P1.BOOK_NM LEC_TITLE,
                         '' SUBJECT_TEACHER,
                         (NVL(ROUND(OM.PRICE),0) / NVL(ROUND(OM.PRICE),0)) SUB_AVR,
                         100 PAYMENT, 
                         TO_CHAR(OM.ISCONFIRM,'YYYY-MM-DD') ORDER_DATE,
                         CASE WHEN OM.STATUSCODE = 'DLV230' THEN ''
                         ELSE 
                            (SELECT TO_CHAR(ISCONFIRM,'YYYY-MM-DD') 
                             FROM TB_ORDER_MGNT_NO 
                             WHERE ORDERNO = OM.ORDERNO 
                             AND MGNTNO = OM.MGNTNO 
                             AND STATUSCODE = 'DLV230' 
                             AND TO_CHAR(ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate})
                         END CANCEL_DATE,
                         TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') START_DATE, TO_CHAR(OM.ISCONFIRM,'YYYYMMDD') END_DATE,
                         0 PERIOD,
                         0 REST_PERIOD, 
                         P1.DISCOUNT_PRICE SUBJECT_PRICE,
                         OM.PRICE, 
                         CASE WHEN OM.STATUSCODE = 'DLV230' THEN 0
                         ELSE 
                            NVL((SELECT PRICE 
                                 FROM TB_ORDER_MGNT_NO 
                                 WHERE ORDERNO = OM.ORDERNO 
                                 AND MGNTNO= OM.MGNTNO 
                                 AND STATUSCODE = 'DLV230' 
                                 AND TO_CHAR(ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}),0) 
                         END CANCEL_PRICE,
                         0 REST_PRICE,
                         OM.PRICE USE_PRICE
                    FROM TB_ORDER_MGNT_NO OM, TB_ORDERS OO, TB_APPROVALS OA, TB_CA_BOOK P1,
                   (SELECT ORDERNO, MGNTNO, MIN(STATUSCODE) STATUSCODE
                    FROM TB_ORDER_MGNT_NO 
                    WHERE STATUSCODE IN ('DLV105', 'DLV110', 'DLV120', 'DLV125', 'DLV130', 'DLV230')
                    AND PRICE <> 0
                    AND TO_CHAR(ISCONFIRM,'YYYYMMDD') BETWEEN #{searchStartDate} AND #{searchEndDate}
                    GROUP BY ORDERNO, MGNTNO) ZZ
                   WHERE OM.PRICE <> 0
                   AND OM.ORDERNO = OO.ORDERNO
                   AND OM.ORDERNO = OA.ORDERNO
                   AND OM.MGNTNO = P1.RSC_ID
                   AND OM.PTYPE = 'L'
                   AND OM.ORDERNO = ZZ.ORDERNO
                   AND OM.MGNTNO = ZZ.MGNTNO
                   AND OM.STATUSCODE = ZZ.STATUSCODE
                  ) T
        ORDER BY T.USER_NM, T.ORDERNO
	]]>
	</select>
	
</mapper>