<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminManagementAuth">
  <!-- 권한 관리 ======================================================================================  -->

  <select id="authContorlList" parameterType="hashMap" resultType="hashMap" >
  SELECT * FROM   (
    SELECT A.*, ROWNUM rnum FROM (
        SELECT
            SITE_ID ,
            SITE_NM ,
            ISUSE,
            DECODE(ONOFF_DIV, 'A', '전체', 'O', '온라인' , 'F', '오프라인' , 'T', '모의고사') ONOFF_DIV_NM  ,
            ONOFF_DIV ,
            TO_CHAR(REG_DT , 'yyyy-mm-dd')  REG_DT ,
            REG_ID ,
            TO_CHAR(UPD_DT , 'yyyy-mm-dd')  UPD_DT ,
            UPD_ID
        FROM TB_SG_SITE
        WHERE 1=1
        <if test="SEARCHKEYWORD != null and SEARCHKEYWORD != ''">
          <choose>
            <when test='SEARCHTYPE == "SITE_ID"'>
              AND SITE_ID LIKE '%'||#{SEARCHKEYWORD}||'%'
            </when>
            <when test='SEARCHTYPE == "SITE_NM"'>
              AND SITE_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
            </when>
            <when test='SEARCHTYPE == ""'>
              AND (SITE_ID LIKE '%'||#{SEARCHKEYWORD}||'%'
                OR SITE_NM LIKE '%'||#{SEARCHKEYWORD}||'%' )
            </when>
          </choose>
        </if>
        ORDER BY SITE_ID DESC
    ) A
    WHERE rownum &lt;= #{endNo}
  )
  WHERE rnum &gt; #{startNo}
  </select>

  <select id="authContorlListCount" parameterType="hashMap" resultType="int">
    SELECT
        COUNT(*) CNT
    FROM TB_SG_SITE
    WHERE 1=1
    <if test="SEARCHKEYWORD != null and SEARCHKEYWORD != ''">
      <choose>
        <when test='SEARCHTYPE == "SITE_ID"'>
          AND SITE_ID LIKE '%'||#{SEARCHKEYWORD}||'%'
        </when>
        <when test='SEARCHTYPE == "SITE_NM"'>
          AND SITE_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
        </when>
        <when test='SEARCHTYPE == ""'>
          AND (SITE_ID LIKE '%'||#{SEARCHKEYWORD}||'%'
            OR SITE_NM LIKE '%'||#{SEARCHKEYWORD}||'%' )
        </when>
      </choose>
    </if>
  </select>

  <insert id="authControlInsertProcess" parameterType="hashMap" >
    INSERT INTO TB_SG_SITE(
        SITE_ID ,
        SITE_NM ,
        ONOFF_DIV ,
        ISUSE,
        REG_DT ,
        REG_ID
    ) VALUES (
        #{SITE_ID} ,
        #{SITE_NM} ,
        #{ONOFF_DIV},
        #{ISUSE},
        SYSDATE,
        #{REG_ID}
    )
  </insert>

  <select id="authControlDetail" parameterType="hashMap" resultType="hashMap">
    SELECT
        SITE_ID ,
        SITE_NM ,
        ONOFF_DIV,
        ISUSE,
        TO_CHAR(REG_DT , 'yyyy-mm-dd')  REG_DT ,
        REG_ID ,
        TO_CHAR(UPD_DT , 'yyyy-mm-dd')  UPD_DT ,
        UPD_ID
    FROM TB_SG_SITE
    WHERE SITE_ID = #{DETAIL_SITE_ID}
  </select>

  <update id="authControlUpdateProcess" parameterType="hashMap">
    UPDATE   TB_SG_SITE
    SET
        SITE_ID = #{SITE_ID} ,
        SITE_NM= #{SITE_NM},
        ONOFF_DIV= #{ONOFF_DIV},
        ISUSE= #{ISUSE},
        UPD_DT = SYSDATE,
        UPD_ID =  #{UPD_ID}
    WHERE SITE_ID = #{DETAIL_SITE_ID}
  </update>

  <update id="authControlMenuUpdateProcess" parameterType="hashMap">
    UPDATE   TB_SG_SITE_MENU
    SET
        SITE_ID = #{SITE_ID}
    WHERE SITE_ID = #{DETAIL_SITE_ID}
  </update>

  <delete id="authControlDelete" parameterType="hashMap">
    DELETE FROM TB_SG_SITE WHERE SITE_ID = #{DETAIL_SITE_ID}
  </delete>

  <delete id="authControlCheckDelete" parameterType="hashMap">
    DELETE FROM TB_SG_SITE  WHERE SITE_ID IN(${deleteIds})
  </delete>

  <select id="authControlOnMenuList" parameterType="hashMap" resultType="hashMap">
    <![CDATA[
    select MENU_ID,
        DECODE(MENU_SEQ, '000', MENU_NM, LPAD('  ', LENGTH(MENU_SEQ)*2) || MENU_NM) MENU_NM,
        P_MENUID, MENU_SEQ,
        (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
        from tb_sg_menu_mst
        connect by prior p_menuid = menu_id
        start with menu_id = a.menu_id) as UP_P_MENUID_RECUR,
        (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
        from tb_sg_menu_mst
        connect by prior menu_id = p_menuid
        start with menu_id = a.menu_id) as DOWN_P_MENUID_RECUR
    from   tb_sg_menu_mst a
    where  menu_id like 'OM%'
    ORDER BY MENU_SEQ
    ]]>
  </select>

  <select id="authControlOffMenuList" parameterType="hashMap" resultType="hashMap">
    select MENU_ID,
        DECODE(MENU_SEQ, '000', MENU_NM, LPAD('  ', LENGTH(MENU_SEQ)*2) || MENU_NM) MENU_NM,
        P_MENUID, MENU_SEQ,
        (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
        from tb_sg_menu_mst
        connect by prior p_menuid = menu_id
        start with menu_id = a.menu_id) as  UP_P_MENUID_RECUR,
        (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
        from tb_sg_menu_mst
        connect by prior menu_id = p_menuid
        start with menu_id = a.menu_id) as DOWN_P_MENUID_RECUR
    from   tb_sg_menu_mst a
    where  menu_id like 'FM%'
    ORDER BY MENU_SEQ
  </select>

  <select id="authControlTestMenuList" parameterType="hashMap" resultType="hashMap">
    select MENU_ID,
        DECODE(MENU_SEQ, '000', MENU_NM, LPAD('  ', LENGTH(MENU_SEQ)*2) || MENU_NM) MENU_NM,
        P_MENUID, MENU_SEQ,
        (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
        from tb_sg_menu_mst
        connect by prior p_menuid = menu_id
        start with menu_id = a.menu_id) as  UP_P_MENUID_RECUR,
        (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
        from tb_sg_menu_mst
        connect by prior menu_id = p_menuid
        start with menu_id = a.menu_id) as DOWN_P_MENUID_RECUR
    from   tb_sg_menu_mst a
    where  menu_id like 'TM%'
    ORDER BY MENU_SEQ
  </select>

  <delete id="deleteAuthMenu" parameterType="hashMap">
    DELETE FROM TB_SG_SITE_MENU
    WHERE SITE_ID = #{DETAIL_SITE_ID}
    <choose>
      <when test='MENU_ONOFF == "ON"'>
        AND MENU_ID LIKE 'OM%'
      </when>
      <when test='MENU_ONOFF == "OFF"'>
        AND MENU_ID LIKE 'FM%'
      </when>
      <when test='MENU_ONOFF == "TEST"'>
        AND MENU_ID LIKE 'TM%'
      </when>
    </choose>
  </delete>

  <insert id="authMenuInsertProcess" parameterType="hashMap">
    INSERT INTO TB_SG_SITE_MENU(
        SITE_ID ,
        MENU_ID ,
        REG_DT ,
        REG_ID
    ) VALUES (
        #{DETAIL_SITE_ID} ,
        #{MENU_ID} ,
        SYSDATE ,
        #{REG_ID}
    )
  </insert>

  <select id="authMenuList" parameterType="hashMap" resultType="hashMap" >
    SELECT
        SITE_ID , MENU_ID
        FROM TB_SG_SITE_MENU WHERE SITE_ID=#{DETAIL_SITE_ID}
    <choose>
      <when test='MENU_ONOFF == "ON"'>
        AND MENU_ID LIKE 'OM%'
      </when>
      <when test='MENU_ONOFF == "OFF"'>
        AND MENU_ID LIKE 'FM%'
      </when>
      <when test='MENU_ONOFF == "TEST"'>
        AND MENU_ID LIKE 'TM%'
      </when>
    </choose>
  </select>

  <delete id="deleteSiteIdAuthMenu" parameterType="hashMap">
    DELETE FROM TB_SG_SITE_MENU WHERE SITE_ID = #{DETAIL_SITE_ID}
  </delete>

  <delete id="deleteSiteIdCheckAuthMenu" parameterType="hashMap">
    DELETE FROM TB_SG_SITE_MENU  WHERE SITE_ID IN(${deleteIds})
  </delete>

</mapper>
