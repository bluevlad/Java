<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminManagement">
  <select id="getCommonCodeList" parameterType="hashMap" resultType="hashMap" >
  SELECT * FROM     (
    SELECT A.*, ROWNUM rnum
        FROM (
            SELECT
                SYS_CD ,
                SYS_NM ,
                CODE_NO,
                CODE_CD,
                CODE_NM,
                CODE_VAL ,
                CODE_INFO,
                ISUSE,
                TO_CHAR(REG_DT , 'yyyy-mm-dd')  REG_DT ,
                REG_ID ,
                TO_CHAR(UPD_DT , 'yyyy-mm-dd')  UPD_DT ,
                UPD_ID
            FROM TB_BA_CONFIG_CD
            WHERE 1=1
            <if test="SEARCHKEYWORD != null and SEARCHKEYWORD != ''">
              <choose>
                <when test='SEARCHTYPE == "CODE"'>
                  AND SYS_CD LIKE '%'||#{SEARCHKEYWORD}||'%'
                </when>
                <when test='SEARCHTYPE == "CODENM"'>
                  AND SYS_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
                </when>
                <when test='SEARCHTYPE == "SETTINGCODE"'>
                  AND CODE_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
                </when>
                <when test='SEARCHTYPE == ""'>
                  AND (SYS_CD LIKE '%'||#{SEARCHKEYWORD}||'%'
                    OR SYS_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
                    OR CODE_NM LIKE '%'||#{SEARCHKEYWORD}||'%')
                </when>
              </choose>
            </if>
            ORDER BY CODE_NO DESC
        ) A
        WHERE rownum &lt;= #{endNo}
    )
  WHERE rnum &gt; #{startNo}
  </select>

  <select id="getCommonCodeListCount" parameterType="hashMap" resultType="int">
    SELECT
        COUNT(*) CNT
    FROM TB_BA_CONFIG_CD
    WHERE 1=1
    <if test="SEARCHKEYWORD != null and SEARCHKEYWORD != ''">
      <choose>
        <when test='SEARCHTYPE == "CODE"'>
          AND SYS_CD LIKE '%'||#{SEARCHKEYWORD}||'%'
        </when>
        <when test='SEARCHTYPE == "CODENM"'>
          AND SYS_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
        </when>
        <when test='SEARCHTYPE == "SETTINGCODE"'>
          AND CODE_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
        </when>
      </choose>
    </if>
  </select>

  <insert id="commonCodeInsertProcess" parameterType="hashMap" >
    INSERT INTO TB_BA_CONFIG_CD(
        SYS_CD ,
        SYS_NM ,
        CODE_NO,
        CODE_CD,
        CODE_NM,
        CODE_VAL ,
        CODE_INFO,
        ISUSE,
        REG_DT ,
        REG_ID
    )VALUES(
        #{SYS_CD} ,
        #{SYS_NM} ,
        SEQ_TBA_CONFIG_CD_ID.NEXTVAL,
        #{CODE_CD},
        #{CODE_NM},
        #{CODE_VAL} ,
        #{CODE_INFO},
        #{ISUSE},
        SYSDATE,
        #{REG_ID}
    )
  </insert>

  <select id="commonCodeDetail" parameterType="hashMap" resultType="hashMap">
    SELECT
        SYS_CD ,
        SYS_NM ,
        CODE_NO,
        CODE_CD,
        CODE_NM,
        CODE_VAL ,
        CODE_INFO,
        ISUSE,
        TO_CHAR(REG_DT , 'yyyy-mm-dd')  REG_DT ,
        REG_ID ,
        TO_CHAR(UPD_DT , 'yyyy-mm-dd')  UPD_DT ,
        UPD_ID
    FROM TB_BA_CONFIG_CD
    WHERE CODE_NO = #{DETAIL_CODE_NO}
  </select>

  <update id="commonCodeUpdateProcess" parameterType="hashMap">
    UPDATE TB_BA_CONFIG_CD
    SET
        SYS_NM = #{SYS_NM} ,
        CODE_CD= #{CODE_CD},
        CODE_NM= #{CODE_NM},
        CODE_VAL= #{CODE_VAL} ,
        CODE_INFO= #{CODE_INFO},
        ISUSE= #{ISUSE},
        UPD_DT = SYSDATE,
        UPD_ID =  #{UPD_ID}
    WHERE CODE_NO = #{DETAIL_CODE_NO}
  </update>

  <delete id="commonCodeDelete" parameterType="hashMap">
    DELETE FROM TB_BA_CONFIG_CD WHERE CODE_NO = #{DETAIL_CODE_NO}
  </delete>
  <delete id="commonCodeCheckDelete" parameterType="hashMap">
    DELETE FROM TB_BA_CONFIG_CD  WHERE CODE_NO IN(${deleteIds})
  </delete>

  <!-- 메뉴 관리 ======================================================================================  -->
  <select id="getMenuTree"  resultType="hashMap" >
    SELECT
          MENU_ID , MENU_NM , MENU_SEQ ,MENU_URL, P_MENUID , ISUSE , TARGET , MENU_INFO
    FROM TB_SG_MENU_MST
    ORDER BY MENU_SEQ , MENU_ID
  </select>
  <!-- 메뉴 상세정보 -->
  <select id="getDetailMenu" parameterType="hashMap"  resultType="hashMap" >
    SELECT
          ONOFF_DIV , MENU_ID , MENU_NM , MENU_SEQ ,MENU_URL, P_MENUID , ISUSE , TARGET , MENU_INFO
    FROM TB_SG_MENU_MST
    WHERE MENU_ID = #{MENU_ID}
  </select>

  <update id="menuUpdateProcess" parameterType="hashMap">
    UPDATE TB_SG_MENU_MST
    SET
        MENU_NM=#{MENU_NM} ,
        MENU_SEQ =#{MENU_SEQ},
        MENU_URL =#{MENU_URL} ,
        P_MENUID =#{P_MENUID} ,
        ISUSE   =#{ISUSE},
        TARGET  =#{TARGET},
        MENU_INFO =#{MENU_INFO},
        UPD_ID      =#{UPD_ID},
        UPD_DT   = SYSDATE
    WHERE MENU_ID = #{MENU_ID}
  </update>

  <delete id="menuDeleteProcess" parameterType="hashMap" >
    DELETE FROM TB_SG_MENU_MST WHERE MENU_ID = #{MENU_ID}
  </delete>

  <select id="menuIdCheck" parameterType="hashMap" resultType="int">
    SELECT
        COUNT(*) CNT
    FROM TB_SG_MENU_MST
    WHERE MENU_ID = #{MENU_ID}
  </select>

  <select id="getMaxMenuId" parameterType="hashMap" resultType="hashMap">
     SELECT
        CONCAT(REGEXP_REPLACE(MAX(MENU_ID), '.{3}$') ,    LPAD(SUBSTR(MAX(MENU_ID), -3)+1, 3, '0')   )      MENU_ID ,
        CONCAT(REGEXP_REPLACE(MAX(MENU_SEQ), '.{3}$') ,  LPAD(SUBSTR(MAX(MENU_SEQ), -3)+1, 3, '0')   )  MENU_SEQ
    FROM TB_SG_MENU_MST
    WHERE P_MENUID=#{MENU_ID}
    <!-- SELECT
                DECODE(CONCAT(REGEXP_REPLACE(MAX(MENU_ID), '.{3}$') ,    LPAD(substr(MAX(MENU_ID), -3)+1, 3, '0')   )
                            , NULL
                            , CONCAT(REGEXP_REPLACE(#{MENU_ID}, '.{3}$') ,    LPAD(1, 3, '0')   )
                            ,CONCAT(REGEXP_REPLACE(MAX(MENU_ID), '.{3}$') ,    LPAD(substr(MAX(MENU_ID), -3)+1, 3, '0')   )
                )       MENU_ID ,
                DECODE(CONCAT(REGEXP_REPLACE(MAX(MENU_SEQ), '.{3}$') ,    LPAD(substr(MAX(MENU_SEQ), -3)+1, 3, '0')   )
                            , NULL
                            , LPAD(1, 3, '0')
                            ,CONCAT(REGEXP_REPLACE(MAX(MENU_SEQ), '.{3}$') ,  LPAD(substr(MAX(MENU_SEQ), -3)+1, 3, '0')   )
                )       MENU_SEQ
    FROM TB_SG_MENU_MST
    WHERE P_MENUID=#{MENU_ID} -->
  </select>

  <insert id="menuInsertProcess" parameterType="hashMap">
    INSERT INTO TB_SG_MENU_MST(
        ONOFF_DIV ,
        MENU_ID ,
        MENU_NM ,
        MENU_SEQ,
        MENU_URL,
        P_MENUID ,
        ISUSE,
        TARGET,
        MENU_INFO ,
        REG_DT ,
        REG_ID
    )VALUES(
        #{ONOFF_DIV} ,
        #{MENU_ID} ,
        #{MENU_NM} ,
        #{MENU_SEQ},
        #{MENU_URL},
        #{P_MENUID} ,
        #{ISUSE},
        #{TARGET},
        #{MENU_INFO} ,
        SYSDATE ,
        #{REG_ID}
    )
  </insert>

  <!-- 권한 관리 ======================================================================================  -->

  <select id="authContorlList" parameterType="hashMap" resultType="hashMap" >
  SELECT * FROM     (
    SELECT A.*, ROWNUM rnum
    FROM (
        SELECT
            SITE_ID ,
            SITE_NM ,
            ISUSE,
            TO_CHAR(REG_DT , 'yyyy-mm-dd')  REG_DT ,
            REG_ID ,
            TO_CHAR(UPD_DT , 'yyyy-mm-dd')  UPD_DT ,
            UPD_ID
        FROM TB_SG_SITE
        WHERE 1=1
        <if test="SEARCHKEYWORD != null and SEARCHKEYWORD != ''">
          <choose>
            <when test='SEARCHTYPE == "SITE_ID"'>
              AND SITE_ID LIKE '%'||#{SEARCHKEYWORD}||'%'
            </when>
            <when test='SEARCHTYPE == "SITE_NM"'>
              AND SITE_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
            </when>
            <when test='SEARCHTYPE == ""'>
              AND (SITE_ID LIKE '%'||#{SEARCHKEYWORD}||'%'
                OR SITE_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
            </when>
          </choose>
        </if>
        ORDER BY SITE_ID DESC
    ) A
    WHERE rownum &lt;= #{endNo}
  )
  WHERE rnum &gt; #{startNo}
  </select>

  <select id="authContorlListCount" parameterType="hashMap" resultType="int">
    SELECT
        COUNT(*) CNT
    FROM TB_SG_SITE
    WHERE 1=1
    <if test="SEARCHKEYWORD != null and SEARCHKEYWORD != ''">
      <choose>
        <when test='SEARCHTYPE == "SITE_ID"'>
          AND SITE_ID LIKE '%'||#{SEARCHKEYWORD}||'%'
        </when>
        <when test='SEARCHTYPE == "SITE_NM"'>
          AND SITE_NM LIKE '%'||#{SEARCHKEYWORD}||'%'
        </when>
      </choose>
    </if>
  </select>

  <insert id="authControlInsertProcess" parameterType="hashMap" >
    INSERT INTO TB_SG_SITE(
        SITE_ID ,
        SITE_NM ,
        ISUSE,
        REG_DT ,
        REG_ID
    )VALUES(
        #{SITE_ID} ,
        #{SITE_NM} ,
        #{ISUSE},
        SYSDATE,
        #{REG_ID}
    )
  </insert>

  <select id="authControlDetail" parameterType="hashMap" resultType="hashMap">
     SELECT
        SITE_ID ,
        SITE_NM ,
        ISUSE,
        TO_CHAR(REG_DT , 'yyyy-mm-dd')  REG_DT ,
        REG_ID ,
        TO_CHAR(UPD_DT , 'yyyy-mm-dd')  UPD_DT ,
        UPD_ID
     FROM TB_SG_SITE
     WHERE SITE_ID = #{DETAIL_SITE_ID}
  </select>

  <update id="authControlUpdateProcess" parameterType="hashMap">
    UPDATE   TB_SG_SITE
    SET
        SITE_ID = #{SITE_ID} ,
        SITE_NM= #{SITE_NM},
        ISUSE= #{ISUSE},
        UPD_DT = SYSDATE,
        UPD_ID =  #{UPD_ID}
    WHERE SITE_ID = #{DETAIL_SITE_ID}
  </update>

  <delete id="authControlDelete" parameterType="hashMap">
    DELETE FROM TB_SG_SITE WHERE SITE_ID = #{DETAIL_SITE_ID}
  </delete>

  <delete id="authControlCheckDelete" parameterType="hashMap">
    DELETE FROM TB_SG_SITE  WHERE SITE_ID IN(${deleteIds})
  </delete>

  <select id="authControlOnMenuList" parameterType="hashMap" resultType="hashMap">
    <![CDATA[
     select MENU_ID,
           DECODE(MENU_SEQ, '000', MENU_NM, LPAD('  ', LENGTH(MENU_SEQ)*2) || MENU_NM) MENU_NM,
           P_MENUID, MENU_SEQ,
           (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
            from tb_sg_menu_mst
            connect by prior p_menuid = menu_id
            start with menu_id = a.menu_id) as UP_P_MENUID_RECUR,
           (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
            from tb_sg_menu_mst
            connect by prior menu_id = p_menuid
            start with menu_id = a.menu_id) as DOWN_P_MENUID_RECUR
    from   tb_sg_menu_mst a
    where  menu_id like 'OM%'
    ORDER BY MENU_SEQ
    ]]>
  </select>

  <select id="authControlOffMenuList" parameterType="hashMap" resultType="hashMap">
     select MENU_ID,
            DECODE(MENU_SEQ, '000', MENU_NM, LPAD('  ', LENGTH(MENU_SEQ)*2) || MENU_NM) MENU_NM,
            P_MENUID, MENU_SEQ,
           (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
            from tb_sg_menu_mst
            connect by prior p_menuid = menu_id
            start with menu_id = a.menu_id) as  UP_P_MENUID_RECUR,
           (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
            from tb_sg_menu_mst
            connect by prior menu_id = p_menuid
            start with menu_id = a.menu_id) as DOWN_P_MENUID_RECUR
    from   tb_sg_menu_mst a
    where  menu_id like 'FM%'
    ORDER BY MENU_SEQ
  </select>

  <select id="authControlTestMenuList" parameterType="hashMap" resultType="hashMap">
     select MENU_ID,
            DECODE(MENU_SEQ, '000', MENU_NM, LPAD('  ', LENGTH(MENU_SEQ)*2) || MENU_NM) MENU_NM,
            P_MENUID, MENU_SEQ,
           (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
            from tb_sg_menu_mst
            connect by prior p_menuid = menu_id
            start with menu_id = a.menu_id) as  UP_P_MENUID_RECUR,
           (select replace(ltrim(substr(xmlagg(xmlelement(menu_id,','||menu_id)).extract('//text()').getStringVal(),2)),',-1','')
            from tb_sg_menu_mst
            connect by prior menu_id = p_menuid
            start with menu_id = a.menu_id) as DOWN_P_MENUID_RECUR
    from   tb_sg_menu_mst a
    where  menu_id like 'TM%'
    ORDER BY MENU_SEQ
  </select>

  <delete id="deleteAuthMenu" parameterType="hashMap">
    DELETE FROM TB_SG_SITE_MENU
    WHERE SITE_ID = #{DETAIL_SITE_ID}
    <choose>
      <when test='MENU_ONOFF == "ON"'>
        AND MENU_ID LIKE 'OM%'
      </when>
      <when test='MENU_ONOFF == "OFF"'>
        AND MENU_ID LIKE 'FM%'
      </when>
      <when test='MENU_ONOFF == "TEST"'>
        AND MENU_ID LIKE 'TM%'
      </when>
    </choose>
  </delete>

  <insert id="authMenuInsertProcess" parameterType="hashMap">
    INSERT INTO TB_SG_SITE_MENU(
        SITE_ID ,
        MENU_ID ,
        REG_DT ,
        REG_ID
    )VALUES(
        #{DETAIL_SITE_ID} ,
        #{MENU_ID} ,
        SYSDATE,
        #{REG_ID}
    )
  </insert>

  <select id="authMenuList" parameterType="hashMap" resultType="hashMap" >
    SELECT
        SITE_ID , MENU_ID
    FROM TB_SG_SITE_MENU WHERE SITE_ID=#{DETAIL_SITE_ID}
    <choose>
      <when test='MENU_ONOFF == "ON"'>
        AND MENU_ID LIKE 'OM%'
      </when>
      <when test='MENU_ONOFF == "OFF"'>
        AND MENU_ID LIKE 'FM%'
      </when>
      <when test='MENU_ONOFF == "TEST"'>
        AND MENU_ID LIKE 'TM%'
      </when>
    </choose>
  </select>

  <delete id="deleteSiteIdAuthMenu" parameterType="hashMap">
    DELETE FROM TB_SG_SITE_MENU WHERE SITE_ID = #{DETAIL_SITE_ID}
  </delete>
  <delete id="deleteSiteIdCheckAuthMenu" parameterType="hashMap">
    DELETE FROM TB_SG_SITE_MENU  WHERE SITE_ID IN(${deleteIds})
  </delete>
</mapper>
